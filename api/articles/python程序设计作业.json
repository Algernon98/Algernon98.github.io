{"title":"【PYTHON程序设计】实训代码","uid":"462a158341940f456227d8cf6c76d983","slug":"python程序设计作业","date":"2022-11-06T13:55:49.000Z","updated":"2022-11-08T15:53:48.532Z","comments":true,"path":"api/articles/python程序设计作业.json","keywords":null,"cover":[],"content":"<p>教材《Python语言程序设计基础》</p>\n<h2 id=\"第二章作业（9-15实训）\"><a href=\"#第二章作业（9-15实训）\" class=\"headerlink\" title=\"第二章作业（9.15实训）\"></a>第二章作业（9.15实训）</h2><h3 id=\"2-2\"><a href=\"#2-2\" class=\"headerlink\" title=\"2.2\"></a>2.2</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">TempStr &#x3D; input(&quot;请输入带有符号的温度值：&quot;)\nif TempStr[-1] in [&#39;F&#39;,&#39;f&#39;]:\n    C &#x3D; (eval(TempStr[0:-1])-32)&#x2F;1.8\n    print(&quot;转换后的温度是&#123;:.2f&#125;C&quot;.format(C))\nelif TempStr[-1] in [&#39;C&#39;,&#39;C&#39;]:\n    F&#x3D;1.8*eval(TempStr[0:-1])+32\n    print(&quot;转换后的温度是&#123;:.2f&#125;F&quot;.format(F))\nelse:\n    print(&quot;输入格式错误&quot;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/0e548a78ede24f519d877d2614a89a87.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">TempStr &#x3D; input(&quot;请输入带有符号的金额：&quot;)\nif TempStr[-1] in [&#39;$&#39;]:\n    C &#x3D; (eval(TempStr[0:-1]))*6\n    print(&quot;该金额对应的人民币额度是&#123;:.2f&#125;￥&quot;.format(C))\nelif TempStr[-1] in [&#39;￥&#39;]:\n    F&#x3D;(eval(TempStr[0:-1]))&#x2F;6\n    print(&quot;该金额对应的美元额度是&#123;:.2f&#125;$&quot;.format(F))\nelse:\n    print(&quot;输入格式错误&quot;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b16972607f0e4faeb96b70df6903c5fa.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-3\"><a href=\"#2-3\" class=\"headerlink\" title=\"2.3\"></a>2.3</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\nturtle.setup(650,350,200,200)\nturtle.penup()\nturtle.fd(-250)\nturtle.pendown()\nturtle.pensize(25)\nturtle.pencolor(&quot;purple&quot;)\nturtle.seth(-40)\nfor i in range(4):\n    turtle.circle(40,80)\n    turtle.circle(-40,80)\nturtle.circle(40,80&#x2F;2)\nturtle.fd(40)\nturtle.circle(16,180)\nturtle.fd(40*2&#x2F;3)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/35627fde03364a64b0691d9e6754ed06.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\na&#x3D;[&#39;green&#39;,&#39;red&#39;,&#39;yellow&#39;,&#39;pink&#39;]\nturtle.setup(650, 350, 200, 200)\nturtle.penup()\nturtle.fd(-250)\nturtle.pendown()\nturtle.pensize(25)\nturtle.seth(-40)\nfor i in range(4):\n   turtle.pencolor(a[i])\n   turtle.circle(40, 80)\n   turtle.circle(-40, 80)\nturtle.pencolor(&quot;purple&quot;)\nturtle.circle(40, 80&#x2F;2)\nturtle.fd(40)\nturtle.circle(16, 180)\nturtle.fd(40 * 2&#x2F;3)\nturtle.exitonclick()\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/e4cf717cf4c64cc2b645e7372b354562.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-4\"><a href=\"#2-4\" class=\"headerlink\" title=\"2.4\"></a>2.4</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\nfor i in range(3):\n   turtle.seth(i*120)\n   turtle.fd(100)\n\nturtle.exitonclick()</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/a72aa89a271f4757b46e7c750cc38030.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-5\"><a href=\"#2-5\" class=\"headerlink\" title=\"2.5\"></a>2.5</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\n\nturtle.setup(800, 600)\n#turtle.pensize(20)\n# 设置画笔大小\n#turtle.pencolor(&#39;pink&#39;)\n# 设置颜色\nfor i in range(7):\n    # 绘制外层大三角形\n    if i &lt; 3:\n        turtle.fd(200)\n        turtle.left(120)\n        # 每次前进之后转向\n    # 绘制内层小三角形\n    elif i &lt; 5:\n        turtle.fd(100)\n        turtle.left(120)\n    else:\n        turtle.left(120)\n        turtle.fd(100)\n        turtle.left(120)\nturtle.done()\nturtle.exitonclick()</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/610fe3f0c8794e83ab5920e1ea02bd28.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-6\"><a href=\"#2-6\" class=\"headerlink\" title=\"2.6\"></a>2.6</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\nimport turtle\n\nturtle.pensize(2)\n\nturtle.seth(0)\nfor i in range(1,5):\n    turtle.penup()\n    turtle.forward(20)\n    turtle.pendown()\n    turtle.forward(100)\n    turtle.penup()\n    turtle.forward(20)\n    turtle.pendown()\n\n    turtle.left(90)\n\nturtle.done()</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/abda54f419f44b7ca11b8395a0e18d77.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-7\"><a href=\"#2-7\" class=\"headerlink\" title=\"2.7\"></a>2.7</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\n\nturtle.pensize(2)\n\nturtle.seth(30)\nturtle.forward(100)\nturtle.right(120)\nturtle.forward(100)\nturtle.right(120)\nturtle.forward(100)\n\nturtle.penup()\nturtle.seth(0)\nturtle.forward(115.6)\nturtle.pendown()\n\nturtle.seth(150)\nturtle.forward(100)\nturtle.left(120)\nturtle.forward(100)\nturtle.left(120)\nturtle.forward(100)\nturtle.exitonclick()</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/a1280ae123a74cfdb7a4d246ef942159.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-8\"><a href=\"#2-8\" class=\"headerlink\" title=\"2.8\"></a>2.8</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">import turtle\n\nturtle.pensize(2)\nfor x in range(100):\n    turtle.forward(2*x)\n    turtle.left(90)\nturtle.done()\nturtle.exitonclick()</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/823e6a794e654fe3a48f5e30a6d2032b.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"第三章作业\"><a href=\"#第三章作业\" class=\"headerlink\" title=\"第三章作业\"></a>第三章作业</h2><h3 id=\"3-1重量计算\"><a href=\"#3-1重量计算\" class=\"headerlink\" title=\"3.1重量计算\"></a>3.1重量计算</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>月球上物体的体重是在地球上的16.5%，假如你在地球上每年增长0.5kg，编写程序输出未来10年你在地球和月球上的体重状况。</p></blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m&#x3D;65\nn&#x3D;0\nfor i in range(1,11):\n    m+&#x3D;0.5\n    n &#x3D; 0.165*m\n\n    print(&quot;未来第&#123;:d&#125;年我在地球上的体重是&#123;:.2f&#125;kg&quot;.format(i,m))\n    print(&quot;未来第&#123;:d&#125;年我在月球上的体重是&#123;:.2f&#125;kg&quot;.format(i,n))\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>未来第1年我在地球上的体重是65.50kg<br>未来第1年我在月球上的体重是10.81kg<br>未来第2年我在地球上的体重是66.00kg<br>未来第2年我在月球上的体重是10.89kg<br>未来第3年我在地球上的体重是66.50kg<br>未来第3年我在月球上的体重是10.97kg<br>未来第4年我在地球上的体重是67.00kg<br>未来第4年我在月球上的体重是11.05kg<br>未来第5年我在地球上的体重是67.50kg<br>未来第5年我在月球上的体重是11.14kg<br>未来第6年我在地球上的体重是68.00kg<br>未来第6年我在月球上的体重是11.22kg<br>未来第7年我在地球上的体重是68.50kg<br>未来第7年我在月球上的体重是11.30kg<br>未来第8年我在地球上的体重是69.00kg<br>未来第8年我在月球上的体重是11.38kg<br>未来第9年我在地球上的体重是69.50kg<br>未来第9年我在月球上的体重是11.47kg<br>未来第10年我在地球上的体重是70.00kg<br>未来第10年我在月球上的体重是11.55kg</p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/e7c0bf523d4c41498939c15d391cdbff.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-2天天向上续（一）\"><a href=\"#3-2天天向上续（一）\" class=\"headerlink\" title=\"3.2天天向上续（一）\"></a>3.2天天向上续（一）</h3><p>假设能力增长符合如下带有平台期的模型：以七天为一个周期，连续学习3天能力值不变，从第四天至第七天每天能力增长为前一天的1%。<br>如果7天有一天间断学习，则周期从头计算。<br>请编写程序回答，如果初始能力值为1，连续学习365天后能力值为多少？</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m&#x3D;1\nn&#x3D;0\nfor i in range(1,366):\n\n    n+&#x3D;1\n    if n&gt;3:\n        m&#x3D;1.01*m\nprint(&quot;连续学习&#123;:d&#125;天后能力值是&#123;:.2f&#125;&quot;.format(i,m))</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>连续学习365天后能力值是36.67</p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/76ae44b9eaf244a79aa1bbdca2394c39.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-3天天向上续（二）\"><a href=\"#3-3天天向上续（二）\" class=\"headerlink\" title=\"3.3天天向上续（二）\"></a>3.3天天向上续（二）</h3><p>如果初始能力值为1，固定每10天休息1天，365天后能力值是多少？15天休息一天呢？</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m&#x3D;1\nn&#x3D;0\nfor i in range(1,366):\n\n    n+&#x3D;1\n    if n&gt;3:\n        m&#x3D;1.01*m\n    if n&#x3D;&#x3D;11:\n        n&#x3D;0\nprint(&quot;连续学习&#123;:d&#125;天后能力值是&#123;:.2f&#125;&quot;.format(i,m))</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>连续学习365天后能力值是13.83<br><img src=\"https://img-blog.csdnimg.cn/6b7b067867894461a3fad1303674a881.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-4-回文数判断\"><a href=\"#3-4-回文数判断\" class=\"headerlink\" title=\"3.4 回文数判断\"></a>3.4 回文数判断</h3><p>设n是任意自然数，如果n的各位数字反向排列所得自然数与n相等，则n被称为回文数。<br>从键盘输入一个5位数字，请编写程序判断这个数字是不是回文数。</p></blockquote>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">m&#x3D;(input(&quot;请输入5位整数:&quot;))\nn&#x3D;eval(m)\nif(10000&lt;n and n&lt;100000):\n    if m &#x3D;&#x3D; m[::-1]:\n        print(&quot;是回文数&quot;)\n    else:\n        print(&quot;不是回文数&quot;)\n  # print(&quot;连续学习&#123;:d&#125;天后能力值是&#123;:.2f&#125;&quot;.format(i,m))\nelse:\n    print(&quot;输入格式错误&quot;)</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>请输入5位整数:12321<br>是回文数</p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/38e6175f84f74b8d9f45c9218e134b1f.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-5田字格的输出：\"><a href=\"#3-5田字格的输出：\" class=\"headerlink\" title=\"3.5田字格的输出：\"></a>3.5田字格的输出：</h3><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">a &#x3D; &quot; ＋ &quot;\nb &#x3D; &quot;   &quot;\nc &#x3D; &quot; — &quot;\nd &#x3D; &quot; ｜ &quot;\n\nfor h in range(1,12): #田字格有11行\n    for l in range(1,12): #田字格有11列\n\n        if h in [1,6,11] and l in [1,6,11]:\n            print(a,end&#x3D;&quot;&quot;)\n\n        if  h in [1,6,11] and l not in [1,6,11]:\n            print(c,end&#x3D;&quot;&quot;)\n        if h not in [1,6,11] and l in [1,6,11]:\n            print(d,end&#x3D;&quot;&quot;)\n        if h not in [1,6,11] and l not in [1,6,11]:\n            print(b,end&#x3D;&quot;&quot;)\n        if l&#x3D;&#x3D;11 :\n            print()</code></pre>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"> ＋  —  —  —  —  ＋  —  —  —  —  ＋ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ＋  —  —  —  —  ＋  —  —  —  —  ＋ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ｜              ｜              ｜ \n ＋  —  —  —  —  ＋  —  —  —  —  ＋ \n\n进程已结束,退出代码0\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/19a67e16aeaf45fdbadbda4dcff9c674.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-6文本进度条\"><a href=\"#3-6文本进度条\" class=\"headerlink\" title=\"3.6文本进度条\"></a>3.6文本进度条</h3><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import time\nscale &#x3D; 10\nprint(&quot;staring&quot;,end&#x3D;&quot;&quot;)\nfor i in range(scale+1):\n    a &#x3D; &#39;·&#39;\n   # b &#x3D; &#39; . . &#39; * (scale - 1)\n    c &#x3D; (i &#x2F; scale) * 100\n    print(&quot; &#123;&#125;&quot;.format(a),end&#x3D;&quot;&quot;)\n    time.sleep(0.1)\nprint(&quot;Done!&quot;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/66dfe0ebfe204daeb37b0d33157efa36.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-7文本风格\"><a href=\"#3-7文本风格\" class=\"headerlink\" title=\"3.7文本风格\"></a>3.7文本风格</h3><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">while  True:\n    for i in [&quot;&#x2F;&quot;,&quot;-&quot;,&quot;|&quot;,&quot;\\\\&quot;,&quot;|&quot;]:\n        print(&quot;%s\\r&quot; %i,end&#x3D;&#39;&#39;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/52367ff03b1542a6ada648944da8d5e2.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2836c30470a349f4a3598af2730a0c7b.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"3-8tqdm\"><a href=\"#3-8tqdm\" class=\"headerlink\" title=\"3.8tqdm\"></a>3.8tqdm</h3><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">from tqdm import tqdm\nfrom time import sleep\nfor i in tqdm(range(1,100)):\n    sleep(0.01)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5ca30cad0fec4b2c950266180c3689ae.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"第四章作业\"><a href=\"#第四章作业\" class=\"headerlink\" title=\"第四章作业\"></a>第四章作业</h2><h3 id=\"4-1猜数游戏\"><a href=\"#4-1猜数游戏\" class=\"headerlink\" title=\"4.1猜数游戏\"></a>4.1猜数游戏</h3><p>在程序中预设一个0~9之间的整数，让用户通过键盘输入所猜的数，如果大于预设的数，显示“遗憾，太大了”；小于预设的数，显示“遗憾，太小了”，如此循环，直至猜中该数，显示“预测N次，你猜中了！”，其中N是用户输入数字的计数。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import random\nr&#x3D; random.randrange(0,9,1)\ni&#x3D;1\nwhile(1):\n    g&#x3D;eval(input(&quot;输入猜的数&quot;))\n    if(g&gt;r):\n        print(&quot;阿巴阿巴，大了&quot;)\n        i+&#x3D;1\n        continue\n    elif(g&lt;r):\n        print(&quot;欸嘿，小了&quot;)\n        i+&#x3D;1\n        continue\n    else:\n        print(&quot; 预测&#123;&#125;次后，你猜中了&quot;.format(i))\n        break</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/9f66a279bc064f3292f62cbdbbb5ec70.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-2统计不同字符个数\"><a href=\"#4-2统计不同字符个数\" class=\"headerlink\" title=\"4.2统计不同字符个数\"></a>4.2统计不同字符个数</h3><p>用户从键盘输入一行字符，编写一个程序，统计并输出其中英文字符、数字、空格和其他字符的个数。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">s&#x3D;input(&quot;输入一行字符：&quot;)\nalpha,number,space,other&#x3D;0,0,0,0\nfor i in s:\n    if(&#39;a&#39;&lt;&#x3D; i&lt;&#x3D;&#39;z&#39; or &#39;A&#39;&lt;&#x3D;i&lt;&#x3D;&#39;Z&#39; ):\n        alpha+&#x3D;1\n    elif(&#39;0&#39;&lt;&#x3D;i&lt;&#x3D;&#39;9&#39;):\n        number+&#x3D;1\n    elif(i&#x3D;&#x3D;&#39; &#39;):\n        space+&#x3D;1\n    else:\n        other+&#x3D;1\nprint(&quot;字母有&#123;&#125;个，数字有&#123;&#125;个，空格有&#123;&#125;个，其他有&#123;&#125;个&quot;.format(alpha,number,space,other))\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/90d99da89c6e4304a8eefc24b8e687d7.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-3最大公约数计算\"><a href=\"#4-3最大公约数计算\" class=\"headerlink\" title=\"4.3最大公约数计算\"></a>4.3最大公约数计算</h3><p>从键盘接受两个整数，编写程序求出这两个整数的最大公约数和最小公倍数<br>（提示：求最大公约数可用辗转相除法，求最小公倍数则用两数的积除以最大公约数即可）</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">\na&#x3D;int(input(&quot;输入第一个数：&quot;))\nb&#x3D;int(input(&quot;输入第二个数：&quot;))\n\nm&#x3D;max(a,b)\nn&#x3D;min(a,b)\nt&#x3D;m%n\nwhile t!&#x3D;0:\n    m,n&#x3D;n,t\n    t&#x3D;m%n\ns&#x3D;int(a*b&#x2F;n)\nprint(&quot;&#123;&#125;和&#123;&#125;的最大公约数为&#123;&#125;&quot;.format(a,b,n))\nprint(&quot;&#123;&#125;和&#123;&#125;的最小公倍数为&#123;&#125;&quot;.format(a,b,s))</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/921a745dd1794b15a11cf5532e34ef29.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-4猜数游戏续（一）\"><a href=\"#4-4猜数游戏续（一）\" class=\"headerlink\" title=\"4.4猜数游戏续（一）\"></a>4.4猜数游戏续（一）</h3><p>改编4.1，让计算机能够随机产生一个预设数字，范围在0~100之间，其他游戏规则不变。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import random\nr&#x3D; random.randrange(0,100,)\ni&#x3D;1\nwhile(1):\n    g&#x3D;eval(input(&quot;输入猜的数&quot;))\n    if(g&gt;r):\n        print(&quot;阿巴阿巴，大了&quot;)\n        i+&#x3D;1\n        continue\n    elif(g&lt;r):\n        print(&quot;欸嘿，小了&quot;)\n        i+&#x3D;1\n        continue\n    else:\n        print(&quot; 预测&#123;&#125;次后，你猜中了&quot;.format(i))\n        break</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/a6c57fdcd49a48e5b518ae3aa3e61fc8.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-5猜数游戏续（二）\"><a href=\"#4-5猜数游戏续（二）\" class=\"headerlink\" title=\"4.5猜数游戏续（二）\"></a>4.5猜数游戏续（二）</h3><p>对于4.4，当用户输入的不是整数（如字母、浮点数等）时，程序会终止执行并退出。改编该程序，当用户输入出错时给出“输入内容必须为整数！”的提示，并让用户重新输入。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import random\nr&#x3D; random.randrange(0,100,)\ni&#x3D;1\nwhile(1):\n    g&#x3D;(input(&quot;输入猜的数&quot;))\n    if &#39;0&#39;&lt;g and g&lt;&#39;9&#39;:\n       g&#x3D;eval(g)\n       if(g&gt;r):\n         print(&quot;阿巴阿巴，大了&quot;)\n         i+&#x3D;1\n         continue\n       elif(g&lt;r):\n         print(&quot;欸嘿，小了&quot;)\n         i+&#x3D;1\n         continue\n       else:\n         print(&quot; 预测&#123;&#125;次后，你猜中了&quot;.format(i))\n         break\n    else:\n        print(&quot;输入内容必须为整数！&quot;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/59dda25ede644031994d3af4c54e1fa4.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-6羊车门问题\"><a href=\"#4-6羊车门问题\" class=\"headerlink\" title=\"4.6羊车门问题\"></a>4.6羊车门问题</h3><p>有三扇关闭的门，一扇门后面停着汽车、其余门后是山羊，只有主持人知道每扇门后面是什么。参赛者可以选择一扇门，在开启它之前，主持人会开启另一扇门，露出门后的山羊，然后允许参赛者更换自己的选择。<br>请问，参赛者更换选择后能否增加猜中汽车的机会？</p>\n<p>请使用random库对这个随机事件进行预测，分别输出参赛者改变选择和坚持选择获胜的几率。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import random\nn&#x3D;0\nm&#x3D;0\nfor i in range(100000):\n    a&#x3D;random.randint(1,3)#规定1后面是车，23后面是羊,随机选择\n    if a&#x3D;&#x3D;1:\n        n&#x3D;n+1\n\nprint(&quot;不更改选中车的概率:&#123;&#125;&quot;.format(n&#x2F;100000))\nfor j in range(100000):\n    b&#x3D;random.randint(1,3)\n    if b&#x3D;&#x3D;1:#换后选中车建立在第一次选中羊的基础上\n        continue\n    else:#23等价，翻开的定义为3，选中的定义为2\n        c&#x3D;random.randint(1,2)#问题变为在两扇门间选择,且已经选中羊，更换必中车\n        m&#x3D;m+1\nprint(&quot;更改选中车的概率:&#123;&#125;&quot;.format(m&#x2F;(100000)))\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/eb8e5613b03b4a1188df86d9031a1e05.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"4-7异常处理\"><a href=\"#4-7异常处理\" class=\"headerlink\" title=\"4.7异常处理\"></a>4.7异常处理</h3><p>请用异常处理改造实例（根据圆的半径计算圆的面积和周长），使其能够接收并处理用户的任何输入。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import math\ntry:\n  r&#x3D;eval(input(&quot;请输入半径：&quot;))\n\n  c&#x3D;math.pi *r*2\n  s&#x3D;math.pi *(r**2)\n  print(&quot;周长是&#123;:.2f&#125;，面积为&#123;:.2f&#125;&quot;.format(c,s))\n\nexcept NameError:\n    print(&quot;请输入正整数&quot;)\nexcept:\n    print(&quot;其他错误&quot;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7f2b63f3c7f545a9b32fea4a96965c76.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"第五章作业\"><a href=\"#第五章作业\" class=\"headerlink\" title=\"第五章作业\"></a>第五章作业</h2><h3 id=\"5-1-更大田字格\"><a href=\"#5-1-更大田字格\" class=\"headerlink\" title=\"5.1 更大田字格\"></a>5.1 更大田字格</h3><p>仿造习题3.5输出一个更大的田字格，用函数简化其代码，田字格为4x4</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">a,b,c,d&#x3D;&#39;+ &#39;,&#39;-- &#39;,&#39;|&#39;,&#39; &#39;\ndef line(m):\n    for i in range(m*5+1):\n        print(&quot;&#123;&#125;&quot;.format(a if i%5&#x3D;&#x3D;0 else b),end&#x3D;&#39;&#39;)\n    print()\ndef littlesquare(m):\n    line(m)\n    for j in range((m+2)*4):\n        print(&quot;&#123;&#125;&#123;&#125;&quot;.format(c,d*13),end&#x3D;&#39;&#39;) if j%(m+2)!&#x3D;m+1 else print(&quot;&quot;)\ndef tsquare(m,n):\n    for i in range(n):\n        littlesquare(m)\n    line(m)\ntsquare(4,4)\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cd40b547d7724c1db45b59599735fb32.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-2-isOdd-函数\"><a href=\"#5-2-isOdd-函数\" class=\"headerlink\" title=\"5.2 isOdd()函数\"></a>5.2 isOdd()函数</h3><p>实现isOdd()函数，参数为整数，如果整数为奇数，返回True，否则返回False</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">def isOdd(a):\n    if a%2 !&#x3D;0:\n        print(&quot;True&quot;)\n        return True\n    else:\n        print(&quot;False&quot;)\n        return False\nisOdd(3)\nisOdd(4)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b76ec4032baf4f43a4a44e49a303631a.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-3-isNum-函数\"><a href=\"#5-3-isNum-函数\" class=\"headerlink\" title=\"5.3 isNum()函数\"></a>5.3 isNum()函数</h3><p>参数为一个字符串，如果这个字符串属于整数、浮点数或复数的表示，返回True，否则返回False</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">def isOdd(a):\n    if type(a) &#x3D;&#x3D; int or type(a) &#x3D;&#x3D; float or type(a) &#x3D;&#x3D; complex:\n        print(&quot;True&quot;)\n        return True\n    else:\n        print(&quot;False&quot;)\n        return False\nisOdd(&#39;m&#39;)\nisOdd(3)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/0c96e39408334f7bab05c5f52e090db3.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-4-multi-函数\"><a href=\"#5-4-multi-函数\" class=\"headerlink\" title=\"5.4 multi()函数\"></a>5.4 multi()函数</h3><p>参数个数不限，返回所有参数的乘积</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">def multi():\n    try:\n        str&#x3D;input(&quot;输入要相乘的参数，用空格隔开:&quot;)\n        c&#x3D;1\n        for item in str.split():\n\n            c&#x3D;c*int(item)\n        print(c)\n    except:\n        print(&quot;error&quot;)\n\nmulti()\n\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/55d0871ccfbc48818598b057e0d7ee40.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-5-isPrime-函数\"><a href=\"#5-5-isPrime-函数\" class=\"headerlink\" title=\"5.5 isPrime()函数\"></a>5.5 isPrime()函数</h3><p>参数为整数，要有异常处理。如果整数是质数，返回True，否则返回False。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">import math\ndef isPrime(n):\n    try:\n            if n &lt;&#x3D; 1:\n                print(&quot;请输入大于一正整数&quot;)\n            for i in range(2, int(math.sqrt(n) + 1)):\n               if n % i &#x3D;&#x3D; 0:\n                  print(&quot;非质数&quot;)\n                  return False\n            print(&quot;是质数&quot;)\n            return True\n    except:\n        print(&quot;error&quot;)\nisPrime(3)\nisPrime(4)\nisPrime(5)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/014f9db43fe54585994849191b0a7694.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"5-6-datetime库\"><a href=\"#5-6-datetime库\" class=\"headerlink\" title=\"5.6 datetime库\"></a>5.6 datetime库</h3><p>使用datetime库，对自己的生日输出不少于10种日期格式。</p>\n<h3 id=\"5-7-汉诺塔\"><a href=\"#5-7-汉诺塔\" class=\"headerlink\" title=\"5.7 汉诺塔\"></a>5.7 汉诺塔</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">def hanoi(n,A,B,C):                   #定义汉诺塔函数,参数n是圆盘数，A、B、C是3根柱\n   if n&#x3D;&#x3D;1:                           #判断圆盘数，如果等于1，递归条件\n      print(A,&#39;--&gt;&#39;,C,&#39; &#39;,n)          # 直接将A柱上的圆盘移动到C柱上\n   else:                              #否则，进行递归移动\n      hanoi(n-1,A,C,B)               #递归将A柱最上方的n-1个盘子落在B柱\n      print(A,&#39;--&gt;&#39;,C,&#39; &#39;,n) # 输出将A柱上的圆盘移动到C柱上,也就是将A柱的最小面盘子落在C柱\n      hanoi(n-1,B,A,C)             #递归将B柱上的n-1个盘子，落在C柱\n\nhanoi(6,&#39;A&#39;,&#39;B&#39;,&#39;C&#39;)               #调用函数\n\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:/coder/randomnumbers/chengxusheji.py<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1<br>A —&gt; B   3<br>C —&gt; A   1<br>C —&gt; B   2<br>A —&gt; B   1<br>A —&gt; C   4<br>B —&gt; C   1<br>B —&gt; A   2<br>C —&gt; A   1<br>B —&gt; C   3<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1<br>A —&gt; B   5<br>C —&gt; A   1<br>C —&gt; B   2<br>A —&gt; B   1<br>C —&gt; A   3<br>B —&gt; C   1<br>B —&gt; A   2<br>C —&gt; A   1<br>C —&gt; B   4<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1<br>A —&gt; B   3<br>C —&gt; A   1<br>C —&gt; B   2<br>A —&gt; B   1<br>A —&gt; C   6<br>B —&gt; C   1<br>B —&gt; A   2<br>C —&gt; A   1<br>B —&gt; C   3<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1<br>B —&gt; A   4<br>C —&gt; A   1<br>C —&gt; B   2<br>A —&gt; B   1<br>C —&gt; A   3<br>B —&gt; C   1<br>B —&gt; A   2<br>C —&gt; A   1<br>B —&gt; C   5<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1<br>A —&gt; B   3<br>C —&gt; A   1<br>C —&gt; B   2<br>A —&gt; B   1<br>A —&gt; C   4<br>B —&gt; C   1<br>B —&gt; A   2<br>C —&gt; A   1<br>B —&gt; C   3<br>A —&gt; B   1<br>A —&gt; C   2<br>B —&gt; C   1</p></blockquote>\n<h2 id=\"八皇后问题\"><a href=\"#八皇后问题\" class=\"headerlink\" title=\"八皇后问题\"></a>八皇后问题</h2><p>参考：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/Wangtuo1115/article/details/106862490?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166565012216800180668737%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=166565012216800180668737&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-106862490-null-null.142^v55^control,201^v3^add_ask&amp;utm_term=%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98python&amp;spm=1018.2226.3001.4187\">https://blog.csdn.net/Wangtuo1115/article/details/106862490?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166565012216800180668737%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=166565012216800180668737&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-106862490-null-null.142^v55^control,201^v3^add_ask&amp;utm_term=%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98python&amp;spm=1018.2226.3001.4187</a></p></blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">def conflict(state, nextColumn):\n    &quot;&quot;&quot;\n   判断是否冲突\n   因为坐标是从0开始的，所以state的长度代表了下一行的行坐标\n   :param state:（7，4，6，0，2） 标记每行皇后所在的位置 （0，7）一行八列 （2，4） （3，6） （4，0） （5，2）\n   :param nextColumn:下一行的列坐标\n   :return:\n   &quot;&quot;&quot;\n    nextRow &#x3D; rows &#x3D; len(state)  # 5\n    for row in range(rows):  # 0,1,2,3,4\n        # 获取当前行的列\n        column &#x3D; state[row]\n        &quot;&quot;&quot;\n      如何判断是否冲突：\n          1. 如果列的差值为0，说明两皇后在同一列\n          2. 如果列的差值等于行的差值，说明两皇后在对角线上\n      &quot;&quot;&quot;\n        if abs(column - nextColumn) in [0, nextRow - row]:\n            return True\n    return False\n\n\n# 采用生成器的方式来产生每一个皇后的位置，并用递归来实现下一个皇后的位置\ndef queens(num, state&#x3D;()):\n    &quot;&quot;&quot;\n   基于递归采用回溯算法，算出每一种结果\n\n   :param num: 皇后的数量  8\n   :param state: 列坐标。初始为空。参数为元组不为列表，因为参数只能为不可变数据类型\n   :return:\n   &quot;&quot;&quot;\n    # 每一行的列坐标都是从0:7的\n    # 0,1,2,3,4,5,6,7\n    for pos in range(num):\n        # 默认state为空。长度为0，但是是不冲突的\n        # 判断是否冲突，state为空时不冲突\n        if not conflict(state, pos):  # 回溯法的体现\n            # 如果state的长度为7，即到达了倒数第二行，也就是前7行皇后都已经找到了位置，最后一行又没有冲突，返回最后一行的列坐标\n            if len(state) &#x3D;&#x3D; num - 1:\n                # 最后一行的（pos,）&#x3D;最后一行的result，然后再递归回去求倒数第二行的result\n                yield (pos,)\n            else:\n                for result in queens(num, state + (pos,)):\n                    &quot;&quot;&quot;\n               递归实现求state：\n                   1. 向下递归\n                   第一次（行）： pos&#x3D;0，刚开始不会进入if len(state) &#x3D;&#x3D; num - 1，进入执行else，会执行queens(num, state + (pos, ))，\n                   第二次（行）： 进入else，再调用queens(num, state + (pos, )),递归执行queens(num, state + (pos,) + (pos,))\n                   第三次（行）： 进入else，再调用queens(num, state + (pos,) + (pos,),递归执行queens(num, state + (pos,) + (pos,) + (pos,))\n                   ...\n                   第七次（行）： 执行和上面的一样，不过此时state的长度为7\n                   第八次（行）： 执行f len(state) &#x3D;&#x3D; num - 1:求出最后一行的列坐标(pos,)\n\n                   2.向上递归\n                   求出第八行的列坐标，就可以求出第七行的（pos,），返回的是第七行和第八行的列坐标（（pos，） + result）\n                   根据下一行的结果依次求出上一行的结果；\n                   ....\n                   最后求出第一行的列坐标，返回整体结果\n               &quot;&quot;&quot;\n                    yield (pos,) + result\n\n\ndef prettyprint(solution):\n    &quot;&quot;&quot;\n   进行友好展示：为了至关表现棋盘，用X表示皇后的位置\n   :param solution:\n   :return:\n   &quot;&quot;&quot;\n\n    def line(pos, length&#x3D;len(solution)):\n        return &#39;.&#39; * (pos) + &#39;@&#39; + &#39;.&#39; * (length - pos - 1)\n\n    for pos in solution:\n        print(line(pos))\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    solutions &#x3D; queens(8)\n    for index, solution in enumerate(solutions):\n        print(&#39;第%d种解决方案：&#39; % (index + 1), solution)\n        prettyprint(solution)\n        print(&#39;*&#39; * 50)\n</code></pre>\n<h2 id=\"第六章作业\"><a href=\"#第六章作业\" class=\"headerlink\" title=\"第六章作业\"></a>第六章作业</h2><h3 id=\"6-1-随机密码生成\"><a href=\"#6-1-随机密码生成\" class=\"headerlink\" title=\"6.1 随机密码生成\"></a>6.1 随机密码生成</h3><p>编写程序，在26个字母大小写和9个数字组成的列表中随机生成10个8位密码。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import random\nletter &#x3D; [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;,&#39;f&#39;,&#39;g&#39;,&#39;h&#39;,&#39;i&#39;,\n          &#39;j&#39;,&#39;k&#39;,&#39;l&#39;,&#39;m&#39;,&#39;n&#39;,&#39;o&#39;,&#39;p&#39;,&#39;q&#39;,&#39;r&#39;,\n          &#39;s&#39;,&#39;t&#39;,&#39;u&#39;,&#39;v&#39;,&#39;w&#39;,&#39;x&#39;,&#39;y&#39;,&#39;z&#39;,\n          &#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;D&#39;,&#39;E&#39;,&#39;F&#39;,&#39;G&#39;,&#39;H&#39;,&#39;I&#39;,\n          &#39;J&#39;,&#39;K&#39;,&#39;L&#39;,&#39;M&#39;,&#39;N&#39;,&#39;O&#39;,&#39;P&#39;,&#39;Q&#39;,&#39;R&#39;,\n          &#39;S&#39;,&#39;T&#39;,&#39;U&#39;,&#39;V&#39;,&#39;W&#39;,&#39;X&#39;,&#39;Y&#39;,&#39;Z&#39;,\n          1,2,3,4,5,6,7,8,9]\ni &#x3D; 0\nwhile i &lt; 10:\n    password &#x3D; []\n    p &#x3D; 0\n    while p &lt; 8:\n        s &#x3D; random.randint(1,60)\n        password.append(letter[s])\n        p +&#x3D; 1\n    i +&#x3D; 1\n    print(&quot;生成的随机密码是：&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&#123;&#125;&quot;.format(password[0],password[1],password[2],\n       password[3],password[4],password[5],password[6],password[7]))</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/6706ed9f1ed24ab6b77dadfbae0e5be8.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"6-2-重复元素判定\"><a href=\"#6-2-重复元素判定\" class=\"headerlink\" title=\"6.2 重复元素判定\"></a>6.2 重复元素判定</h3><p>编写一个函数，接受列表作为参数，如果一个元素在列表中出现了不止一次，则返回True，但不要改变原来列表的值。同时编写调用这个函数和测试结果的程序。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">str1&#x3D;input(&#39;输入以英文逗号分隔列表元素&#39;)\nlist1&#x3D;str1.split(&#39;,&#39;)\n##print(tongji(list1))\ndef tongji(list1):\n    set1&#x3D;set(list1)\n    if len(set1)&lt;len(list1): #小于表示有重复元素，集合可以去除重复元素\n        return True\n    else:\n        return(&#39;列表没有重复元素&#39;)\nprint(tongji(list1))\n\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def tongji(list1):\n    for p in list1:\n        num&#x3D;list1.count(p)\n        if num&gt;1:\n            return True\n        else:\n            continue\nstr1&#x3D;&#39;&#39;\nwhile True:\n    str2&#x3D;input(&#39;输入列表元素，以回车结束&#39;)\n    str1+&#x3D;str2\n    if str2&#x3D;&#x3D;&#39;&#39;:\n        break\nprint(str1)\nlist1&#x3D;list(str1)\nprint(tongji(list1))\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入列表元素，以回车结束1<br>输入列表元素，以回车结束2<br>输入列表元素，以回车结束3<br>输入列表元素，以回车结束<br>123<br>None</p></blockquote>\n<h3 id=\"6-3-重复元素判定（续）\"><a href=\"#6-3-重复元素判定（续）\" class=\"headerlink\" title=\"6.3 重复元素判定（续）\"></a>6.3 重复元素判定（续）</h3><p>利用集合的无重复性改写6.2，获得一个更快更简洁的版本。</p>\n<h3 id=\"6-4-文本字符分析\"><a href=\"#6-4-文本字符分析\" class=\"headerlink\" title=\"6.4 文本字符分析\"></a>6.4 文本字符分析</h3><p>编写程序接收字符串，按字符出现频率的降序打印字母。分别尝试录入一些中英文文章片段，比较不同语言之间字符频率的差别。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">#文本字符分析\n#统计输入的字符串，按字符出现频率并按照降序方式打印字母\n\ntext &#x3D; input(&quot;请输入一段文本（回车退出)：&quot;)\n\n\nwhile text !&#x3D; &#39;&#39;:#如果为空则退出循环\n    d &#x3D; &#123;&#125;\n    for word in text:\n        d[word] &#x3D; d.get(word,0) + 1\n\n        #转为列表类型对其排序\n    ls &#x3D; list(d.items())\n    ls.sort(key&#x3D;lambda x:x[1],reverse &#x3D; True)#以记录第二列排序\n\n    for i in range(len(ls)):\n        word, count &#x3D; ls[i]\n        print(&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;.format(word,count))\n\n    text &#x3D; input(&quot;请输入一段文本（回车退出)：&quot;)\n\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>请输入一段文本（回车退出)：玛娜桓那兰那阿薛那<br>那             3<br>玛             1<br>娜             1<br>桓             1<br>兰             1<br>阿             1<br>薛             1</p></blockquote>\n<h3 id=\"6-5-生日悖论分析\"><a href=\"#6-5-生日悖论分析\" class=\"headerlink\" title=\"6.5 生日悖论分析\"></a>6.5 生日悖论分析</h3><p>生日悖论指如果一个房间里有23人或以上，那么至少有两个人生日相同的概率大于50%。<br>编写程序中，输出在不同随机样本数量下，23个人中至少有两个人生日相同的概率。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import random\ndef duplicate(lst):\n    lst1&#x3D;set(lst)\n    if len(lst)&gt;len(lst1):\n        return True\n    else:\n        return False\ndef generate(numbers):\n    birthday&#x3D;[]\n    for i in range(numbers):\n        birthday.append(random.randint(1,365))\n    return birthday\ndef match(students,samples):\n    count&#x3D;0\n    birthday&#x3D;[]\n    for i in range(samples):\n        birthday&#x3D;generate(students)\n        if duplicate(birthday):\n            count+&#x3D;1\n    return count\nstudents&#x3D;23\nsimulations&#x3D;100000\ncount&#x3D;match(students,simulations)\nrate&#x3D;(float(count)&#x2F;simulations)*100\nprint(&quot;rate is %f%%&quot;%rate)\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>rate is 50.736000%<br><img src=\"https://img-blog.csdnimg.cn/a6459b0a6d4842b59925a5e706724b5e.png\" alt=\"在这里插入图片描述\"></p></blockquote>\n<h3 id=\"6-6-《红楼梦》人物统计\"><a href=\"#6-6-《红楼梦》人物统计\" class=\"headerlink\" title=\"6.6 《红楼梦》人物统计\"></a>6.6 《红楼梦》人物统计</h3><p>编写程序统计红楼梦中前20位出场最多的人物。</p>\n<h2 id=\"第七章作业\"><a href=\"#第七章作业\" class=\"headerlink\" title=\"第七章作业\"></a>第七章作业</h2><h3 id=\"7-1Python源文件改写\"><a href=\"#7-1Python源文件改写\" class=\"headerlink\" title=\"7.1Python源文件改写\"></a>7.1Python源文件改写</h3><p>编写一个程序，读取一个Python源程序文件，将文件中所有除保留字外的小写字母换成大写字母，生成后的文件要能够被Python解释器正确执行。</p>\n<h3 id=\"7-2-图像文件压缩\"><a href=\"#7-2-图像文件压缩\" class=\"headerlink\" title=\"7.2 图像文件压缩\"></a>7.2 图像文件压缩</h3><p>使用PIL库对图片进行等比例压缩，无论压缩前文件大小如何，压缩后文件小于10KB.</p>\n<h3 id=\"7-3-中文字符画\"><a href=\"#7-3-中文字符画\" class=\"headerlink\" title=\"7.3 中文字符画\"></a>7.3 中文字符画</h3><p>参考实例12，编写程序合理选取中文字符构造字符表，生成中文字符画。</p>\n<h3 id=\"7-4-CSV解析\"><a href=\"#7-4-CSV解析\" class=\"headerlink\" title=\"7.4 CSV解析\"></a>7.4 CSV解析</h3><p>改编实例14，使得对CSV的转换能够识别并保留数据内部的逗号。</p>\n<h3 id=\"7-5-制作英文学习词典\"><a href=\"#7-5-制作英文学习词典\" class=\"headerlink\" title=\"7.5 制作英文学习词典\"></a>7.5 制作英文学习词典</h3><h3 id=\"7-6-多重释义\"><a href=\"#7-6-多重释义\" class=\"headerlink\" title=\"7.6 多重释义\"></a>7.6 多重释义</h3><p>修改7.5，使其能够对单词添加多重释疑义，不同释义用逗号分开</p>\n","text":"教材《Python语言程序设计基础》 第二章作业（9.15实训）2.2TempStr &#x3D; input(&quot;请输入带有符号的温度值：&quot;) if TempStr[-1] in [&#39;F&#39;,&#39;f&#39;]: C &#x3D; (eva...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"python","slug":"python","count":9,"path":"api/tags/python.json"},{"name":"信管","slug":"信管","count":5,"path":"api/tags/信管.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E7%AB%A0%E4%BD%9C%E4%B8%9A%EF%BC%889-15%E5%AE%9E%E8%AE%AD%EF%BC%89\"><span class=\"toc-text\">第二章作业（9.15实训）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2\"><span class=\"toc-text\">2.2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3\"><span class=\"toc-text\">2.3</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4\"><span class=\"toc-text\">2.4</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5\"><span class=\"toc-text\">2.5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6\"><span class=\"toc-text\">2.6</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7\"><span class=\"toc-text\">2.7</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-8\"><span class=\"toc-text\">2.8</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%89%E7%AB%A0%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">第三章作业</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1%E9%87%8D%E9%87%8F%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">3.1重量计算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2%E5%A4%A9%E5%A4%A9%E5%90%91%E4%B8%8A%E7%BB%AD%EF%BC%88%E4%B8%80%EF%BC%89\"><span class=\"toc-text\">3.2天天向上续（一）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3%E5%A4%A9%E5%A4%A9%E5%90%91%E4%B8%8A%E7%BB%AD%EF%BC%88%E4%BA%8C%EF%BC%89\"><span class=\"toc-text\">3.3天天向上续（二）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E5%9B%9E%E6%96%87%E6%95%B0%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">3.4 回文数判断</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-5%E7%94%B0%E5%AD%97%E6%A0%BC%E7%9A%84%E8%BE%93%E5%87%BA%EF%BC%9A\"><span class=\"toc-text\">3.5田字格的输出：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-6%E6%96%87%E6%9C%AC%E8%BF%9B%E5%BA%A6%E6%9D%A1\"><span class=\"toc-text\">3.6文本进度条</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-7%E6%96%87%E6%9C%AC%E9%A3%8E%E6%A0%BC\"><span class=\"toc-text\">3.7文本风格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-8tqdm\"><span class=\"toc-text\">3.8tqdm</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%9B%9B%E7%AB%A0%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">第四章作业</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1%E7%8C%9C%E6%95%B0%E6%B8%B8%E6%88%8F\"><span class=\"toc-text\">4.1猜数游戏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B8%AA%E6%95%B0\"><span class=\"toc-text\">4.2统计不同字符个数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">4.3最大公约数计算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4%E7%8C%9C%E6%95%B0%E6%B8%B8%E6%88%8F%E7%BB%AD%EF%BC%88%E4%B8%80%EF%BC%89\"><span class=\"toc-text\">4.4猜数游戏续（一）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5%E7%8C%9C%E6%95%B0%E6%B8%B8%E6%88%8F%E7%BB%AD%EF%BC%88%E4%BA%8C%EF%BC%89\"><span class=\"toc-text\">4.5猜数游戏续（二）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6%E7%BE%8A%E8%BD%A6%E9%97%A8%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">4.6羊车门问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-7%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86\"><span class=\"toc-text\">4.7异常处理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">第五章作业</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E6%9B%B4%E5%A4%A7%E7%94%B0%E5%AD%97%E6%A0%BC\"><span class=\"toc-text\">5.1 更大田字格</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-isOdd-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.2 isOdd()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-isNum-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.3 isNum()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-multi-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.4 multi()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-5-isPrime-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.5 isPrime()函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-6-datetime%E5%BA%93\"><span class=\"toc-text\">5.6 datetime库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-7-%E6%B1%89%E8%AF%BA%E5%A1%94\"><span class=\"toc-text\">5.7 汉诺塔</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">八皇后问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E5%85%AD%E7%AB%A0%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">第六章作业</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90\"><span class=\"toc-text\">6.1 随机密码生成</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E5%88%A4%E5%AE%9A\"><span class=\"toc-text\">6.2 重复元素判定</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E5%88%A4%E5%AE%9A%EF%BC%88%E7%BB%AD%EF%BC%89\"><span class=\"toc-text\">6.3 重复元素判定（续）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-4-%E6%96%87%E6%9C%AC%E5%AD%97%E7%AC%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">6.4 文本字符分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-5-%E7%94%9F%E6%97%A5%E6%82%96%E8%AE%BA%E5%88%86%E6%9E%90\"><span class=\"toc-text\">6.5 生日悖论分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-6-%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B%E4%BA%BA%E7%89%A9%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">6.6 《红楼梦》人物统计</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%83%E7%AB%A0%E4%BD%9C%E4%B8%9A\"><span class=\"toc-text\">第七章作业</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1Python%E6%BA%90%E6%96%87%E4%BB%B6%E6%94%B9%E5%86%99\"><span class=\"toc-text\">7.1Python源文件改写</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-%E5%9B%BE%E5%83%8F%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9\"><span class=\"toc-text\">7.2 图像文件压缩</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-3-%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E7%94%BB\"><span class=\"toc-text\">7.3 中文字符画</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-4-CSV%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">7.4 CSV解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-5-%E5%88%B6%E4%BD%9C%E8%8B%B1%E6%96%87%E5%AD%A6%E4%B9%A0%E8%AF%8D%E5%85%B8\"><span class=\"toc-text\">7.5 制作英文学习词典</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-6-%E5%A4%9A%E9%87%8D%E9%87%8A%E4%B9%89\"><span class=\"toc-text\">7.6 多重释义</span></a></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"《统计学习方法》笔记","uid":"09de68b00742d7bbbc5cd25f6a8d984a","slug":"统计学习方法","date":"2022-11-07T03:20:37.212Z","updated":"2022-11-14T08:37:46.647Z","comments":true,"path":"api/articles/统计学习方法.json","keywords":null,"cover":null,"text":"统计学习方法监督学习统计学习基本分类统计学习是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测和分析的一门学科 。 统计学习也称为统计机器学习。 统计学习由监督学习、无监督学习和强化学习组成。（有时还包括半监督学习、主动学习） 监督学习是指从标注数据中学习预测模型的机器...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"【数据库系统概论】实训（四）","uid":"a3dd42f7fdfc58df8e8005286e07de07","slug":"数据库4","date":"2022-11-06T13:50:49.000Z","updated":"2022-11-06T12:46:36.173Z","comments":true,"path":"api/articles/数据库4.json","keywords":null,"cover":[],"text":"实验四 使用数据库datatest 备份datatest数据库。 通过datatest数据库备份文件，建立数据库datatest02数据库。 删除数据库datatest02中表student、class、course和score的所有记录。 删除数据库datatest02中表st...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"数据库","slug":"数据库","count":8,"path":"api/tags/数据库.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}