{"title":"【Go语言编程】（一）","uid":"355b3b6cd1787b40c18a74c859cf58d1","slug":"GO1","date":"2022-11-03T14:50:49.000Z","updated":"2022-11-08T15:50:20.238Z","comments":true,"path":"api/articles/GO1.json","keywords":null,"cover":[],"content":"<h1 id=\"w3c\"><a href=\"#w3c\" class=\"headerlink\" title=\"w3c\"></a>w3c</h1><h2 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h2><p><img src=\"https://img-blog.csdnimg.cn/3a15c08b7f124a6bbbe28db4fb689e0d.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"w3cschool\"><a href=\"#w3cschool\" class=\"headerlink\" title=\"w3cschool\"></a>w3cschool</h2><h3 id=\"第一个go程序\"><a href=\"#第一个go程序\" class=\"headerlink\" title=\"第一个go程序\"></a>第一个go程序</h3><p>配置路径：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$env:Path &#x3D; [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;)</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">package main\nimport &quot;fmt&quot;\nfunc main() &#123;\n fmt.Printf(&quot;Hello, world or 你好，世界 or καλημ ́ρα κóσμ or こんにちは世界\\n&quot;)\n&#125;\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Hello, world or 你好，世界 or καλημ ́ρα κóσμ or こんにちは世界</p>\n<p><img src=\"https://img-blog.csdnimg.cn/63fc17b887364136b8ffd70a38befd80.png\" alt=\"请添加图片描述\"></p></blockquote>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><h4 id=\"字符串连接\"><a href=\"#字符串连接\" class=\"headerlink\" title=\"字符串连接\"></a>字符串连接</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">package main\nimport &quot;fmt&quot;\nfunc main()&#123;\n    fmt.Println(&quot;HNU&quot;+&quot;是学习编程的好地方&quot;)\n&#125;</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>W3Cschool是学习编程的好地方</p>\n<h4 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h4><p>单变量声明<br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">package main\nvar a &#x3D; &quot;bio sheep教程&quot;\nvar b string &#x3D; &quot;bio sheep.cn&quot;\nvar c bool\n\nfunc main()&#123;\n    println(a, b, c)\n&#125;</code></pre></p>\n<p>bio sheep教程 bio sheep.cn false</p></blockquote>\n<p>多变量声明</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">package main\n\nvar x, y int\nvar (  \n    a int\n    b bool\n)\n\nvar c, d int &#x3D; 1, 2\nvar e, f &#x3D; 123, &quot;hello&quot;\n\n&#x2F;&#x2F;这种不带声明格式的只能在函数体中出现\n&#x2F;&#x2F;g, h :&#x3D; 123, &quot;hello&quot;\n\nfunc main()&#123;\n    g, h :&#x3D; 123, &quot;hello&quot;\n    println(x, y, a, b, c, d, e, f, g, h)\n&#125;</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>0 0 0 false 1 2 123 hello 123 hello</p></blockquote>\n<h4 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   const LENGTH int &#x3D; 10\n   const WIDTH int &#x3D; 5   \n   var area int\n   const a, b, c &#x3D; 1, false, &quot;str&quot; &#x2F;&#x2F;多重赋值\n\n   area &#x3D; LENGTH * WIDTH\n   fmt.Printf(&quot;面积为 : %d&quot;, area)\n   println()\n   println(a, b, c)   \n&#125;</code></pre>\n<blockquote>\n<p>面积为 : 50<br>1 false str<br><img src=\"https://img-blog.csdnimg.cn/5b168cbe21c140f88e14f1d1f3edb871.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"iota\"><a href=\"#iota\" class=\"headerlink\" title=\"iota\"></a>iota</h4></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\tconst (\n\t\ta &#x3D; iota &#x2F;&#x2F;0\n\t\tb        &#x2F;&#x2F;1\n\t\tc        &#x2F;&#x2F;2\n\t\td &#x3D; &quot;ha&quot; &#x2F;&#x2F;独立值，iota +&#x3D; 1\n\t\te        &#x2F;&#x2F;&quot;ha&quot;   iota +&#x3D; 1\n\t\tf &#x3D; 100  &#x2F;&#x2F;iota +&#x3D;1\n\t\tg        &#x2F;&#x2F;100  iota +&#x3D;1\n\t\th &#x3D; iota &#x2F;&#x2F;7,恢复计数\n\t\ti        &#x2F;&#x2F;8\n\t)\n\tfmt.Println(a, b, c, d, e, f, g, h, i)\n&#125;\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/993c7893cea246fd96303ce06cb02c2c.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport &quot;fmt&quot;\nconst (\n    i&#x3D;1&lt;&lt;iota\n    j&#x3D;3&lt;&lt;iota\n    k\n    l\n)\nfunc main() &#123;\n    fmt.Println(&quot;i&#x3D;&quot;,i)\n    fmt.Println(&quot;j&#x3D;&quot;,j)\n    fmt.Println(&quot;k&#x3D;&quot;,k)\n    fmt.Println(&quot;l&#x3D;&quot;,l)\n&#125; </code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/c24454dcc5df4c58b321f36baf200ae1.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"Go-语言运算符\"><a href=\"#Go-语言运算符\" class=\"headerlink\" title=\"Go 语言运算符\"></a>Go 语言运算符</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">\npackage main\n\nimport &quot;fmt&quot;\nfunc main() &#123;\n\n   var a int &#x3D; 21\n   var b int &#x3D; 10\n   var c int\n\n   c &#x3D; a + b\n   fmt.Printf(&quot;第一行 - c 的值为 %d\\n&quot;, c )\n   c &#x3D; a - b\n   fmt.Printf(&quot;第二行 - c 的值为 %d\\n&quot;, c )\n   c &#x3D; a * b\n   fmt.Printf(&quot;第三行 - c 的值为 %d\\n&quot;, c )\n   c &#x3D; a &#x2F; b\n   fmt.Printf(&quot;第四行 - c 的值为 %d\\n&quot;, c )\n   c &#x3D; a % b\n   fmt.Printf(&quot;第五行 - c 的值为 %d\\n&quot;, c )\n   a++\n   fmt.Printf(&quot;第六行 - c 的值为 %d\\n&quot;, a )\n   a--\n   fmt.Printf(&quot;第七行 - c 的值为 %d\\n&quot;, a )\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7b9802762fd94ae59ec42e0ba0af12e5.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var a int &#x3D; 21\n   var b int &#x3D; 10\n\n   if a &#x3D;&#x3D; b  &#123;\n      fmt.Printf(&quot;第一行 - a 等于 b\\n&quot; )\n   &#125; else &#123;\n      fmt.Printf(&quot;第一行 - a 不等于 b\\n&quot; )\n   &#125;\n   if  a &lt; b  &#123;\n      fmt.Printf(&quot;第二行 - a 小于 b\\n&quot; )\n   &#125; else &#123;\n      fmt.Printf(&quot;第二行 - a 不小于 b\\n&quot; )\n   &#125;\n   if  a &gt; b  &#123;\n      fmt.Printf(&quot;第三行 - a 大于 b\\n&quot; )\n   &#125; else &#123;\n      fmt.Printf(&quot;第三行 - a 不大于 b\\n&quot; )\n   &#125;\n   &#x2F;* Lets change value of a and b *&#x2F;\n   a &#x3D; 5\n   b &#x3D; 20\n   if  a &lt;&#x3D; b  &#123;\n      fmt.Printf(&quot;第四行 - a 小于等于  b\\n&quot; )\n   &#125;\n   if  b &gt;&#x3D; a  &#123;\n      fmt.Printf(&quot;第五行 - b 大于等于 a\\n&quot; )\n   &#125;\n&#125;\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/c9f9a87a276847908da7f086fbf1e704.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var a bool &#x3D; true\n   var b bool &#x3D; false\n   if  a &amp;&amp; b  &#123;\n      fmt.Printf(&quot;第一行 - 条件为 true\\n&quot; )\n   &#125;\n   if  a || b  &#123;\n      fmt.Printf(&quot;第二行 - 条件为 true\\n&quot; )\n   &#125;\n   &#x2F;* 修改 a 和 b 的值 *&#x2F;\n   a &#x3D; false\n   b &#x3D; true\n   if  a &amp;&amp; b  &#123;\n      fmt.Printf(&quot;第三行 - 条件为 true\\n&quot; )\n   &#125; else &#123;\n      fmt.Printf(&quot;第三行 - 条件为 false\\n&quot; )\n   &#125;\n   if  !(a &amp;&amp; b)  &#123;\n      fmt.Printf(&quot;第四行 - 条件为 true\\n&quot; )\n   &#125;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/4d7ca6bff5fc4619a72d627511c758f9.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var a int &#x3D; 21\n   var c int\n\n   c &#x3D;  a\n   fmt.Printf(&quot;第 1 行 - &#x3D;  运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c +&#x3D;  a\n   fmt.Printf(&quot;第 2 行 - +&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c -&#x3D;  a\n   fmt.Printf(&quot;第 3 行 - -&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c *&#x3D;  a\n   fmt.Printf(&quot;第 4 行 - *&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c &#x2F;&#x3D;  a\n   fmt.Printf(&quot;第 5 行 - &#x2F;&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c  &#x3D; 200\n   c &lt;&lt;&#x3D;  2\n   fmt.Printf(&quot;第 6 行  - &lt;&lt;&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c &gt;&gt;&#x3D;  2\n   fmt.Printf(&quot;第 7 行 - &gt;&gt;&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c &amp;&#x3D;  2\n   fmt.Printf(&quot;第 8 行 - &amp;&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c ^&#x3D;  2\n   fmt.Printf(&quot;第 9 行 - ^&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n\n   c |&#x3D;  2\n   fmt.Printf(&quot;第 10 行 - |&#x3D; 运算符实例，c 值为 &#x3D; %d\\n&quot;, c )\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/c12cefd5bd2347d5bc1af97a19f13726.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   &#x2F;* 定义局部变量 *&#x2F;\n   var a int &#x3D; 100\n   var b int &#x3D; 200\n   var ret int\n\n   &#x2F;* 调用函数并返回最大值 *&#x2F;\n   ret &#x3D; max(a, b)\n\n   fmt.Printf( &quot;最大值是 : %d\\n&quot;, ret )\n&#125;\n\n&#x2F;* 函数返回两个数的最大值 *&#x2F;\nfunc max(num1, num2 int) int &#123;\n   &#x2F;* 定义局部变量 *&#x2F;\n   var result int\n\n   if (num1 &gt; num2) &#123;\n      result &#x3D; num1\n   &#125; else &#123;\n      result &#x3D; num2\n   &#125;\n   return result \n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/70996eaabb7f4ccc9672e10a9907bc81.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var n [10]int &#x2F;* n 是一个长度为 10 的数组 *&#x2F;\n   var i,j int\n\n   &#x2F;* 为数组 n 初始化元素 *&#x2F;         \n   for i &#x3D; 0; i &lt; 10; i++ &#123;\n      n[i] &#x3D; i + 100 &#x2F;* 设置元素为 i + 100 *&#x2F;\n   &#125;\n\n   &#x2F;* 输出每个数组元素的值 *&#x2F;\n   for j &#x3D; 0; j &lt; 10; j++ &#123;\n      fmt.Printf(&quot;Element[%d] &#x3D; %d\\n&quot;, j, n[j] )\n   &#125;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/94e2fcc94aea4198bc6ffc2a1bbc3758.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var a int&#x3D; 20   &#x2F;* 声明实际变量 *&#x2F;\n   var ip *int        &#x2F;* 声明指针变量 *&#x2F;\n\n   ip &#x3D; &amp;a  &#x2F;* 指针变量的存储地址 *&#x2F;\n\n   fmt.Printf(&quot;a 变量的地址是: %x\\n&quot;, &amp;a  )\n\n   &#x2F;* 指针变量的存储地址 *&#x2F;\n   fmt.Printf(&quot;ip 变量的存储地址: %x\\n&quot;, ip )\n\n   &#x2F;* 使用指针访问值 *&#x2F;\n   fmt.Printf(&quot;*ip 变量的值: %d\\n&quot;, *ip )\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/8a29a5d148f244009d87d3b7ba382610.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\ntype Books struct &#123;\n   title string\n   author string\n   subject string\n   book_id int\n&#125;\n\nfunc main() &#123;\n   var Book1 Books        &#x2F;* 声明 Book1 为 Books 类型 *&#x2F;\n   var Book2 Books        &#x2F;* 声明 Book2 为 Books 类型 *&#x2F;\n\n   &#x2F;* book 1 描述 *&#x2F;\n   Book1.title &#x3D; &quot;Go 语言&quot;\n   Book1.author &#x3D; &quot;www.w3cschool.cn&quot;\n   Book1.subject &#x3D; &quot;Go 语言教程&quot;\n   Book1.book_id &#x3D; 6495407\n\n   &#x2F;* book 2 描述 *&#x2F;\n   Book2.title &#x3D; &quot;Python 教程&quot;\n   Book2.author &#x3D; &quot;www.w3cschool.cn&quot;\n   Book2.subject &#x3D; &quot;Python 语言教程&quot;\n   Book2.book_id &#x3D; 6495700\n\n   &#x2F;* 打印 Book1 信息 *&#x2F;\n   fmt.Printf( &quot;Book 1 title : %s\\n&quot;, Book1.title)\n   fmt.Printf( &quot;Book 1 author : %s\\n&quot;, Book1.author)\n   fmt.Printf( &quot;Book 1 subject : %s\\n&quot;, Book1.subject)\n   fmt.Printf( &quot;Book 1 book_id : %d\\n&quot;, Book1.book_id)\n\n   &#x2F;* 打印 Book2 信息 *&#x2F;\n   fmt.Printf( &quot;Book 2 title : %s\\n&quot;, Book2.title)\n   fmt.Printf( &quot;Book 2 author : %s\\n&quot;, Book2.author)\n   fmt.Printf( &quot;Book 2 subject : %s\\n&quot;, Book2.subject)\n   fmt.Printf( &quot;Book 2 book_id : %d\\n&quot;, Book2.book_id)\n&#125;\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/cdc550b4b1744d538b8e45ebfdd4649e.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\ntype Books struct &#123;\n   title string\n   author string\n   subject string\n   book_id int\n&#125;\n\nfunc main() &#123;\n   var Book1 Books        &#x2F;* 声明 Book1 为 Books 类型 *&#x2F;\n   var Book2 Books        &#x2F;* 声明 Book2 为 Books 类型 *&#x2F;\n\n   &#x2F;* book 1 描述 *&#x2F;\n   Book1.title &#x3D; &quot;Go 语言&quot;\n   Book1.author &#x3D; &quot;www.w3cschool.cn&quot;\n   Book1.subject &#x3D; &quot;Go 语言教程&quot;\n   Book1.book_id &#x3D; 6495407\n\n   &#x2F;* book 2 描述 *&#x2F;\n   Book2.title &#x3D; &quot;Python 教程&quot;\n   Book2.author &#x3D; &quot;www.w3cschool.cn&quot;\n   Book2.subject &#x3D; &quot;Python 语言教程&quot;\n   Book2.book_id &#x3D; 6495700\n\n   &#x2F;* 打印 Book1 信息 *&#x2F;![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;0bd7342a122c489bb7994cca335dc3ab.png)\n\n   printBook(Book1)\n\n   &#x2F;* 打印 Book2 信息 *&#x2F;\n   printBook(Book2)\n&#125;\n\nfunc printBook( book Books ) &#123;\n   fmt.Printf( &quot;Book title : %s\\n&quot;, book.title)\n   fmt.Printf( &quot;Book author : %s\\n&quot;, book.author)\n   fmt.Printf( &quot;Book subject : %s\\n&quot;, book.subject)\n   fmt.Printf( &quot;Book book_id : %d\\n&quot;, book.book_id)\n&#125;\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/14ba8a8aa96d4105acdeca8ba59b7301.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   &#x2F;* 创建切片 *&#x2F;\n   numbers :&#x3D; []int&#123;0,1,2,3,4,5,6,7,8&#125;   \n   printSlice(numbers)\n\n   &#x2F;* 打印原始切片 *&#x2F;\n   fmt.Println(&quot;numbers &#x3D;&#x3D;&quot;, numbers)\n\n   &#x2F;* 打印子切片从索引1(包含) 到索引4(不包含)*&#x2F;\n   fmt.Println(&quot;numbers[1:4] &#x3D;&#x3D;&quot;, numbers[1:4])\n\n   &#x2F;* 默认下限为 0*&#x2F;\n   fmt.Println(&quot;numbers[:3] &#x3D;&#x3D;&quot;, numbers[:3])\n\n   &#x2F;* 默认上限为 len(s)*&#x2F;\n   fmt.Println(&quot;numbers[4:] &#x3D;&#x3D;&quot;, numbers[4:])\n\n   numbers1 :&#x3D; make([]int,0,5)\n   printSlice(numbers1)\n\n   &#x2F;* 打印子切片从索引  0(包含) 到索引 2(不包含) *&#x2F;\n   number2 :&#x3D; numbers[:2]\n   printSlice(number2)\n\n   &#x2F;* 打印子切片从索引 2(包含) 到索引 5(不包含) *&#x2F;\n   number3 :&#x3D; numbers[2:5]\n   printSlice(number3)\n\n&#125;\n\nfunc printSlice(x []int)&#123;\n   fmt.Printf(&quot;len&#x3D;%d cap&#x3D;%d slice&#x3D;%v\\n&quot;,len(x),cap(x),x)\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/ef61f9170b9643ed8668181971fb7359.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\nimport &quot;fmt&quot;\nfunc main() &#123;\n    &#x2F;&#x2F;这是我们使用range去求一个slice的和。使用数组跟这个很类似\n    nums :&#x3D; []int&#123;2, 3, 4&#125;\n    sum :&#x3D; 0\n    for _, num :&#x3D; range nums &#123;\n        sum +&#x3D; num\n    &#125;\n    fmt.Println(&quot;sum:&quot;, sum)\n    &#x2F;&#x2F;在数组上使用range将传入index和值两个变量。上面那个例子我们不需要使用该元素的序号，所以我们使用空白符&quot;_&quot;省略了。有时侯我们确实需要知道它的索引。\n    for i, num :&#x3D; range nums &#123;\n        if num &#x3D;&#x3D; 3 &#123;\n            fmt.Println(&quot;index:&quot;, i)\n        &#125;\n    &#125;\n    &#x2F;&#x2F;range也可以用在map的键值对上。\n    kvs :&#x3D; map[string]string&#123;&quot;a&quot;: &quot;apple&quot;, &quot;b&quot;: &quot;banana&quot;&#125;\n    for k, v :&#x3D; range kvs &#123;\n        fmt.Printf(&quot;%s -&gt; %s\\n&quot;, k, v)\n    &#125;\n    &#x2F;&#x2F;range也可以用来枚举Unicode字符串。第一个参数是字符的索引，第二个是字符（Unicode的值）本身。\n    for i, c :&#x3D; range &quot;go&quot; &#123;\n        fmt.Println(i, c)\n    &#125;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/683e3fed445b42298f3e872d9f8384d4.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n   var countryCapitalMap map[string]string\n   &#x2F;* 创建集合 *&#x2F;\n   countryCapitalMap &#x3D; make(map[string]string)\n   \n   &#x2F;* map 插入 key-value 对，各个国家对应的首都 *&#x2F;\n   countryCapitalMap[&quot;France&quot;] &#x3D; &quot;Paris&quot;\n   countryCapitalMap[&quot;Italy&quot;] &#x3D; &quot;Rome&quot;\n   countryCapitalMap[&quot;Japan&quot;] &#x3D; &quot;Tokyo&quot;\n   countryCapitalMap[&quot;India&quot;] &#x3D; &quot;New Delhi&quot;\n   \n   &#x2F;* 使用 key 输出 map 值 *&#x2F;\n   for country :&#x3D; range countryCapitalMap &#123;\n      fmt.Println(&quot;Capital of&quot;,country,&quot;is&quot;,countryCapitalMap[country])\n   &#125;\n   \n   &#x2F;* 查看元素在集合中是否存在 *&#x2F;\n   captial, ok :&#x3D; countryCapitalMap[&quot;United States&quot;]\n   &#x2F;* 如果 ok 是 true, 则存在，否则不存在 *&#x2F;\n   if(ok)&#123;\n      fmt.Println(&quot;Capital of United States is&quot;, captial)  \n   &#125;else &#123;\n      fmt.Println(&quot;Capital of United States is not present&quot;) \n   &#125;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/4a21bb262a3f4833abecbef33bbe4ce9.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"递归函数\"><a href=\"#递归函数\" class=\"headerlink\" title=\"递归函数\"></a>递归函数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc Factorial(x int) (result int) &#123;\n  if x &#x3D;&#x3D; 0 &#123;\n    result &#x3D; 1   \n  &#125; else &#123;\n    result &#x3D; x * Factorial(x - 1)\n  &#125;\n  return\n&#125;\n\nfunc main() &#123;  \n    var i int &#x3D; 15\n    fmt.Printf(&quot;%d 的阶乘是 %d\\n&quot;, i, Factorial(i))\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/99cc272d6c32465f889658a4296e0553.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc fibonacci(n int) int &#123;\n  if n &lt; 2 &#123;\n   return n\n  &#125;\n  return fibonacci(n-2) + fibonacci(n-1)\n&#125;\n\nfunc main() &#123;\n    var i int\n    for i &#x3D; 0; i &lt; 10; i++ &#123;\n       fmt.Printf(&quot;%d\\t&quot;, fibonacci(i))\n    &#125;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/dd2c70d018e64d2c96818575e447cb56.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n    &quot;fmt&quot;\n)\n\ntype Phone interface &#123;\n    call()\n&#125;\n\ntype NokiaPhone struct &#123;\n&#125;\n\nfunc (nokiaPhone NokiaPhone) call() &#123;\n    fmt.Println(&quot;I am Nokia, I can call you!&quot;)\n&#125;\n\ntype IPhone struct &#123;\n&#125;\n\nfunc (iPhone IPhone) call() &#123;\n    fmt.Println(&quot;I am iPhone, I can call you!&quot;)\n&#125;\n\nfunc main() &#123;\n    var phone Phone\n\n    phone &#x3D; new(NokiaPhone)\n    phone.call()\n\n    phone &#x3D; new(IPhone)\n    phone.call()\n\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/2062187c1f934bbca890a10d9731879a.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n)\n\n&#x2F;&#x2F; 定义一个 DivideError 结构\ntype DivideError struct &#123;\n\tdividee int\n\tdivider int\n&#125;\n\n&#x2F;&#x2F; 实现 &#96;error&#96; 接口\nfunc (de *DivideError) Error() string &#123;\n\tstrFormat :&#x3D; &#96;\n    Cannot proceed, the divider is zero.\n    dividee: %d\n    divider: 0\n&#96;\n\treturn fmt.Sprintf(strFormat, de.dividee)\n&#125;\n\n&#x2F;&#x2F; 定义 &#96;int&#96; 类型除法运算的函数\nfunc Divide(varDividee int, varDivider int) (result int, errorMsg string) &#123;\n\tif varDivider &#x3D;&#x3D; 0 &#123;\n\t\tdData :&#x3D; DivideError&#123;\n\t\t\tdividee: varDividee,\n\t\t\tdivider: varDivider,\n\t\t&#125;\n\t\terrorMsg &#x3D; dData.Error()\n\t\treturn\n\t&#125; else &#123;\n\t\treturn varDividee &#x2F; varDivider, &quot;&quot;\n\t&#125;\n\n&#125;\n\nfunc main() &#123;\n\n\t&#x2F;&#x2F; 正常情况\n\tif result, errorMsg :&#x3D; Divide(100, 10); errorMsg &#x3D;&#x3D; &quot;&quot; &#123;\n\t\tfmt.Println(&quot;100&#x2F;10 &#x3D; &quot;, result)\n\t&#125;\n\t&#x2F;&#x2F; 当被除数为零的时候会返回错误信息\n\tif _, errorMsg :&#x3D; Divide(100, 0); errorMsg !&#x3D; &quot;&quot; &#123;\n\t\tfmt.Println(&quot;errorMsg is: &quot;, errorMsg)\n\t&#125;\n\n&#125;\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/e513c92130034cab9c8a215906360968.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;reflect&quot;\n)\n\nfunc main() &#123;\n\tvar booknum float32 &#x3D; 6\n\tvar isbook bool &#x3D; true\n\tbookauthor :&#x3D; &quot;www.w3cschool.cn&quot;\n\tbookdetail :&#x3D; make(map[string]string)\n\tbookdetail[&quot;Go语言教程&quot;]&#x3D;&quot;www.w3cschool.cn&quot;\n\tfmt.Println(reflect.ValueOf(booknum))\n\tfmt.Println(reflect.ValueOf(isbook))\n\tfmt.Println(reflect.ValueOf(bookauthor))\n\tfmt.Println(reflect.ValueOf(bookdetail))\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5e0a939b56f742e899f2e12b63f4a6ce.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"并发\"><a href=\"#并发\" class=\"headerlink\" title=\"并发\"></a>并发</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;sync&quot;\n)\n\nvar wg sync.WaitGroup\n\nfunc hello(i int) &#123;\n\tfmt.Printf(&quot;hello,欢迎来到编程狮%v\\n&quot;, i)\n\tdefer wg.Done()&#x2F;&#x2F;goroutine结束计数器-1\n&#125;\n\nfunc main() &#123;\n\tfor i :&#x3D; 0; i &lt; 10; i++ &#123;\n\t\tgo hello(i)\n\t\twg.Add(1)&#x2F;&#x2F;启动一个goroutine计数器+1\n\t&#125;\n\twg.Wait()&#x2F;&#x2F;等待所有的goroutine执行结束\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/d56433c0ce974269a2332c8e032aeec6.png\" alt=\"在这里插入图片描述\"></p>\n","text":"w3c环境搭建 w3cschool第一个go程序配置路径： $env:Path &#x3D; [System.Environment]::GetEnvironmentVariable(&quot;Path&quot;,&quot;Machine&quot;) package ma...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"GO","slug":"GO","count":4,"path":"api/tags/GO.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#w3c\"><span class=\"toc-text\">w3c</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">环境搭建</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#w3cschool\"><span class=\"toc-text\">w3cschool</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E4%B8%AAgo%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">第一个go程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">基础语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">字符串连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">变量声明</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">常量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#iota\"><span class=\"toc-text\">iota</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Go-%E8%AF%AD%E8%A8%80%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">Go 语言运算符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8C%87%E9%92%88\"><span class=\"toc-text\">指针</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">结构体</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%87%E7%89%87\"><span class=\"toc-text\">切片</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#map\"><span class=\"toc-text\">map</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">递归函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">接口</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\"><span class=\"toc-text\">错误处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%B0%84\"><span class=\"toc-text\">反射</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E5%8F%91\"><span class=\"toc-text\">并发</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【python机器学习基础教程】(一)","uid":"a4dfed67ba141d1dc18bc0e6d1e3a85f","slug":"python机器学习1","date":"2022-11-03T14:51:49.000Z","updated":"2022-11-08T15:54:23.151Z","comments":true,"path":"api/articles/python机器学习1.json","keywords":null,"cover":[],"text":"主要使用python和scikit-learn库 必要的库和工具SciPy所有代码默认导入以下库： import numpy as np import matplotlib.pyplot as plt import pandas as pd import mglearn SciP...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":9,"path":"api/categories/机器学习.json"}],"tags":[{"name":"python","slug":"python","count":9,"path":"api/tags/python.json"},{"name":"机器学习","slug":"机器学习","count":5,"path":"api/tags/机器学习.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"【电子羊的奇妙冒险】初试深度学习（3）","uid":"7a681ad033be663923aa1e3ac79573bb","slug":"电子羊3","date":"2022-11-03T14:50:49.000Z","updated":"2022-11-03T14:05:01.666Z","comments":true,"path":"api/articles/电子羊3.json","keywords":null,"cover":[],"text":"噪声高斯噪声 高斯噪声是指它的概率密度函数服从高斯分布（即正态分布）的一类噪声。常见的高斯噪声包括起伏噪声、宇宙噪声、热噪声和散粒噪声等等。除常用抑制噪声的方法外，对高斯噪声的抑制方法常常采用数理统计方法。所谓高斯噪声是指它的概率密度函数服从高斯分布（即正态分布）的一类噪声。如果...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"深度学习","slug":"深度学习","count":9,"path":"api/tags/深度学习.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}