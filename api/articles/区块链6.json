{"title":"【区块链技术与应用】（六）","uid":"0d120f5730c7a7a14db4689c0e15f358","slug":"区块链6","date":"2022-11-10T03:23:49.000Z","updated":"2022-11-10T03:24:15.394Z","comments":true,"path":"api/articles/区块链6.json","keywords":null,"cover":[],"content":"<p><img src=\"https://img-blog.csdnimg.cn/9c91c16c82c54b08b4a2bdd6f0e3537c.gif\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>本次任务相对顺利，因为是已经打包的案例。不过二三案例中不像案例一中有go的chaincode,执行需要花时间debug<br><img src=\"https://img-blog.csdnimg.cn/a98771a2cd49431f9cd040692863b130.png\" alt=\"在这里插入图片描述\"></p>\n<p>案例链接：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://pkg.go.dev/github.com/hyperledger/fabric-gateway/pkg/client#section-readme\">https://pkg.go.dev/github.com/hyperledger/fabric-gateway/pkg/client#section-readme</a></p>\n<h2 id=\"案例一：资产转移基本示例\"><a href=\"#案例一：资产转移基本示例\" class=\"headerlink\" title=\"案例一：资产转移基本示例\"></a>案例一：资产转移基本示例</h2><h3 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h3><p>资产转移基本示例演示：</p></blockquote>\n<ul>\n<li>将客户端应用程序连接到 Fabric 区块链网络。</li>\n<li>提交智能合约交易以更新账本状态。</li>\n<li>评估智能合约交易以查询账本状态。</li>\n<li>处理事务调用中的错误。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/ling1998/article/details/127202209\">https://blog.csdn.net/ling1998/article/details/127202209</a></p></blockquote>\n<h4 id=\"链码启动\"><a href=\"#链码启动\" class=\"headerlink\" title=\"链码启动\"></a>链码启动</h4><p>项目地址：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://github.com/hyperledger/fabric-samples/blob/main/asset-transfer-basic/chaincode-go/assetTransfer.go\">https://github.com/hyperledger/fabric-samples/blob/main/asset-transfer-basic/chaincode-go/assetTransfer.go</a></p></blockquote>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">&#x2F;*\nSPDX-License-Identifier: Apache-2.0\n*&#x2F;\n\npackage main\n\nimport (\n\t&quot;log&quot;\n\n\t&quot;github.com&#x2F;hyperledger&#x2F;fabric-contract-api-go&#x2F;contractapi&quot;\n\t&quot;github.com&#x2F;hyperledger&#x2F;fabric-samples&#x2F;asset-transfer-basic&#x2F;chaincode-go&#x2F;chaincode&quot;\n)\n\nfunc main() &#123;\n\tassetChaincode, err :&#x3D; contractapi.NewChaincode(&amp;chaincode.SmartContract&#123;&#125;)\n\tif err !&#x3D; nil &#123;\n\t\tlog.Panicf(&quot;Error creating asset-transfer-basic chaincode: %v&quot;, err)\n\t&#125;\n\n\tif err :&#x3D; assetChaincode.Start(); err !&#x3D; nil &#123;\n\t\tlog.Panicf(&quot;Error starting asset-transfer-basic chaincode: %v&quot;, err)\n\t&#125;\n&#125;</code></pre>\n<h4 id=\"链码结构\"><a href=\"#链码结构\" class=\"headerlink\" title=\"链码结构\"></a>链码结构</h4><p>asset-transfer-basic/chaincode-go/chaincode/smartcontract.go</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">type SmartContract struct &#123;\n\tcontractapi.Contract\n&#125;</code></pre>\n<p><strong>完整代码</strong><br><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">package chaincode\n\nimport (\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n\n\t&quot;github.com&#x2F;hyperledger&#x2F;fabric-contract-api-go&#x2F;contractapi&quot;\n)\n\n&#x2F;&#x2F; SmartContract provides functions for managing an Asset\ntype SmartContract struct &#123;\n\tcontractapi.Contract\n&#125;\n\n&#x2F;&#x2F; Asset describes basic details of what makes up a simple asset\n&#x2F;&#x2F;Insert struct field in alphabetic order &#x3D;&gt; to achieve determinism across languages\n&#x2F;&#x2F; golang keeps the order when marshal to json but doesn&#39;t order automatically\ntype Asset struct &#123;\n\tAppraisedValue int    &#96;json:&quot;AppraisedValue&quot;&#96;\n\tColor          string &#96;json:&quot;Color&quot;&#96;\n\tID             string &#96;json:&quot;ID&quot;&#96;\n\tOwner          string &#96;json:&quot;Owner&quot;&#96;\n\tSize           int    &#96;json:&quot;Size&quot;&#96;\n&#125;\n\n&#x2F;&#x2F; InitLedger adds a base set of assets to the ledger\nfunc (s *SmartContract) InitLedger(ctx contractapi.TransactionContextInterface) error &#123;\n\tassets :&#x3D; []Asset&#123;\n\t\t&#123;ID: &quot;asset1&quot;, Color: &quot;blue&quot;, Size: 5, Owner: &quot;Tomoko&quot;, AppraisedValue: 300&#125;,\n\t\t&#123;ID: &quot;asset2&quot;, Color: &quot;red&quot;, Size: 5, Owner: &quot;Brad&quot;, AppraisedValue: 400&#125;,\n\t\t&#123;ID: &quot;asset3&quot;, Color: &quot;green&quot;, Size: 10, Owner: &quot;Jin Soo&quot;, AppraisedValue: 500&#125;,\n\t\t&#123;ID: &quot;asset4&quot;, Color: &quot;yellow&quot;, Size: 10, Owner: &quot;Max&quot;, AppraisedValue: 600&#125;,\n\t\t&#123;ID: &quot;asset5&quot;, Color: &quot;black&quot;, Size: 15, Owner: &quot;Adriana&quot;, AppraisedValue: 700&#125;,\n\t\t&#123;ID: &quot;asset6&quot;, Color: &quot;white&quot;, Size: 15, Owner: &quot;Michel&quot;, AppraisedValue: 800&#125;,\n\t&#125;\n\n\tfor _, asset :&#x3D; range assets &#123;\n\t\tassetJSON, err :&#x3D; json.Marshal(asset)\n\t\tif err !&#x3D; nil &#123;\n\t\t\treturn err\n\t\t&#125;\n\n\t\terr &#x3D; ctx.GetStub().PutState(asset.ID, assetJSON)\n\t\tif err !&#x3D; nil &#123;\n\t\t\treturn fmt.Errorf(&quot;failed to put to world state. %v&quot;, err)\n\t\t&#125;\n\t&#125;\n\n\treturn nil\n&#125;\n\n&#x2F;&#x2F; CreateAsset issues a new asset to the world state with given details.\nfunc (s *SmartContract) CreateAsset(ctx contractapi.TransactionContextInterface, id string, color string, size int, owner string, appraisedValue int) error &#123;\n\texists, err :&#x3D; s.AssetExists(ctx, id)\n\tif err !&#x3D; nil &#123;\n\t\treturn err\n\t&#125;\n\tif exists &#123;\n\t\treturn fmt.Errorf(&quot;the asset %s already exists&quot;, id)\n\t&#125;\n\n\tasset :&#x3D; Asset&#123;\n\t\tID:             id,\n\t\tColor:          color,\n\t\tSize:           size,\n\t\tOwner:          owner,\n\t\tAppraisedValue: appraisedValue,\n\t&#125;\n\tassetJSON, err :&#x3D; json.Marshal(asset)\n\tif err !&#x3D; nil &#123;\n\t\treturn err\n\t&#125;\n\n\treturn ctx.GetStub().PutState(id, assetJSON)\n&#125;\n\n&#x2F;&#x2F; ReadAsset returns the asset stored in the world state with given id.\nfunc (s *SmartContract) ReadAsset(ctx contractapi.TransactionContextInterface, id string) (*Asset, error) &#123;\n\tassetJSON, err :&#x3D; ctx.GetStub().GetState(id)\n\tif err !&#x3D; nil &#123;\n\t\treturn nil, fmt.Errorf(&quot;failed to read from world state: %v&quot;, err)\n\t&#125;\n\tif assetJSON &#x3D;&#x3D; nil &#123;\n\t\treturn nil, fmt.Errorf(&quot;the asset %s does not exist&quot;, id)\n\t&#125;\n\n\tvar asset Asset\n\terr &#x3D; json.Unmarshal(assetJSON, &amp;asset)\n\tif err !&#x3D; nil &#123;\n\t\treturn nil, err\n\t&#125;\n\n\treturn &amp;asset, nil\n&#125;\n\n&#x2F;&#x2F; UpdateAsset updates an existing asset in the world state with provided parameters.\nfunc (s *SmartContract) UpdateAsset(ctx contractapi.TransactionContextInterface, id string, color string, size int, owner string, appraisedValue int) error &#123;\n\texists, err :&#x3D; s.AssetExists(ctx, id)\n\tif err !&#x3D; nil &#123;\n\t\treturn err\n\t&#125;\n\tif !exists &#123;\n\t\treturn fmt.Errorf(&quot;the asset %s does not exist&quot;, id)\n\t&#125;\n\n\t&#x2F;&#x2F; overwriting original asset with new asset\n\tasset :&#x3D; Asset&#123;\n\t\tID:             id,\n\t\tColor:          color,\n\t\tSize:           size,\n\t\tOwner:          owner,\n\t\tAppraisedValue: appraisedValue,\n\t&#125;\n\tassetJSON, err :&#x3D; json.Marshal(asset)\n\tif err !&#x3D; nil &#123;\n\t\treturn err\n\t&#125;\n\n\treturn ctx.GetStub().PutState(id, assetJSON)\n&#125;\n\n&#x2F;&#x2F; DeleteAsset deletes an given asset from the world state.\nfunc (s *SmartContract) DeleteAsset(ctx contractapi.TransactionContextInterface, id string) error &#123;\n\texists, err :&#x3D; s.AssetExists(ctx, id)\n\tif err !&#x3D; nil &#123;\n\t\treturn err\n\t&#125;\n\tif !exists &#123;\n\t\treturn fmt.Errorf(&quot;the asset %s does not exist&quot;, id)\n\t&#125;\n\n\treturn ctx.GetStub().DelState(id)\n&#125;\n\n&#x2F;&#x2F; AssetExists returns true when asset with given ID exists in world state\nfunc (s *SmartContract) AssetExists(ctx contractapi.TransactionContextInterface, id string) (bool, error) &#123;\n\tassetJSON, err :&#x3D; ctx.GetStub().GetState(id)\n\tif err !&#x3D; nil &#123;\n\t\treturn false, fmt.Errorf(&quot;failed to read from world state: %v&quot;, err)\n\t&#125;\n\n\treturn assetJSON !&#x3D; nil, nil\n&#125;\n\n&#x2F;&#x2F; TransferAsset updates the owner field of asset with given id in world state, and returns the old owner.\nfunc (s *SmartContract) TransferAsset(ctx contractapi.TransactionContextInterface, id string, newOwner string) (string, error) &#123;\n\tasset, err :&#x3D; s.ReadAsset(ctx, id)\n\tif err !&#x3D; nil &#123;\n\t\treturn &quot;&quot;, err\n\t&#125;\n\n\toldOwner :&#x3D; asset.Owner\n\tasset.Owner &#x3D; newOwner\n\n\tassetJSON, err :&#x3D; json.Marshal(asset)\n\tif err !&#x3D; nil &#123;\n\t\treturn &quot;&quot;, err\n\t&#125;\n\n\terr &#x3D; ctx.GetStub().PutState(id, assetJSON)\n\tif err !&#x3D; nil &#123;\n\t\treturn &quot;&quot;, err\n\t&#125;\n\n\treturn oldOwner, nil\n&#125;\n\n&#x2F;&#x2F; GetAllAssets returns all assets found in world state\nfunc (s *SmartContract) GetAllAssets(ctx contractapi.TransactionContextInterface) ([]*Asset, error) &#123;\n\t&#x2F;&#x2F; range query with empty string for startKey and endKey does an\n\t&#x2F;&#x2F; open-ended query of all assets in the chaincode namespace.\n\tresultsIterator, err :&#x3D; ctx.GetStub().GetStateByRange(&quot;&quot;, &quot;&quot;)\n\tif err !&#x3D; nil &#123;\n\t\treturn nil, err\n\t&#125;\n\tdefer resultsIterator.Close()\n\n\tvar assets []*Asset\n\tfor resultsIterator.HasNext() &#123;\n\t\tqueryResponse, err :&#x3D; resultsIterator.Next()\n\t\tif err !&#x3D; nil &#123;\n\t\t\treturn nil, err\n\t\t&#125;\n\n\t\tvar asset Asset\n\t\terr &#x3D; json.Unmarshal(queryResponse.Value, &amp;asset)\n\t\tif err !&#x3D; nil &#123;\n\t\t\treturn nil, err\n\t\t&#125;\n\t\tassets &#x3D; append(assets, &amp;asset)\n\t&#125;\n\n\treturn assets, nil\n&#125;</code></pre></p>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><h4 id=\"创建测试网络和通道\"><a href=\"#创建测试网络和通道\" class=\"headerlink\" title=\"创建测试网络和通道\"></a>创建测试网络和通道</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">.&#x2F;network.sh up createChannel -c mychannel -ca</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/f27742f02fe3431d8b997cf0827f62ed.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/ef88153acdd448f0953a9420bb82ba9d.png\" alt=\"请添加图片描述\"></p>\n<h4 id=\"部署实现其中一个智能合约\"><a href=\"#部署实现其中一个智能合约\" class=\"headerlink\" title=\"部署实现其中一个智能合约\"></a>部署实现其中一个智能合约</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To deploy the TypeScript chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-typescript&#x2F; -ccl typescript\n\n# To deploy the Go chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-go&#x2F; -ccl go\n\n# To deploy the Java chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-java&#x2F; -ccl java</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/8bbc8b5f6ea74a8190bed20ccf794fa4.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/984e86e18e7e4d96b0bd9ed9bbeaa690.png\" alt=\"在这里插入图片描述\"><img src=\"https://img-blog.csdnimg.cn/8742f3d319a744e982cd5274a570bf3d.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/5f245919c88d4a609e168b309228baa7.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"运行应用程序\"><a href=\"#运行应用程序\" class=\"headerlink\" title=\"运行应用程序\"></a>运行应用程序</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To run the Typescript sample application\ncd application-gateway-typescript\nnpm install\nnpm start\n\n# To run the Go sample application\ncd application-gateway-go\ngo run .\n\n# To run the Java sample application\ncd application-gateway-java\n.&#x2F;gradlew run</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/81318e06f7474a5da2f3832a6afb51d0.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/a6b0cbe8ca4340f58f980c4ec1399298.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">.&#x2F;network.sh down</code></pre>\n<h2 id=\"案例二：资产转移事件示例\"><a href=\"#案例二：资产转移事件示例\" class=\"headerlink\" title=\"案例二：资产转移事件示例\"></a>案例二：资产转移事件示例</h2><p>资产转移事件示例演示：</p>\n<p>从智能合约交易函数发出链码事件。<br>在客户端应用程序中接收链码事件。<br>在客户端应用程序中重放以前的链码事件。</p>\n<h3 id=\"运行-1\"><a href=\"#运行-1\" class=\"headerlink\" title=\"运行\"></a>运行</h3><h4 id=\"创建测试网络和通道-1\"><a href=\"#创建测试网络和通道-1\" class=\"headerlink\" title=\"创建测试网络和通道\"></a>创建测试网络和通道</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">.&#x2F;network.sh up createChannel -c mychannel -ca</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/1eca7d4242004a81a5eb527728e02447.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"部署实现其中一个智能合约-1\"><a href=\"#部署实现其中一个智能合约-1\" class=\"headerlink\" title=\"部署实现其中一个智能合约\"></a>部署实现其中一个智能合约</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To deploy the JavaScript chaincode implementation\n.&#x2F;network.sh deployCC -ccn events -ccp ..&#x2F;asset-transfer-events&#x2F;chaincode-javascript&#x2F; -ccl javascript -ccep &quot;OR(&#39;Org1MSP.peer&#39;,&#39;Org2MSP.peer&#39;)&quot;\n\n# To deploy the Java chaincode implementation\n.&#x2F;network.sh deployCC -ccn events -ccp ..&#x2F;asset-transfer-events&#x2F;chaincode-java&#x2F; -ccl java -ccep &quot;OR(&#39;Org1MSP.peer&#39;,&#39;Org2MSP.peer&#39;)&quot;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5bd61346887c4e3aa66d0dc4c14f3fb4.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/7a0d99f846a340199c56140788042e5e.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"运行应用程序-1\"><a href=\"#运行应用程序-1\" class=\"headerlink\" title=\"运行应用程序\"></a>运行应用程序</h4><p>（从文件夹）asset-transfer-events</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To run the Go sample application\ncd application-gateway-go\ngo run .\n\n# To run the Typescript sample application\ncd application-gateway-typescript\nnpm install\nnpm start\n\n# To run the Java sample application\ncd application-gateway-java\n.&#x2F;gradlew run</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/da894e20a8744c41bac93ca99d83a40f.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"结束-1\"><a href=\"#结束-1\" class=\"headerlink\" title=\"结束\"></a>结束</h3><p>回到test-network</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">.&#x2F;network.sh down</code></pre>\n<h2 id=\"案例三：链下数据存储示例\"><a href=\"#案例三：链下数据存储示例\" class=\"headerlink\" title=\"案例三：链下数据存储示例\"></a>案例三：链下数据存储示例</h2><p>链下数据存储示例演示：</p>\n<ul>\n<li>在客户端应用程序中接收块事件。</li>\n<li>使用检查指针在发生故障或应用程序重新启动后恢复事件侦听。</li>\n<li>从区块事件中提取账本更新，以构建链下数据存储。</li>\n</ul>\n<h3 id=\"运行-2\"><a href=\"#运行-2\" class=\"headerlink\" title=\"运行\"></a>运行</h3><h4 id=\"创建测试网络和通道-2\"><a href=\"#创建测试网络和通道-2\" class=\"headerlink\" title=\"创建测试网络和通道\"></a>创建测试网络和通道</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">.&#x2F;network.sh up createChannel -c mychannel -ca</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/35fccaaf5733465aa8e610a0e3f43eab.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/5cdf0b2d0f43400ea35a2ef3c3c4cdd0.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"部署资产转移基本智能合约实现之一\"><a href=\"#部署资产转移基本智能合约实现之一\" class=\"headerlink\" title=\"部署资产转移基本智能合约实现之一\"></a>部署资产转移基本智能合约实现之一</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To deploy the TypeScript chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-typescript&#x2F; -ccl typescript\n\n# To deploy the Go chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-go&#x2F; -ccl go\n\n# To deploy the Java chaincode implementation\n.&#x2F;network.sh deployCC -ccn basic -ccp ..&#x2F;asset-transfer-basic&#x2F;chaincode-java&#x2F; -ccl java</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/6dd29a4364764ae799119900a86c3c2f.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"用一些资产填充账本，并使用事件来捕获账本更新\"><a href=\"#用一些资产填充账本，并使用事件来捕获账本更新\" class=\"headerlink\" title=\"用一些资产填充账本，并使用事件来捕获账本更新\"></a>用一些资产填充账本，并使用事件来捕获账本更新</h4><p>从文件夹）。off_chain_data</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To run the TypeScript sample application\ncd application-typescript\nnpm install\nnpm start transact listen\n\n# To run the Java sample application\ncd application-java\n.&#x2F;gradlew run --quiet --args&#x3D;&#39;transact listen&#39;</code></pre>\n<h4 id=\"使用Control-C-中断侦听器进程\"><a href=\"#使用Control-C-中断侦听器进程\" class=\"headerlink\" title=\"使用Control-C 中断侦听器进程\"></a>使用Control-C 中断侦听器进程</h4><h4 id=\"查看区块链的当前世界状态\"><a href=\"#查看区块链的当前世界状态\" class=\"headerlink\" title=\"查看区块链的当前世界状态\"></a>查看区块链的当前世界状态</h4><p><strong>off_chain_datastore.log</strong><br><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To run the TypeScript sample application\ncd application-typescript\nnpm --silent start getAllAssets\n\n# To run the Java sample application\ncd application-java\n.&#x2F;gradlew run --quiet --args&#x3D;getAllAssets</code></pre><br><img src=\"https://img-blog.csdnimg.cn/20548c61df1644ecb98b55d21526f467.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"进行更多账本更新，然后观察侦听器恢复功能\"><a href=\"#进行更多账本更新，然后观察侦听器恢复功能\" class=\"headerlink\" title=\"进行更多账本更新，然后观察侦听器恢复功能\"></a>进行更多账本更新，然后观察侦听器恢复功能</h4><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"># To run the TypeScript sample application\ncd application-typescript\nnpm start transact\nSIMULATED_FAILURE_COUNT&#x3D;5 npm start listen\nnpm start listen\n\n# To run the Java sample application\ncd application-java\n.&#x2F;gradlew run --quiet --args&#x3D;transact\nSIMULATED_FAILURE_COUNT&#x3D;5 .&#x2F;gradlew run --quiet --args&#x3D;listen\n.&#x2F;gradlew run --quiet --args&#x3D;listen</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/a969ad94488f4ae3b27c7f32215b8eaf.png\" alt=\"请添加图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/057fef370cf646b69f0dfcccfd5d46da.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本周主要进行了三个案例的实战，跑代码很顺利所以心情也很好。<br>需要注意的一点是，案例中同时给出了java和go的代码，第一次把两个都跑了，事实上只需要选择一个就可。<br>建议还是用go。<br><img src=\"https://img-blog.csdnimg.cn/7baf47f21cdc463f8b2e41792b71245f.png\" alt=\"在这里插入图片描述\"><br>第一部分的资产转移案例还有拓展内容，可以作为参考</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/ling1998/article/details/127202209\">https://blog.csdn.net/ling1998/article/details/127202209</a><br><img src=\"https://img-blog.csdnimg.cn/5a2e2962fa3c4a2e9979ea5d7056b933.jpeg\" alt=\"在这里插入图片描述\"></p></blockquote>\n","text":" 引言本次任务相对顺利，因为是已经打包的案例。不过二三案例中不像案例一中有go的chaincode,执行需要花时间debug 案例链接： https://pkg.go.dev/github.com/hyperledger/fabric-gateway/pkg/client#sec...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"10 mins."},"categories":[{"name":"信管","slug":"信管","count":10,"path":"api/categories/信管.json"}],"tags":[{"name":"区块链","slug":"区块链","count":8,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E8%A8%80\"><span class=\"toc-text\">引言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A1%88%E4%BE%8B%E4%B8%80%EF%BC%9A%E8%B5%84%E4%BA%A7%E8%BD%AC%E7%A7%BB%E5%9F%BA%E6%9C%AC%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">案例一：资产转移基本示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">代码分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%93%BE%E7%A0%81%E5%90%AF%E5%8A%A8\"><span class=\"toc-text\">链码启动</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%93%BE%E7%A0%81%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">链码结构</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">运行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E9%81%93\"><span class=\"toc-text\">创建测试网络和通道</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E5%AE%9E%E7%8E%B0%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">部署实现其中一个智能合约</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">运行应用程序</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9D%9F\"><span class=\"toc-text\">结束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A1%88%E4%BE%8B%E4%BA%8C%EF%BC%9A%E8%B5%84%E4%BA%A7%E8%BD%AC%E7%A7%BB%E4%BA%8B%E4%BB%B6%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">案例二：资产转移事件示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C-1\"><span class=\"toc-text\">运行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E9%81%93-1\"><span class=\"toc-text\">创建测试网络和通道</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E5%AE%9E%E7%8E%B0%E5%85%B6%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6-1\"><span class=\"toc-text\">部署实现其中一个智能合约</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-1\"><span class=\"toc-text\">运行应用程序</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9D%9F-1\"><span class=\"toc-text\">结束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A1%88%E4%BE%8B%E4%B8%89%EF%BC%9A%E9%93%BE%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">案例三：链下数据存储示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C-2\"><span class=\"toc-text\">运行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%BD%91%E7%BB%9C%E5%92%8C%E9%80%9A%E9%81%93-2\"><span class=\"toc-text\">创建测试网络和通道</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E8%B5%84%E4%BA%A7%E8%BD%AC%E7%A7%BB%E5%9F%BA%E6%9C%AC%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%9E%E7%8E%B0%E4%B9%8B%E4%B8%80\"><span class=\"toc-text\">部署资产转移基本智能合约实现之一</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%A8%E4%B8%80%E4%BA%9B%E8%B5%84%E4%BA%A7%E5%A1%AB%E5%85%85%E8%B4%A6%E6%9C%AC%EF%BC%8C%E5%B9%B6%E4%BD%BF%E7%94%A8%E4%BA%8B%E4%BB%B6%E6%9D%A5%E6%8D%95%E8%8E%B7%E8%B4%A6%E6%9C%AC%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">用一些资产填充账本，并使用事件来捕获账本更新</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8Control-C-%E4%B8%AD%E6%96%AD%E4%BE%A6%E5%90%AC%E5%99%A8%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">使用Control-C 中断侦听器进程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E5%BD%93%E5%89%8D%E4%B8%96%E7%95%8C%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">查看区块链的当前世界状态</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E8%A1%8C%E6%9B%B4%E5%A4%9A%E8%B4%A6%E6%9C%AC%E6%9B%B4%E6%96%B0%EF%BC%8C%E7%84%B6%E5%90%8E%E8%A7%82%E5%AF%9F%E4%BE%A6%E5%90%AC%E5%99%A8%E6%81%A2%E5%A4%8D%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">进行更多账本更新，然后观察侦听器恢复功能</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【数据库系统概论】期中作业","uid":"66ccb0ab9333327ecb5189567a6954b9","slug":"数据库期中","date":"2022-11-10T12:55:49.000Z","updated":"2022-11-10T12:56:24.430Z","comments":true,"path":"api/articles/数据库期中.json","keywords":null,"cover":[],"text":"引言本文基于markdown格式书写，公式及表达式使用latex语句编码。 PART 11.对于教学数据库的三个基本表s ( SNO , SNAME , AGE , SEX ) sc ( SNO , CNO , CNAME )c ( CNO, CNAME , TEACHER )试...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"信管","slug":"信管","count":10,"path":"api/categories/信管.json"}],"tags":[{"name":"SQL","slug":"SQL","count":3,"path":"api/tags/SQL.json"},{"name":"数据库","slug":"数据库","count":8,"path":"api/tags/数据库.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"SQL语言（二）数据更新","uid":"08a3724cd6c5748cb3a50ed908393323","slug":"sql2","date":"2022-11-09T03:16:49.000Z","updated":"2022-11-09T03:18:15.074Z","comments":true,"path":"api/articles/sql2.json","keywords":null,"cover":[],"text":"数据更新数据更新操作有三种： 向表中添加若干行数据 修改表中的数据 删除表中的若干行数据 在SQL中有相应的三类语句 插入数据插入语句INSERT通常有两种形式，一种是插入一个元组，另一种是插入子查询的结果。后者可以一次插入多个元组。 插入元组将一个新学生元组插入到Student...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"信管","slug":"信管","count":10,"path":"api/categories/信管.json"}],"tags":[{"name":"SQL","slug":"SQL","count":3,"path":"api/tags/SQL.json"},{"name":"数据库","slug":"数据库","count":8,"path":"api/tags/数据库.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}