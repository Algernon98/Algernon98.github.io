{"title":"【HNUMSC】C语言第二讲","uid":"bd5c7ff1ee333580d66d465ad6b85ea0","slug":"C语言第二讲","date":"2022-11-03T14:43:49.000Z","updated":"2022-11-08T15:49:40.652Z","comments":true,"path":"api/articles/C语言第二讲.json","keywords":null,"cover":[],"content":"<h1 id=\"C语言第二课\"><a href=\"#C语言第二课\" class=\"headerlink\" title=\"C语言第二课\"></a>C语言第二课</h1><h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><p>循环是重复执行其他语句（循环体）的语句。<br>C语言提供了三种重复语句：</p>\n<ul>\n<li>while</li>\n<li>do</li>\n<li>for</li>\n</ul>\n<p><strong>水仙花数</strong><br>“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。</p>\n<p>比方说153是一个“水仙花数”，因为153等于1的三次方、5的三次方、3的三次方这三个三次方数字的总和。<br>$153=1^3+5^3+3^3$</p>\n<h3 id=\"while语句\"><a href=\"#while语句\" class=\"headerlink\" title=\"while语句\"></a>while语句</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">while(i&lt;n)&#123;\n  i&#x3D;i+2;\n  &#125;</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i&#x3D;5;\nwhile(i&gt;&#x3D;1)&#123;\n  printf(&quot;%d\\n&quot;,i);\n  i--;\n  &#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/63c7680d3cd8465789c5fe333d71e9d5.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int main(void)\n&#123;\nint i&#x3D;1;\nwhile(i&lt;101)&#123;\n  printf(&quot;%d &quot;,i);\n  i++;\n&#125;\nreturn 0;\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/73befcf219d84ebc817c9197c190e69b.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/a0fb1c438d824f22b7dd3c4c668c1a6e.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdio.h&gt;\n\nint main(void)\n&#123;\n  int n, sum &#x3D; 0;\n\n  printf(&quot;This program sums a series of integers.\\n&quot;);\n  printf(&quot;Enter integers (0 to terminate): &quot;);\n\n  scanf(&quot;%d&quot;, &amp;n);\n  while (n !&#x3D; 0) &#123;\n    sum +&#x3D; n;\n    scanf(&quot;%d&quot;, &amp;n);\n  &#125;\n  printf(&quot;The sum is: %d\\n&quot;, sum);\n\n  return 0;\n&#125;\n</code></pre>\n<h3 id=\"do语句\"><a href=\"#do语句\" class=\"headerlink\" title=\"do语句\"></a>do语句</h3><p>do语句本质上就是while语句，只是控制表达式是在每次执行完循环体之后进行判定。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>do语句while（表达式）；</p>\n<p><img src=\"https://img-blog.csdnimg.cn/51cf7eef3ef14c58a78863df07ecf121.png\" alt=\"在这里插入图片描述\"></p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i &#x3D;10;\ndo&#123;\nprintf(&quot;%d\\n&quot;,i);\ni--;\n\n&#125;while(i&gt;0);</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/0846db41683b424bb720fa2409bbd8b8.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/e32f7318081740398c25669420e76c54.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"for语句\"><a href=\"#for语句\" class=\"headerlink\" title=\"for语句\"></a>for语句</h3><p>for语句非常适合应用在使用“计数”变量的循环中。<br><strong>for语句格式：</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>for(表达式1；表达式2；表达式3)语句</p></blockquote>\n<p>从0向上加到n-1：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i;\nfor(i&#x3D;0;i&lt;10;i++)\n   printf(&quot;i&#x3D;%d\\n&quot;,i);</code></pre>\n<p>执行for语句时，变量i先初始化为0，接着判定i是否小于10。因为判定的结果为真，所以打印i=0，然后对变量i进行自增操作。随后再次对条件i&gt;0进行判定，直到不满足条件（判定为false）为止。</p>\n<h4 id=\"for的省略表达式\"><a href=\"#for的省略表达式\" class=\"headerlink\" title=\"for的省略表达式\"></a>for的省略表达式</h4><p>C语言允许省略任意或者全部的表达式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i&#x3D;0;\nfor(;i&lt;10;i++)\n   printf(&quot;i&#x3D;%d\\n&quot;,i);</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i;\nfor(i&#x3D;0;i&lt;&#x3D;10;)&#123;\n\n   printf(&quot;i&#x3D;%d\\n&quot;,i);\n   i++; \n&#125;</code></pre>\n<p>如果省略表达式2，那么它默认为真值，for语句不会终止，会无限循环。</p>\n<h4 id=\"for语句声明\"><a href=\"#for语句声明\" class=\"headerlink\" title=\"for语句声明\"></a>for语句声明</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i&#x3D;2;\nfor(int i&#x3D;0;i&lt;10;i++)\n   printf(&quot;i&#x3D;%d\\n&quot;,i);\nprintf(&quot;%d&quot;,i);</code></pre>\n<p>for语句声明的变量不可以在循环外访问。</p>\n<p><strong>题目：打印1~100的整数</strong><br><strong>打印1~100偶数平方</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>编写程序，提示用户输入一个数n，然后显示出1~n的所以偶数平方值。例如，用户输入100，那么程序应该显示以下内容：</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">4\n16\n36\n64\n100</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>奇数x奇数=奇数，偶数x偶数=偶数，奇数x偶数=偶数</p></blockquote>\n<p><strong>对1~100求和</strong></p>\n<p>百钱百鸡问题<br>公鸡5，母鸡3，小鸡1/3，一百钱一百鸡</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int x,y,z;&#x2F;&#x2F;公鸡x只，母鸡y只，小鸡z只\nx*5+y*3+z&#x2F;3&#x3D;100；\nx+y+z&#x3D;100;</code></pre>\n<p>三重循环可以做，但是时间复杂度？</p>\n<p>如何改进？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">z&#x3D;100-x-y</code></pre>\n<p>是否有范围？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;&#x2F;x&lt;20,y&lt;33;</code></pre>\n<h4 id=\"循环中的break语句\"><a href=\"#循环中的break语句\" class=\"headerlink\" title=\"循环中的break语句\"></a>循环中的break语句</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int main(void)\n&#123;\nint i&#x3D;0;\nfor(;;i++)&#123;\n   printf(&quot;i&#x3D;%d\\n&quot;,i);\n   if(i&#x3D;&#x3D;5)&#123;\n      break;\n\t&#125;\n\n&#125;\n\treturn 0;\n&#125;</code></pre>\n<h3 id=\"continue语句\"><a href=\"#continue语句\" class=\"headerlink\" title=\"continue语句\"></a>continue语句</h3><p><img src=\"https://img-blog.csdnimg.cn/2dfe1e8743d348b08117c81e1ced1327.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>break语句会使程序跳出循环，而continue语句会把程序控制留在循环内。</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;&#x2F;读入十个非零数后循环中止\nint n&#x3D;0;\nint sum&#x3D;0;\nwhile(n&lt;0)&#123;\nscanf(&quot;%d&quot;,&amp;i);\nif(i&#x3D;&#x3D;0)\n  continue;&#x2F;&#x2F;跳过读入的0\n sum +&#x3D;1;\n n++;\n&#125;\n</code></pre>\n<h2 id=\"基本类型\"><a href=\"#基本类型\" class=\"headerlink\" title=\"基本类型\"></a>基本类型</h2><h3 id=\"整数类型\"><a href=\"#整数类型\" class=\"headerlink\" title=\"整数类型\"></a>整数类型</h3><p><img src=\"https://img-blog.csdnimg.cn/150d63d6f4554fbdbfe1e53f2297e13a.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/4a527e3df1e94165987bdaf59bf7f93d.png\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>int //4个字节</li>\n<li>long int //8个字节<br>C语言允许通过省略单词int 来缩写整数类型的名字。<br>例如，<br><strong>整数溢出</strong><br>对整数进行算数运算时，其结果可能因为太大而无法表示。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>例如，对两个int值进行算术运算时，结果必须仍然能用int类型来表示，否则会发生溢出。</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">long l;\nscanf(&quot;%ld&quot;,&amp;l);\nprintf(&quot;%ld&quot;,l);</code></pre>\n<h3 id=\"浮点类型\"><a href=\"#浮点类型\" class=\"headerlink\" title=\"浮点类型\"></a>浮点类型</h3><p>C语言提供3种浮点类型，对应三种不同的浮点格式</p>\n<ul>\n<li>float：单精度浮点数  //4个字节</li>\n<li>double：双精度浮点数 //8个字节</li>\n<li>long double：扩展精度浮点数</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">double d;\nscanf(&quot;%lf&quot;,&amp;d);\n&#x2F;&#x2F;printf函数格式中f可以用来写double类型（不能用lf）</code></pre>\n<h3 id=\"字符类型\"><a href=\"#字符类型\" class=\"headerlink\" title=\"字符类型\"></a>字符类型</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>char类型，即字符类型</p>\n<p><img src=\"https://img-blog.csdnimg.cn/a848de5e8c5845f3a84abd67c345c7c1.png\" alt=\"在这里插入图片描述\"></p></blockquote>\n<p>ASCII码<br><img src=\"https://img-blog.csdnimg.cn/e0c379ed8547464fb9cbcc1c1b35970b.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/sinat_28631741/article/details/80961033\">https://blog.csdn.net/sinat_28631741/article/details/80961033</a></p>\n<p>char类型的变量可以用任意单字符赋值：</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">char ch;\nch &#x3D;&#39;a&#39;;\nch &#x3D;&#39;A&#39;;\nch &#x3D;&#39;0&#39;;\nch &#x3D;&#39; &#39;;&#x2F;&#x2F;空格\n\nch &#x3D;ch+1;</code></pre>\n<p>可以像比较数那样对字符进行比较</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">char ch;\nint i;\ni&#x3D;&#39;a&#39;;\nch&#x3D;65;    &#x2F;&#x2F;ch is now &#39;A&#39;\nch&#x3D;ch+1;  &#x2F;&#x2F;ch is now &#39;B&#39;\nch++;    &#x2F;&#x2F; ch is now &#39;B&#39;</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>下面的if语句测试ch中是否含有小写字母，如果有，那么它会把ch转化成相应的大写字母。</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int main(void)\n&#123;\nchar ch;\nch&#x3D;&#39;f&#39;;\nif (&#39;a&#39;&lt;&#x3D;ch &amp;&amp; ch&lt;&#x3D;&#39;z&#39;) \n\n  ch &#x3D;ch -&#39;a&#39;+&#39;A&#39;;\nprintf(&quot;%c&quot;,ch);\n\treturn 0;\n&#125;</code></pre>\n<h4 id=\"getchar\"><a href=\"#getchar\" class=\"headerlink\" title=\"getchar\"></a>getchar</h4><p><img src=\"https://img-blog.csdnimg.cn/a0109a2b6d43424f83dd0446e4458afc.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以使用getchar函数和putchar函数来读写字符。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>putchar函数用于写<strong>单个</strong>字符</p></blockquote>\n<p>每次调用getchar函数时，它会读入一个字符并将其返回。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ch&#x3D;getchar();&#x2F;&#x2F;为保存这个字符，必须使用赋值操作将其储存到变量中</code></pre>\n<p><strong>确定消息的长度 </strong><br><img src=\"https://img-blog.csdnimg.cn/f1f7743d61f847429442e3c6575b53ce.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdio.h&gt;\n\nint main(void)\n&#123;\n  char ch;\n  int len &#x3D; 0;\n\n  printf(&quot;Enter a message: &quot;);\n  ch &#x3D; getchar();\n  while (ch !&#x3D; &#39;\\n&#39;) &#123;\n    len++;\n    ch &#x3D; getchar();\n  &#125;\n  printf(&quot;Your message was %d character(s) long.\\n&quot;, len);\n\n  return 0;\n&#125;</code></pre>\n<p><strong>凯撒加密</strong><br><img src=\"https://img-blog.csdnimg.cn/87ec90d81a1a4b2383c9ccf3c1ecef00.png\" alt=\"在这里插入图片描述\"><br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\n已知的最古⽼的⼀种加密技术是凯撒加密（得名于 Julius caesar）。该⽅法把⼀条消息中的每个字⺟⽤字⺟表中固定距离之后的那个字⺟来替代。（如果越过了字⺟Z，会绕回到字⺟表的起始位置。例如，如果每个字⺟都⽤字⺟表中两个位置之后的字⺟代替，那么Y就被替换为A，Z就被替换为B。）\n\n编写程序⽤凯撒加密⽅法对消息进⾏加密。⽤户输⼊待加密的消息和移位计数（字⺟移动的位置数⽬）：\nEnter message to be encrypted: Go ahead, make my day.\nEnter shift amount (1-25): 3\nEncrypted message: Jr dkhdg, pdnh pb gdb.\n\n\n注意,当⽤户输⼊26与移位计数的差值时,程序可以对消息进⾏解密:\n\n\nEnter message to be encrypted: Jr dkhdg, pdnh pb gdb.\nEnter shift amount (1-25): 23\nEncrypted message: Go ahead, make my day\n\n\n不是字⺟的那些字符不要改动。此外，加密时不要改变字⺟的⼤⼩写。\n\n\n输出范例：\n\n\nEnter message to be encrypted: Hello, world!\nEnter shift amount (1-25): 3\nEncrypted message: Khoor, zruog!\n\n\nEnter message to be encrypted: Khoor, zruog!\nEnter shift amount (1-25): 23\nEncrypted message: Hello, world!</code></pre></p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><h3 id=\"一维数组\"><a href=\"#一维数组\" class=\"headerlink\" title=\"一维数组\"></a>一维数组</h3><ul>\n<li>数组(array)是含有多个数据值的数据结构，并且每个数据值具有相同的数据类型。 </li>\n<li>这些数据值被称为元素(element)，数组内可以根据元素所处的位置对其进行单独选择。 </li>\n<li>最简单的数组类型就是一维数组。     </li>\n<li>一维数组中的元素一个接一个地编排在单独一行( 或者一列)内。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/a1be39103d6946bc843f43b8802f2ea0.png\" alt=\"在这里插入图片描述\"></p>\n<p>声明数组a有10个int类型的元素：<br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int a[10];</code></pre><br>或者用宏定义：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#define N 10\nint a[N];</code></pre>\n<h4 id=\"数组下标\"><a href=\"#数组下标\" class=\"headerlink\" title=\"数组下标\"></a>数组下标</h4><p><img src=\"https://img-blog.csdnimg.cn/0979d510c6a24998b0c023caeb7c3f4e.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>为了存取特定的数组元素，可以在写数组名的同时在后面加上一个用方括号围绕的整数值（对数组<strong>取下标</strong>或进行<strong>索引</strong>）</p></blockquote>\n<p>如果a是含有10个元素的数组，可以依此标记为a[0]，a[1]…a[9]<br><img src=\"https://img-blog.csdnimg.cn/ca644976527b47d58aee2e1a383ca315.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>数组索引从0开始</strong><br><img src=\"https://img-blog.csdnimg.cn/322ac8d69f2340d09d5e0cbfab4235cb.png\" alt=\"在这里插入图片描述\"></p>\n<p>数列反向<br><img src=\"https://img-blog.csdnimg.cn/924b23b0eef14c2e8c6e4f6dfaafcb1e.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdio.h&gt;\n\n#define N 10  &#x2F;&#x2F;定义宏\n\nint main(void)\n&#123;\n  int a[N], i;\n\n  printf(&quot;Enter %d numbers: &quot;, N);\n  for (i &#x3D; 0; i &lt; N; i++)\n    scanf(&quot;%d&quot;, &amp;a[i]);\n\n  printf(&quot;In reverse order:&quot;);\n  for (i &#x3D; N - 1; i &gt;&#x3D; 0; i--)\n    printf(&quot; %d&quot;, a[i]);\n  printf(&quot;\\n&quot;);\n\n  return 0;\n&#125;\n</code></pre>\n<h4 id=\"数组初始化\"><a href=\"#数组初始化\" class=\"headerlink\" title=\"数组初始化\"></a>数组初始化</h4><p><img src=\"https://img-blog.csdnimg.cn/0ca6744f2d6646fbb75e224f0db8060d.png\" alt=\"在这里插入图片描述\"></p>\n<p>如果初始化式比数组短，那么数组中剩余的元素赋值为0：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int a[10]&#x3D;&#123;1,2,3,4,5,6,7&#125;\n&#x2F;&#x2F;a的初始值为&#123;1,2,3,4,5,6,7,0,0,0&#125;</code></pre>\n<p>将数组初始化为0：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int a[10]&#x3D;&#123;0&#125;;\n&#x2F;&#x2F;初始化完全为空是非法的，故需要在大括号内放上一个0。初始化式比初始化的数组长也是非法的。</code></pre>\n<p>如果有了初始化式也可以省略数组的长度。</p>\n<h4 id=\"对数组使用sizeof运算符\"><a href=\"#对数组使用sizeof运算符\" class=\"headerlink\" title=\"对数组使用sizeof运算符\"></a>对数组使用sizeof运算符</h4><p><img src=\"https://img-blog.csdnimg.cn/b3344be8a5194187a7defa098e1c4064.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/a3af37ae1d454b99b1e3d25561f952c7.png\" alt=\"在这里插入图片描述\"><br>例如，数组a的清零操作可以写成如下形式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">for (i&#x3D;0;i&lt;sizeof(a)&#x2F;sizeof(a[0];i++)&#123;\n   a[i]&#x3D;0;\n&#125;</code></pre>\n<h3 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h3><p><img src=\"https://img-blog.csdnimg.cn/bddf59f11e764409bf4b84ea84d990be.png\" alt=\"在这里插入图片描述\"></p>\n<p>二维数组m有5行9列：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int m[5][9];</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/96ffc3b1d1da4476a8f1a1a5e8e16218.png\" alt=\"在这里插入图片描述\"><br>多维数组初始化<br><img src=\"https://img-blog.csdnimg.cn/58add94808924f4e8115157aefe84401.png\" alt=\"在这里插入图片描述\"><br>当需要访问数组中的每一个元素时，可以使用一对嵌套的for循环——一个循环遍历每一行，另一个循环遍历每一列：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#define N  10\ndouble a[N][N];\nint row,col;\nfor (row&#x3D;0;row&lt;N;col++)&#123;\n   for(col&#x3D;0;col&lt;N;col++)&#123;\n       if(row&#x3D;&#x3D;col)\n            a[row][col]&#x3D;1.0;\n       else\n            a[row][col]&#x3D;0.0;\n   &#125;\n\n\n&#125;</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/e66e3e2bc3c240d1b72251873a5cafe7.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int n;\nint a[n];</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/db407673f3f54aada9ca359d9d4b2b33.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p><img src=\"https://img-blog.csdnimg.cn/0371d11d6c97499b9b69635314287141.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>计算平均值，一个叫做average的函数用来计算两个<br>double类型数值的平均值：</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdio.h&gt;\n\ndouble average(double a, double b)\n&#123;\n  return (a + b) &#x2F; 2;\n&#125;\n\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span></blockquote>\n<p>一个函数调用包括函数名和其后的实际参数 (arguments)列表。</p>\n<blockquote>\n<p>average(x, y) 即为对average函数的调用。</p>\n<p>实际参数用来给函数提供信息。<br>调用average(x,y)的效果就是把变量x和y的值复制给形式参数a<br>和b</p></blockquote>\n<h3 id=\"形参与实参\"><a href=\"#形参与实参\" class=\"headerlink\" title=\"形参与实参\"></a>形参与实参</h3><p>实参是形参的初始值。第一个实参初始化第一个形参，第二个实参初始化第二个形参，以此类推。<br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int main(void)\n&#123;\n  double x, y, z;\n\n  printf(&quot;Enter three numbers: &quot;);\n  scanf(&quot;%lf%lf%lf&quot;, &amp;x, &amp;y, &amp;z);\n  printf(&quot;Average of %g and %g: %g\\n&quot;, x, y, average(x, y));\n  printf(&quot;Average of %g and %g: %g\\n&quot;, y, z, average(y, z));\n  printf(&quot;Average of %g and %g: %g\\n&quot;, x, z, average(x, z));\n\n  return 0;\n&#125;</code></pre></p>\n<p><img src=\"https://img-blog.csdnimg.cn/06a177bd421e48ad82bb120f31740dd1.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>判断 素数 </strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdbool.h&gt;   &#x2F;&#x2F;C99\n#include &lt;stdio.h&gt;\n\nbool is_prime(int n)\n&#123;\n  int divisor;\n\n  if (n &lt;&#x3D; 1)\n    return false;\n  for (divisor &#x3D; 2; divisor * divisor &lt;&#x3D; n; divisor++)\n    if (n % divisor &#x3D;&#x3D; 0)\n      return false;\n  return true;\n&#125;\n\nint main(void)\n&#123;\n  int n;\n\n  printf(&quot;Enter a number: &quot;);\n  scanf(&quot;%d&quot;, &amp;n);\n  if (is_prime(n))\n    printf(&quot;Prime\\n&quot;);\n  else\n    printf(&quot;Not prime\\n&quot;);\n\n  return 0;\n&#125;\n</code></pre>\n<h3 id=\"递归\"><a href=\"#递归\" class=\"headerlink\" title=\"递归\"></a>递归</h3><p><strong>如果函数调用它本身，那么此函数就是递归的(recursive)</strong></p>\n<h4 id=\"斐波那契数列\"><a href=\"#斐波那契数列\" class=\"headerlink\" title=\"斐波那契数列\"></a>斐波那契数列</h4><p>斐波那契数列指的是这样一个数列：1，1，2，3，5，8，13，21，34，55，89…</p>\n<p>这个数列从第3项开始，每一项都等于前两项之和。<br>$a_n=a_{n-1}+a_{n-2}$</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#include &lt;stdio.h&gt;\n&#x2F;* Author:Bio Sheep\n   website:https:&#x2F;&#x2F;algernon98.github.io&#x2F;\n*&#x2F;\n\n\n#include&lt;stdio.h&gt;\nint fib(int n)&#123;\n   int m;\n   if(n&#x3D;&#x3D;1 || n&#x3D;&#x3D;2)&#123;\n       m&#x3D;1;\n   &#125;\n   else&#123;\n    m&#x3D;fib(n-1)+fib(n-2);\n   &#125;\n   return m;\n&#125;\nint main()&#123;\n\tint num&#x3D;15;\n   for (int i&#x3D;1;i&lt;num;i++)&#123;\n\n   printf(&quot;%d\\n&quot;,fib(i));\n   &#125;\n\n&#125;    </code></pre>\n<h2 id=\"指针简单介绍\"><a href=\"#指针简单介绍\" class=\"headerlink\" title=\"指针简单介绍\"></a>指针简单介绍</h2><p><img src=\"https://img-blog.csdnimg.cn/e6ce4e9ad92a46189bab8df3637237d3.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/54e9241140fb44f69fbebb34dec65b8a.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以用一种特殊的指针变量来存储内存地址。<br>当采用指针变量p来存储变量i的地址时，我们通常说p“指<br>向”i。<br>指针就是地址，指针变量就是存贮地址的变量。<br>采用图形方式可以表达为：<br><img src=\"https://img-blog.csdnimg.cn/1dd74df941ce4447b17d67a244a8cade.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/16f144e317f84c09b2e909791b144bb6.png\" alt=\"在这里插入图片描述\"><br>C语言为指针变量ᨀ供了一对特殊的运算符：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>为得到变量的地址，可以使用&amp;（取地址）运算符。</p>\n<p>为了访问指针所指向的对象，可以使用*（间接寻址）运算 符。</p></blockquote>\n<p>声明指针变量只是为指针留出空间，但并未将其指向任何对象：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int *p; &#x2F;* points nowhere in particular *&#x2F;</code></pre>\n<p>在使用p 之前对其进行初始化是至关重要的。<br>一种初始化方法是采用某个变量的地址对其进行赋值：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">int i, *p;\np &#x3D; &amp;i;</code></pre>\n<p>将变量i的地址赋给变量p ，结果是令p指向i</p>\n<p><img src=\"https://img-blog.csdnimg.cn/b20e97f1b7b6435cbad3c6323f4a51a3.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"间接寻址运算符\"><a href=\"#间接寻址运算符\" class=\"headerlink\" title=\"间接寻址运算符\"></a>间接寻址运算符</h3><p>一旦指针变量指向了某个对象，就可以使用*（间接寻址运算符）访问<br>存储在对象中的内容。<br>如果p 指向i，可以采用如下方式输出i的值：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">printf(&quot;%d\\n&quot;, *p);</code></pre>\n<p>对变量使用&amp;运算符产生指向变量的指针，而对指针使用 *运算符则可以<br>返回到原始变量：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">j &#x3D; *&amp;i; &#x2F;* same as j &#x3D; i; *&#x2F;</code></pre>\n<p>只要p指向i，<em>p 就是i的别名\n</em>p 拥有和 i相同的值<br>改变 *p 的值，同时也会改变i的值<br><img src=\"https://img-blog.csdnimg.cn/2c10e69971c345bd8b68e109c1a85700.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h2><p>结果是可能具有不同类型的值（成员）的集合<br>每个结构成员都有名字，所以为了选择特定的结构成员需要指名结构成员的名字而非位置。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/39ca0793f45f48e0b4a6a561ab5a67e4.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/3371de21d05e40bd94a60269dad8ad1b.png\" alt=\"在这里插入图片描述\"><br>用一系列方框表示结构，水平垂直均可<br>每个结构代表一种新的作用域，任何声明在此作用域内的名字都不会和程序中的其他名字冲突。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9cd762af74ba4af9adda4f88033f482e.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h2><h3 id=\"字符串字面量\"><a href=\"#字符串字面量\" class=\"headerlink\" title=\"字符串字面量\"></a>字符串字面量</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>字符串字面量(string literal)是用一对双引号括起来的字符序列<br>“When you come to a fork in the road, take it.”<br>包含单个字符的字符串字面量与一个字符常量是不一样的</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;&#x2F;&quot;a&quot;是以指针表示的\n&#x2F;&#x2F;&#39;a&#39; 是以整数表示的</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7a9788a4c8a94226932613b85f7323ac.png\" alt=\"在这里插入图片描述\"></p>\n<p>注意：<strong>双引号</strong><br>当编译器遇到一个长度为n的字符串字面量时，给该字符串<br>分配n+1个字节的内存空间<br>该内存空间将存放字符串中的字符，外加一个额外的空字符<br>，用于标志字符串的结束<br>空字符是一个所有比特全为0的字节，用转义序列 \\0表示<br><img src=\"https://img-blog.csdnimg.cn/380794524df941f7a3dc7b882bdc8474.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/8fc057dd6d304529a03694b91cd99c31.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/c7b182123c72469f93cd68315dd0b0e7.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/abe77784f1f74132a11f624b01463da8.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/ce1556199f6a4aac9834593a139e8e09.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/084e2a1a1cf6428ea4b1194af9da04da.png\" alt=\"在这里插入图片描述\"></p>\n","text":"C语言第二课循环循环是重复执行其他语句（循环体）的语句。C语言提供了三种重复语句： while do for 水仙花数“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。 比方说153是一个“水仙花数”，因为153等于1的三次方、5的三次方、3的三次方这三个三次方数字的总和...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"C语言","slug":"C语言","count":4,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C%E8%AF%AD%E8%A8%80%E7%AC%AC%E4%BA%8C%E8%AF%BE\"><span class=\"toc-text\">C语言第二课</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">while语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#do%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">do语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">for语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#for%E7%9A%84%E7%9C%81%E7%95%A5%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">for的省略表达式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#for%E8%AF%AD%E5%8F%A5%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">for语句声明</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E4%B8%AD%E7%9A%84break%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">循环中的break语句</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#continue%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">continue语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">基本类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">整数类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">浮点类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">字符类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#getchar\"><span class=\"toc-text\">getchar</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">一维数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E4%B8%8B%E6%A0%87\"><span class=\"toc-text\">数组下标</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">数组初始化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E6%95%B0%E7%BB%84%E4%BD%BF%E7%94%A8sizeof%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">对数组使用sizeof运算符</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BD%A2%E5%8F%82%E4%B8%8E%E5%AE%9E%E5%8F%82\"><span class=\"toc-text\">形参与实参</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92\"><span class=\"toc-text\">递归</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97\"><span class=\"toc-text\">斐波那契数列</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%87%E9%92%88%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">指针简单介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%B4%E6%8E%A5%E5%AF%BB%E5%9D%80%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">间接寻址运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">结构体</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">字符串</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E9%9D%A2%E9%87%8F\"><span class=\"toc-text\">字符串字面量</span></a></li></ol></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【HNUMSC】C语言第三讲","uid":"9e4aae0d62d70adf155bf02c14221ce4","slug":"C语言第三讲","date":"2022-11-03T14:44:49.000Z","updated":"2022-11-08T15:49:56.551Z","comments":true,"path":"api/articles/C语言第三讲.json","keywords":null,"cover":[],"text":"C语言第三讲基本数据结构栈在栈（stack）中，被删除的是最近插入的元素：栈实现的是一种后进先出策略（而队列则是先进先出） 栈上insert操作称为压入（push），而无元素参数的delete操作称为弹出（pop）。餐馆里的一摞盘子，“弹出”的顺序和压入的顺序相反，因为只有最上面...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"C语言","slug":"C语言","count":4,"path":"api/tags/C语言.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"【HNUMSC】C语言第一讲","uid":"146a852d05d3eb85968d596488683f29","slug":"C语言第一讲","date":"2022-11-03T14:42:49.000Z","updated":"2022-11-08T15:49:28.567Z","comments":true,"path":"api/articles/C语言第一讲.json","keywords":null,"cover":[],"text":"C语言第一讲简介 C语言是一种底层语言 C语言是一种小型语言 C语言是一种包容性语言 #include&lt;stdio.h&gt; int main()&#123; int a,i; a&#x3D;6; for(i&#x3D;1;i&lt;&#x3D;3;i++) printf...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"C语言","slug":"C语言","count":4,"path":"api/tags/C语言.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}