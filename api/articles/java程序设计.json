{"title":"Java程序设计·笔记","uid":"cb28b0a44b029b9ea34f55f1b61057a9","slug":"java程序设计","date":"2022-11-03T14:47:49.000Z","updated":"2022-11-08T15:51:50.875Z","comments":true,"path":"api/articles/java程序设计.json","keywords":null,"cover":null,"content":"<p>资料来源：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>《java程序设计》<br>《Java技术手册》</p></blockquote>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"java与javascript比较\"><a href=\"#java与javascript比较\" class=\"headerlink\" title=\"java与javascript比较\"></a>java与javascript比较</h3><ul>\n<li>Java是静态型的语言，JavaScript是动态类型语言</li>\n<li>Java提供基于类的对象，JavaScript使用基于原型的对象。</li>\n<li>Java提供了良好的对象封装，JavaScript没有提供。</li>\n<li>Java有命名空间，JavaScript没有</li>\n<li>Java支持多线程，JavaScript不支持</li>\n</ul>\n<h2 id=\"第一行代码\"><a href=\"#第一行代码\" class=\"headerlink\" title=\"第一行代码\"></a>第一行代码</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">public class hello&#123;\n    public static void main(String args[])&#123;\n        System.out.println(&quot;hello world&quot;);\n    &#125;\n&#125;\n</code></pre>\n<p>输出<br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">D:\\coder\\JDK\\bin\\java.exe &quot;-javaagent:D:\\coder\\IntelliJ IDEA Community Edition 2022.2.1\\lib\\idea_rt.jar&#x3D;50761:D:\\coder\\IntelliJ IDEA Community Edition 2022.2.1\\bin&quot; -Dfile.encoding&#x3D;UTF-8 -Dsun.stdout.encoding&#x3D;UTF-8 -Dsun.stderr.encoding&#x3D;UTF-8 -classpath C:\\Users\\83854\\IdeaProjects\\untitled1\\out\\production\\untitled1 hello\nhello world\n</code></pre><br>现在我们来依次分析这些代码：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">public class hello&#123;</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这一行说明了一个公有类，类的名字是hello，内容从类名后的{开始，到}结束。<br>编译正确后，系统在当前的工作目录下创建一个hello.class文件。</p></blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">public static void main(String args[])&#123;</code></pre>\n<p>程序执行时，程序名之后输入的内容称为<strong>命令行参数</strong>，它是动态传递给程序中的参数。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果程序执行时给定命令行参数，则这些参数将放在称为args的字符串数组中传给main()方法</p></blockquote>\n<p>public static void<br>这一行各要素的具体含义是：</p>\n<ul>\n<li>public  该关键字说明方法main是公有方法。</li>\n<li>static  该关键字告诉编译器main()方法是静态的，可用在类hello中，不需要通过该类的实例来调用。如果方法不是静态的，则必须先创建类的实例，然后调用实例的方法。</li>\n<li>void    指明main()方法不返回任何值。</li>\n<li>String args[]    表示命令行参数，运行一个Java程序的方式是在命令行中键入如下的命令：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">java 程序名 [参数列表]</code></pre>\n<h3 id=\"java编码体例\"><a href=\"#java编码体例\" class=\"headerlink\" title=\"java编码体例\"></a>java编码体例</h3><ul>\n<li>类 ：类名 应为名词，含有大小写，每个字的首字母大写。正确的类名如：HelloWorld,Customer,MergeSort等。</li>\n<li>接口：接口是一种特殊的类，接口名 的命名约定与类名相同。</li>\n<li>方法：方法名应是动词 ，含有大小写，首字母小写，其余名字的首字母大写。如getName\\setAdress等。</li>\n<li>常量：简单类型常量的名字应该全部为大写字母，字与字之间用下划线分隔，对象常量可混合大小写。</li>\n<li>变量：所有的实例变量、类变量和全局变量都使用混合大小写，首字母为小写，后面的字首为大写，作为字间的分隔符。</li>\n</ul>\n<h3 id=\"条件运算符\"><a href=\"#条件运算符\" class=\"headerlink\" title=\"条件运算符\"></a>条件运算符</h3><p>条件运算符?:是有点晦涩的三元运算符。</p>\n<p>条件运算符的第一个操作数和第二个操作数使用问号?分开，第二个和第三个操作数使用冒号：分开。第一个操作数的计算结果必须为布尔值，第二个和第三个操作数可以是任意类型，但要能转换成同一类型。<br>条件运算符先计算第一个操作数，如果结果为true，就计算 第二个操作数，并把结果当成表达式的返回值；如果第一个操作数的计算结果为false，条件运算符会计算并返回第三个操作数。</p>\n<h2 id=\"面向程序设计\"><a href=\"#面向程序设计\" class=\"headerlink\" title=\"面向程序设计\"></a>面向程序设计</h2><p>OOP中采用了三大技术：封装、继承和多态。</p>\n<p>将数据以及对数据的操作捆绑在一起成为类，这就是<strong>封装</strong>技术。</p>\n<p>程序员只有一种基本的结构，即类。<br>将一个已有类中的数据和方法保留，并加上自己特殊的数据和方法，从而构成一个新类，这就是OOP中的继承。</p>\n<p>在一个或多个类中，可以让多个方法使用同一个名字，从而具有多态性。多态可以保证对不同类型的数据进行同等的操作，名字空间也更加宽松。</p>\n<h3 id=\"类与对象\"><a href=\"#类与对象\" class=\"headerlink\" title=\"类与对象\"></a>类与对象</h3><h4 id=\"定义类\"><a href=\"#定义类\" class=\"headerlink\" title=\"定义类\"></a>定义类</h4><p>举个例子，可以定义一个名为iPoint的类，表示笛卡尔二维坐标系中的数据点。这个类可能会定义两个字段，保存点的$x$和$y$坐标，还可能会定义处理和操作点的方法。Point就是 一个新数据类型。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;&#x2F;表示笛卡尔坐标系中的(x,y)点\npublic class Point&#123;\n  &#x2F;&#x2F;点的坐标\n  pubic doube x,y;\n  public Point(double x, double y)&#123;  &#x2F;&#x2F;初始化字段的构造办法\n     this.x&#x3D;x;\n     this.y&#x3D;y;  \n  &#125;\n  public double distanceFromOrigin()&#123;\n    return Math.sqrt(x*x+y*y);\n  &#125;\n&#125;</code></pre>\n<p>这个类的定义保存在一个名为Point.java的文件中，然后编译为一个名为Point.class 的文件，供Java程序和其他类使用。</p>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>我们已经定义了Point类，现在Point是一种新数据类型，我们可以使用下面的代码声明一个变量，存储一个Point对象：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Point p;</code></pre>\n<p>不过，声明一个存储Point对象的变量并不会创建这个对象。<br>想要创建对象，必须使用new运算符。这个关键字后面跟着对象所属的类（即对象的类型）和括号中可选的参数列表。<br>这些参数会传入类的构造方法，初始化新对象的内部字段：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;&#x2F;创建一个Point对象，表示(2,-3.5)\n&#x2F;&#x2F;声明一个变量p，存储这个新point对象的引用\nPoint p&#x3D; new Point(2.0,-3.5);\n\n&#x2F;&#x2F;创建一些其他类型的对象\n&#x2F;&#x2F;一个Date对象，表示当前时间\nDate d &#x3D;new Date();\n&#x2F;&#x2F;一个HashSet对象，保存一些对象\nSet words &#x3D;new HashSet();</code></pre>\n","text":"资料来源： 《java程序设计》《Java技术手册》 简介java与javascript比较 Java是静态型的语言，JavaScript是动态类型语言 Java提供基于类的对象，JavaScript使用基于原型的对象。 Java提供了良好的对象封装，JavaScript没有提供...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"编程语言","slug":"编程语言","count":13,"path":"api/categories/编程语言.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#java%E4%B8%8Ejavascript%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">java与javascript比较</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">第一行代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#java%E7%BC%96%E7%A0%81%E4%BD%93%E4%BE%8B\"><span class=\"toc-text\">java编码体例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">条件运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">面向程序设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">类与对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E7%B1%BB\"><span class=\"toc-text\">定义类</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">创建对象</span></a></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【动手学深度学习】学习笔记及代码实战","uid":"80007edef2872f36e05ae25c647138b8","slug":"动手学深度学习","date":"2022-11-03T14:48:49.000Z","updated":"2022-11-03T14:48:44.482Z","comments":true,"path":"api/articles/动手学深度学习.json","keywords":null,"cover":[],"text":"图像分类数据集P42图像分类数据集中最常用的是手写数字识别数据集MINST。但大部分模型在MINST上的分类精度都超过了95%。为了更直观地观察算法之间的差异，我们将使用一个图像内容更加复杂的Fashion-MINST数据集。 %matplotlib inline import ...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[],"tags":[{"name":"深度学习","slug":"深度学习","count":9,"path":"api/tags/深度学习.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"【基于AnyLogic的管理仿真系统】","uid":"ab4d0720d723497e8948d6250eb13f1a","slug":"基于anylogic","date":"2022-11-03T14:45:49.000Z","updated":"2022-11-03T14:46:17.516Z","comments":true,"path":"api/articles/基于anylogic.json","keywords":null,"cover":[],"text":"bass模型（系统动力学） 建立基础模型将模型基础建立，组成一个简单的扩散模型，并填上变量值 添加从潜在消费者到消费者的流程 潜在消费者 消费者 转换速率（流量） 添加常量两个动态变量 广告 口碑 通过创建参数来定义常量四个参数： 总人口：100000 广告效果：0.011 接触...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"信管","slug":"信管","count":5,"path":"api/tags/信管.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}