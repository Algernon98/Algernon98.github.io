{"title":"【文本分析】(一)","uid":"76ec75cbd224e987501c0cfda9dee811","slug":"文本分析1","date":"2022-11-03T15:05:49.000Z","updated":"2022-11-08T16:16:52.522Z","comments":true,"path":"api/articles/文本分析1.json","keywords":null,"cover":[],"content":"<h2 id=\"浅浅试一下\"><a href=\"#浅浅试一下\" class=\"headerlink\" title=\"浅浅试一下\"></a>浅浅试一下</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import jieba\nimport jieba.posseg as psg\nfrom collections import Counter\ntext &#x3D; &#39;我现在在jupyter notebook上写文本分析的代码！&#39;\ncut &#x3D; jieba.cut(text)\n&#39;&#x2F;&#39;.join(cut)\nprint(text)</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我现在在jupyter notebook上写文本分析的代码！</p></blockquote>\n<p>1.试图将句子最准确的切开，适合文本分析：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">words &#x3D; psg.cut(text)\nfor word,flag in words:\n    print(word,flag)</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">我 r\n现在 t\n在 p\njupyter eng\n  x\nnotebook eng\n上写 v\n文本 n\n分析 vn\n的 uj\n代码 n\n！ x</code></pre>\n<p>2.把句子中所有可以组成词的词语都扫描出来，速度快，但不能解决歧义：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#39;&#x2F;&#39;.join(jieba.cut(text,True))</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>‘我/现在/在/jupyter// //notebook/上/写/文本/本分/分析/的/代码/！’</p></blockquote>\n<h2 id=\"数据采集\"><a href=\"#数据采集\" class=\"headerlink\" title=\"数据采集\"></a>数据采集<img src=\"https://img-blog.csdnimg.cn/ed6e6c410f494b3d9a07956bfa7c6f0c.png\" alt=\"在这里插入图片描述\"></h2><p><img src=\"https://img-blog.csdnimg.cn/144c6c511c4445d98aeca99779d38f94.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import jieba\nimport jieba.analyse\n\n# 待分词的文本路径\nsourceTxt &#x3D; r&quot;C:\\Users\\83854\\Documents\\shujvji\\news1.txt&quot;\n# 分好词后的文本路径\ntargetTxt &#x3D; r&quot;C:\\Users\\83854\\Documents\\shujvji\\fenci1.txt&quot;\n\n# 对文本进行操作\nwith open(sourceTxt, &#39;r&#39;, encoding &#x3D; &#39;utf-8&#39;) as sourceFile, open(targetTxt, &#39;a+&#39;, encoding &#x3D; &#39;utf-8&#39;) as targetFile:\n    for line in sourceFile:\n        seg &#x3D; jieba.cut(line.strip(), cut_all &#x3D; False)\n        # 分好词之后之间用空格隔断\n        output &#x3D; &#39; &#39;.join(seg)\n        targetFile.write(output)\n        targetFile.write(&#39;\\n&#39;)\n    prinf(&#39;写入成功！&#39;)\n\n# 提取关键词\nwith open(targetTxt, &#39;r&#39;, encoding &#x3D; &#39;utf-8&#39;) as file:\n    text &#x3D; file.readlines()\n    &quot;&quot;&quot;\n    几个参数解释：\n        * text : 待提取的字符串类型文本\n        * topK : 返回TF-IDF权重最大的关键词的个数，默认为20个\n        * withWeight : 是否返回关键词的权重值，默认为False\n        * allowPOS : 包含指定词性的词，默认为空\n    &quot;&quot;&quot;\n    keywords &#x3D; jieba.analyse.extract_tags(str(text), topK &#x3D; 10, withWeight&#x3D;True, allowPOS&#x3D;())\n    print(keywords)\n\tprint(&#39;提取完毕！&#39;)\n\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import jieba\n\nimport jieba\nimport re\n\n#打开要处理的文章\nreader &#x3D; open( r&quot;C:\\Users\\83854\\Documents\\shujvji\\news1.txt&quot;,&#39;r&#39;,encoding&#x3D;&#39;utf8&#39;)\nstrs &#x3D;reader.read()\nresult &#x3D; open( r&quot;C:\\Users\\83854\\Documents\\shujvji\\fenci1.txt&quot;,&quot;w&quot;)\n\n# 分词，去重，列表\nword_list &#x3D; jieba.cut(strs,cut_all&#x3D;True)\n# 正则表达式去除数字，符号，单个字\nnew_words &#x3D; []\nfor i in word_list:\n    m &#x3D; re.search(&quot;\\d+&quot;,i)\n    n &#x3D; re.search(&quot;\\W+&quot;,i)\n    if not m and  not n and len(i)&gt;1:\n        new_words.append(i)\n\n# 统计词频\nword_count &#x3D; &#123;&#125; # 创建字典\nfor i in set(new_words): # 用set去除list中的重复项\n    word_count[i] &#x3D; new_words.count(i)\n\n# 格式整理\nlist_count &#x3D; sorted(word_count.items(),key&#x3D;lambda co:co[1],reverse&#x3D;True)\n\n# 打印结果\nfor i in range(300):\n    print(list_count[i],file&#x3D;result)\n\n#关闭文件\nreader.close()\nresult.close()\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/061cb0b0db994f9ca39bc77fa196adea.png\" alt=\"在这里插入图片描述\"></p>\n","text":"浅浅试一下import jieba import jieba.posseg as psg from collections import Counter text &#x3D; &#39;我现在在jupyter notebook上写文本分析的代码！&#39; cut &#x3D;...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":9,"path":"api/categories/机器学习.json"}],"tags":[{"name":"文本分析","slug":"文本分析","count":3,"path":"api/tags/文本分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%85%E6%B5%85%E8%AF%95%E4%B8%80%E4%B8%8B\"><span class=\"toc-text\">浅浅试一下</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86\"><span class=\"toc-text\">数据采集</span></a></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【PYTHON程序设计】期中准备","uid":"f7d616ea92a89a59048707721827725d","slug":"python期中准备","date":"2022-11-03T15:05:49.000Z","updated":"2022-11-03T15:05:43.981Z","comments":true,"path":"api/articles/python期中准备.json","keywords":null,"cover":[],"text":"期中测试主要要求 熟练掌握文件的读写操作 掌握csv文件二维数据的读写操作 熟练掌握List的操作 文件的读写用文本编辑器生成一个包含“今古诸事，激荡中流，宏图待看新秀”的txt格式文本文件，命名为jingu.txt。分别用文本文件方式和二进制文件方式读入，并打印输出效果。需要把...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[],"tags":[{"name":"信管","slug":"信管","count":5,"path":"api/tags/信管.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"【区块链技术与应用】（三）","uid":"a8f74615832b979b7524788c050fb00a","slug":"区块链3","date":"2022-11-03T15:00:49.000Z","updated":"2022-11-03T15:00:48.042Z","comments":true,"path":"api/articles/区块链3.json","keywords":null,"cover":[],"text":" 引言本次内容复杂、且报错较多，部分图片没有放在最终文档里，而部分报错放在文档中，最终也没有删去。解决报错比单纯对着代码跑一遍难度更大，也更有意义，故予以保留。 内容1.0 内容准备这一部分作为一些常用命令的存储，显然，我在搭建环境的过程中重新配置的一遍之前的内容。（呜呜呜破防了...","link":"","photos":[],"count_time":{"symbolsCount":"37k","symbolsTime":"33 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":10,"path":"api/tags/区块链.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}