{"title":"【数学建模】课程笔记","uid":"679a1ca1ed196b2867a4735b2a0d1db1","slug":"数模课程笔记","date":"2022-11-03T14:03:49.000Z","updated":"2022-11-03T14:03:50.062Z","comments":true,"path":"api/articles/数模课程笔记.json","keywords":null,"cover":[],"content":"<h2 id=\"插值及案例实验\"><a href=\"#插值及案例实验\" class=\"headerlink\" title=\"插值及案例实验\"></a>插值及案例实验</h2><p>插值是对给定数据的处理方法，它在工程实践和科学实验中有非常广泛、重要的应用。主要应用在如下两个方面：<br>1、通过数据进行预测分析，例如：工程实验数据与模型的分析、天气预报<br>以及社会、经济行为的统计分析等。<br>2、图形绘制与可视化，例如：图像重建、工程外观设计等。</p>\n<h3 id=\"插值基本概念\"><a href=\"#插值基本概念\" class=\"headerlink\" title=\"插值基本概念\"></a>插值基本概念</h3><p>构造通过每个已知数据点的近似函数的问题称为<strong>插值问题</strong>。<br>具体来说：在科学工程实验中，我们可以得到一组观测或测验数据${（x_i ,y_i）}_{i=1:n}$，这组数据通常揭示了自变量 $x$ 与因变量 $y$ 之间的函数关系$f(x)$。对于给定这个数据点集合${（x_i ,y_i）}_{i=1:n}$，构造一个连续函数$p(x)$使得它是$f(x)$的近似函数，而且满足：<br>$y_i=p(x_i),i=1,2,···,n.$<br>我们称近似函数$p(x)$为$f(x)$的<strong>插值函数</strong>。<br>特点：</p>\n<ol>\n<li>测得的自变量数据互不相同，即满足$x_1&lt;x_2&lt;···&lt;x_n$；</li>\n<li>易于计算（通常选择多项式插值）；</li>\n<li>是未知函数的较好逼近。</li>\n</ol>\n<h3 id=\"一维插值方法\"><a href=\"#一维插值方法\" class=\"headerlink\" title=\"一维插值方法\"></a>一维插值方法</h3><p><strong>拉格朗日方法</strong><br><strong>样条插值方法</strong><br><img src=\"https://img-blog.csdnimg.cn/da975be5b0e94fde8831f58bbfd5b869.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"二维插值方法\"><a href=\"#二维插值方法\" class=\"headerlink\" title=\"二维插值方法\"></a>二维插值方法</h3><p>双线性插值方法<br><img src=\"https://img-blog.csdnimg.cn/5dc61163eeec4b14b3a74ed7fbf92cc7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/e6360a7ad6a3480ab1bf133ea1c98002.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"拟合及案例实验\"><a href=\"#拟合及案例实验\" class=\"headerlink\" title=\"拟合及案例实验\"></a>拟合及案例实验</h2><h3 id=\"拟合基本概念\"><a href=\"#拟合基本概念\" class=\"headerlink\" title=\"拟合基本概念\"></a>拟合基本概念</h3><p>在科学工程实验中，我们可以得到一组观测或测验数据${（x_i ,y_i）}_{i=1:n}$，这组数据通常揭示了自变量 x 与因变量 y 之间的函数关系 。由于给定这个数据点${（x_i ,y_i）}_{i=1:n}$可能存在误差，构造一个连续函数$y=p(x)$使得它是$f(x)$ 的近似函数，而且满足<br>$min\\begin{Vmatrix} y_1-p(x_1) \\\\ y_2-p(x_2)\\\\·\\\\·\\\\·\\\\ y_n-p(x_n) \\end{Vmatrix}$<br>我们称近似函数$p(x)$为$f (x)$的<strong>拟合函数</strong>。<br>特点：</p>\n<ol>\n<li>测得的自变量数据可以相同 ；</li>\n<li>需首先建立 的近似函数模型；</li>\n<li>通常采用最小二乘拟合。</li>\n</ol>\n<h3 id=\"最小二乘拟合\"><a href=\"#最小二乘拟合\" class=\"headerlink\" title=\"最小二乘拟合\"></a>最小二乘拟合</h3><p>线性最小二乘问题<br>非线性最小二乘问题<br><img src=\"https://img-blog.csdnimg.cn/f21bcd8b7caa4451baa0cc0d7487168c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"线性最小二乘拟合\"><a href=\"#线性最小二乘拟合\" class=\"headerlink\" title=\"线性最小二乘拟合\"></a>线性最小二乘拟合</h3><p><img src=\"https://img-blog.csdnimg.cn/0fe44d1a82414ddb832f2d774fd12091.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><strong>基函数的选取：</strong></p>\n<ol>\n<li>通过实际问题的机理选取；</li>\n<li><p>通过散点图，通过经验选取。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/edcecefd2e814cbb95bcd9419a60e0b5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n</li>\n</ol>\n<h3 id=\"非线性最小二乘拟合\"><a href=\"#非线性最小二乘拟合\" class=\"headerlink\" title=\"非线性最小二乘拟合\"></a>非线性最小二乘拟合</h3><p><strong>基础理论与方法</strong><br><img src=\"https://img-blog.csdnimg.cn/193e7ffd01b74850850a1cf89945d682.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"><br><strong>Guass-Newton算法</strong></p>\n<h2 id=\"微分方程建模\"><a href=\"#微分方程建模\" class=\"headerlink\" title=\"微分方程建模\"></a>微分方程建模</h2><p>微分方程建模是数学建模的重要方法，因为许多实际问题的数学描述将<br>导致求解微分方程的定解问题。把形形色色的实际问题化成微分方程的定<br>解问题，大体上可以按以下几步：</p>\n<ol>\n<li>对实际问题做适当假设，简化问题；</li>\n<li>根据实际要求确定要研究的量(自变量、未知函数、必要的参数等)并确定坐标</li>\n<li>找出这些量所满足的基本规律(物理的、几何的、化学的或生物学的等<br>等)<ol>\n<li>运用这些规律列出方程和定解条件</li>\n</ol>\n</li>\n</ol>\n<p>微分方程建模的常见方法：<br><strong>按规律直接列方程</strong><br><strong>微元分析法与任意区域上取积分的方法</strong></p>\n<p> 自然界中也有许多现象所满足的规律是通过变量的微元之间的关系<br>式来表达的。对于这类问题，我们不能直接列出自变量和未知函数及其<br>变化率之间的关系式，而是通过微元分析法，利用已知的规律建立一些<br>变量（自变量与未知函数）的微元之间的关系式，然后再通过取极限的<br>方法得到微分方程，或等价地通过任意区域上取积分的方法来建立微分<br>方程</p>\n<p><strong>模拟近似法</strong><br>在生物、经济等学科中，许多现象所满足的规律并不很清楚而且相当<br>复杂，因而需要根据实际资料或大量的实验数据，提出各种假设。在一<br>定的假设下，给出实际现象所满足的规律，然后利用适当的数学方法列<br>出微分方程。<br> 在实际的微分方程建模过程中，也往往是上述方法的综合应用。不<br>论应用哪种方法，通常要根据实际情况，作出一定的假设与简化，并要<br>把模型的理论或计算结果与实际情况进行对照验证，以修改模型使之更<br>准确地描述实际问题并进而达到预测预报的目的。</p>\n<h3 id=\"微分方程数值解法\"><a href=\"#微分方程数值解法\" class=\"headerlink\" title=\"微分方程数值解法\"></a>微分方程数值解法</h3><h4 id=\"常微分方程的离散化\"><a href=\"#常微分方程的离散化\" class=\"headerlink\" title=\"常微分方程的离散化\"></a>常微分方程的离散化</h4><ul>\n<li>用差商近似导数</li>\n<li>数值积分方法</li>\n<li>Taylor多项式近似</li>\n</ul>\n<h4 id=\"数值方法\"><a href=\"#数值方法\" class=\"headerlink\" title=\"数值方法\"></a>数值方法</h4><h5 id=\"1-欧拉方法\"><a href=\"#1-欧拉方法\" class=\"headerlink\" title=\"1.欧拉方法\"></a>1.欧拉方法</h5><p><img src=\"https://img-blog.csdnimg.cn/3a04c59592ad4c5eab1b69b62d3158f9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/3ce38ee0149c4cc6b9033c872ce5a789.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"><br>局部误差分析<br>全局误差分析</p>\n<h5 id=\"2-数值积分方法\"><a href=\"#2-数值积分方法\" class=\"headerlink\" title=\"2.数值积分方法\"></a>2.数值积分方法</h5><p><img src=\"https://img-blog.csdnimg.cn/63403cd001ac4da6850bd6cb7d3f8a7d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h5 id=\"3、龙格-库塔（Runge-Kutta）方法\"><a href=\"#3、龙格-库塔（Runge-Kutta）方法\" class=\"headerlink\" title=\"3、龙格-库塔（Runge-Kutta）方法\"></a>3、龙格-库塔（Runge-Kutta）方法</h5><p><img src=\"https://img-blog.csdnimg.cn/e3595d6fc64149a68ec2fd5456d1e908.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxnZXJub245OA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h5 id=\"4-线性多步法\"><a href=\"#4-线性多步法\" class=\"headerlink\" title=\"4.线性多步法\"></a>4.线性多步法</h5><p>以上所介绍的各种数值解法都是单步法，这是因为它们在计算$y_{n+1}$时，都只用到前一步的值$y_n$。多步法就是利用到前面已经计算出的$y_n，y_{n-1},y_{n-2},···$构造迭代式：<br>$y_{n+1}=\\varphi(y_n，y_{n-1},···)$</p>\n<h2 id=\"图论\"><a href=\"#图论\" class=\"headerlink\" title=\"图论\"></a>图论</h2><h3 id=\"概论\"><a href=\"#概论\" class=\"headerlink\" title=\"概论\"></a>概论</h3><p>图论起源于 18 世纪。第一篇图论论文是瑞士数学家欧拉于 1736 年发表的“哥尼斯堡的七座桥”。1847 年，克希霍夫为了给出电网络方程而引进了“树”的概念。1857年，凯莱在计数烷CnH2n2 的同分异构物时，也发现了“树”。哈密尔顿于 1859 年提出“周游世界”游戏，用图论的术语，就是如何找出一个连通图中的生成圈、近几十年来，由于计算机技术和科学的飞速发展，大大地促进了图论研究和应用，图论的理论和方法已经渗透到物理、化学、通讯科学、建筑学、运筹学，生物遗传学、心理学、经济学、社会学等学科中。</p>\n<p>图论中所谓的“图”是指某类具体事物和这些事物之间的联系。如果我们用点表示这些具体事物，用连接两点的线段（直的或曲的）表示两个事物的特定的联系，就得到了描述这个“图”的几何形象。图论为任何一个包含了一种二元关系的离散系统提供了一个数学模型，借助于图论的概念、理论和方法，可以对该模型求解。哥尼斯堡七桥问题就是一个典型的例子。在哥尼斯堡有七座桥将普莱格尔河中的两个岛及岛与河岸联结起来，问题是要从这四块陆地中的任何一块开始通过每一座桥正好一次，再回到起点。</p>\n<p>欧拉为了解决这个问题，采用了建立数学模型的方法。他将每一块陆地用一个点来代替，将每一座桥用连接相应两点的一条线来代替，从而得到一个有四个“点”，七条“线”的“图”。<br>问题成为从任一点出发一笔画出七条线再回到起点。欧拉考察了一般一笔画的结构特点，给出了一笔画的一个判定法则：这个图是连通的，且每个点都与偶数线相关联，将这个判定法则应用于七桥问题，得到了“不可能走通”的结果，不但彻底解决了这个问题，而且开创了图论研究的先河。<br>图与网络是运筹学（Operations Research）中的一个经典和重要的分支，所研究的问题涉及经济管理、工业工程、交通运输、计算机科学与信息技术、通讯与网络技术等诸多领域。下面将要讨论的最短路问题、最大流问题、最小费用流问题和匹配问题等都是图与网络的基本问题。</p>\n<h4 id=\"最短路问题（SPP－shortest-path-problem）\"><a href=\"#最短路问题（SPP－shortest-path-problem）\" class=\"headerlink\" title=\"最短路问题（SPP－shortest path problem）\"></a>最短路问题（SPP－shortest path problem）</h4><p>一名货柜车司机奉命在最短的时间内将一车货物从甲地运往乙地。从甲地到乙地的公路网纵横交错，因此有多种行车路线，这名司机应选择哪条线路呢？假设货柜车的运行速度是恒定的，那么这一问题相当于需要找到一条从甲地到乙地的最短路。</p>\n<h4 id=\"公路连接问题\"><a href=\"#公路连接问题\" class=\"headerlink\" title=\"公路连接问题\"></a>公路连接问题</h4><p>某一地区有若干个主要城市，现准备修建高速公路把这些城市连接起来，使得从其中任何一个城市都可以经高速公路直接或间接到达另一个城市。假定已经知道了任意两个城市之间修建高速公路的成本，那么应如何决定在哪些城市间修建高速公路，使得总成本最小？</p>\n<h4 id=\"指派问题（assignment-problem）\"><a href=\"#指派问题（assignment-problem）\" class=\"headerlink\" title=\"指派问题（assignment problem）\"></a>指派问题（assignment problem）</h4><p>一家公司经理准备安排N<br>名员工去完成N项任务，每人一项。由于各员工的特点不同，不同的员工去完成同一项任务时所获得的回报是不同的。如何分配工作方案可以使总回报最大？</p>\n<h4 id=\"邮递员问题\"><a href=\"#邮递员问题\" class=\"headerlink\" title=\"邮递员问题\"></a>邮递员问题</h4><p>一名邮递员负责投递某个街区的邮件。如何为他（她）设计一条最短的投递路线（从邮局出发，经过投递区内每条街道至少一次，最后返回邮局）？</p>\n<h4 id=\"旅行商问题（TSP－traveling-salesman-problem）\"><a href=\"#旅行商问题（TSP－traveling-salesman-problem）\" class=\"headerlink\" title=\"旅行商问题（TSP－traveling salesman problem）\"></a>旅行商问题（TSP－traveling salesman problem）</h4><p>一名推销员准备前往若干城市推销产品。如何为他（她）设计一条最短的旅行路线（从驻地出发，经过每个城市恰好一次，最后返回驻地）？这一问题的研究历史十分悠久，通常称之为旅行商问题。</p>\n<h4 id=\"运输问题（transportation-problem）\"><a href=\"#运输问题（transportation-problem）\" class=\"headerlink\" title=\"运输问题（transportation problem）\"></a>运输问题（transportation problem）</h4><p>某种原材料有M个产地，现在需要将原材料从产地运往N个使用这些原材料的工厂。假定M个产地的产量和N家工厂的需要量已知，单位产品从任一产地到任一工厂的运费已知，那么如何安排运输方案可以使总运输成本最低？</p>\n<p>上述问题有两个共同的特点：一是它们的目的都是从若干可能的安排或方案中寻求某种意义下的最优安排或方案，数学上把这种问题称为最优化或优化（optimization）问题；二是它们都易于用图形的形式直观地描述和表达，数学上把这种与图相关的结构称为网络（network）。与图和网络相关的最优化问题就是网络最优化或称网络优化（netwok optimization）问题。所以上面例子中介绍的问题都是网络优化问题。由于多数网络优化问题是以网络上的流（flow）为研究的对象，因此网络优化又常常被称为网络流（network flows）或网络流规划等。</p>\n","text":"插值及案例实验插值是对给定数据的处理方法，它在工程实践和科学实验中有非常广泛、重要的应用。主要应用在如下两个方面：1、通过数据进行预测分析，例如：工程实验数据与模型的分析、天气预报以及社会、经济行为的统计分析等。2、图形绘制与可视化，例如：图像重建、工程外观设计等。 插值基本概念...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"数模","slug":"数模","count":4,"path":"api/tags/数模.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%80%BC%E5%8F%8A%E6%A1%88%E4%BE%8B%E5%AE%9E%E9%AA%8C\"><span class=\"toc-text\">插值及案例实验</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%80%BC%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">插值基本概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E6%8F%92%E5%80%BC%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">一维插值方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E6%8F%92%E5%80%BC%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">二维插值方法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8B%9F%E5%90%88%E5%8F%8A%E6%A1%88%E4%BE%8B%E5%AE%9E%E9%AA%8C\"><span class=\"toc-text\">拟合及案例实验</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8B%9F%E5%90%88%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">拟合基本概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%8B%9F%E5%90%88\"><span class=\"toc-text\">最小二乘拟合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E6%80%A7%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%8B%9F%E5%90%88\"><span class=\"toc-text\">线性最小二乘拟合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E7%BA%BF%E6%80%A7%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%8B%9F%E5%90%88\"><span class=\"toc-text\">非线性最小二乘拟合</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BB%BA%E6%A8%A1\"><span class=\"toc-text\">微分方程建模</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E6%95%B0%E5%80%BC%E8%A7%A3%E6%B3%95\"><span class=\"toc-text\">微分方程数值解法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E7%9A%84%E7%A6%BB%E6%95%A3%E5%8C%96\"><span class=\"toc-text\">常微分方程的离散化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%80%BC%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">数值方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-%E6%AC%A7%E6%8B%89%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">1.欧拉方法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-%E6%95%B0%E5%80%BC%E7%A7%AF%E5%88%86%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.数值积分方法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3%E3%80%81%E9%BE%99%E6%A0%BC-%E5%BA%93%E5%A1%94%EF%BC%88Runge-Kutta%EF%BC%89%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3、龙格-库塔（Runge-Kutta）方法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-%E7%BA%BF%E6%80%A7%E5%A4%9A%E6%AD%A5%E6%B3%95\"><span class=\"toc-text\">4.线性多步法</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E8%AE%BA\"><span class=\"toc-text\">图论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%AE%BA\"><span class=\"toc-text\">概论</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98%EF%BC%88SPP%EF%BC%8Dshortest-path-problem%EF%BC%89\"><span class=\"toc-text\">最短路问题（SPP－shortest path problem）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%AC%E8%B7%AF%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">公路连接问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8C%87%E6%B4%BE%E9%97%AE%E9%A2%98%EF%BC%88assignment-problem%EF%BC%89\"><span class=\"toc-text\">指派问题（assignment problem）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%82%AE%E9%80%92%E5%91%98%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">邮递员问题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%98%EF%BC%88TSP%EF%BC%8Dtraveling-salesman-problem%EF%BC%89\"><span class=\"toc-text\">旅行商问题（TSP－traveling salesman problem）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%BE%93%E9%97%AE%E9%A2%98%EF%BC%88transportation-problem%EF%BC%89\"><span class=\"toc-text\">运输问题（transportation problem）</span></a></li></ol></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"【python机器学习基础教程】（二）","uid":"f0027b7e0577432cae210c02a7d12c2f","slug":"python机器学习2","date":"2022-11-03T14:15:49.000Z","updated":"2022-11-04T02:57:39.413Z","comments":true,"path":"api/articles/python机器学习2.json","keywords":null,"cover":[],"text":"监督学习监督学习算法朴素贝叶斯分类器朴素贝叶斯分类器通过单独查看每个特征来学习参数，并从每个特征中收集简单的类别统计数据。scikit-learn中实现了三种朴素贝叶斯分类器：GaussianNB、BernoulliNB和MultinomialNB。GaussianNB可应用于任...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"机器学习","slug":"机器学习","count":5,"path":"api/tags/机器学习.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"python学习基础","uid":"f7d5b366240b7b48d4ee1a1a176f024a","slug":"python学习基础","date":"2022-11-03T14:02:49.000Z","updated":"2022-11-03T14:02:35.498Z","comments":true,"path":"api/articles/python学习基础.json","keywords":null,"cover":[],"text":"《计算与人工智能概论》字符串和列表基础\\t 制表符字符串与数字相乘：字符串重复几次3‘un’字符串和字符串相加：字符串连接起来‘un’+’ium’*字符串索引下标，第一个字符索引是0 word = ‘Python’word[0]‘P’word[5]‘n’ 索引也可以用负数，这种会...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":9,"path":"api/tags/python.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}