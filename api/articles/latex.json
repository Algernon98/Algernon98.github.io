{"title":"利用Markdown写文章 公式小册（Latex）","uid":"a32f84760e004b1cfbde91612f64a1ec","slug":"latex","date":"2022-11-03T13:50:49.000Z","updated":"2022-11-24T03:26:34.767Z","comments":true,"path":"api/articles/latex.json","keywords":null,"cover":null,"content":"<h1 id=\"公式使用\"><a href=\"#公式使用\" class=\"headerlink\" title=\"公式使用\"></a>公式使用</h1><script type=\"math/tex; mode=display\">\n\\begin{eqnarray}\n\\nabla\\cdot\\vec{E} &=& \\frac{\\rho}{\\epsilon_0} \\\\\n\\nabla\\cdot\\vec{B} &=& 0 \\\\\n\\nabla\\times\\vec{E} &=& -\\frac{\\partial B}{\\partial t} \\\\\n\\nabla\\times\\vec{B} &=& \\mu_0\\left(\\vec{J}+\\epsilon_0\\frac{\\partial E}{\\partial t} \\right)\n\\end{eqnarray}</script><h2 id=\"插入公式\"><a href=\"#插入公式\" class=\"headerlink\" title=\"插入公式\"></a>插入公式</h2><p>*</p>\n<p>行中公式       <code>$ 数学公式 $</code><br>独立公式（单独成行）</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">$$ 数学公式 $$</code></pre>\n<p>效果</p>\n<blockquote>\n<script type=\"math/tex; mode=display\">数学公式</script></blockquote>\n<h2 id=\"上下标\"><a href=\"#上下标\" class=\"headerlink\" title=\"上下标\"></a>上下标</h2><p>^ 表示上标, _ 表示下标。如果上下标的内容多于一个字符，需要用 {} 将这些内容括成一个整体。上下标可以嵌套，也可以同时使用。<br>表示$x_0$   ：<code>$x_0$</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$$ x^&#123;y^z&#125;&#x3D;(1+&#123;\\rm e&#125;^x)^&#123;-2xy^w&#125; $$</code></pre>\n<p>效果</p>\n<script type=\"math/tex; mode=display\">x^{y^z}=(1+{\\rm e}^x)^{-2xy^w}</script><p>另外，如果要在左右两边都有上下标，可以使用 \\sideset 命令；也可以简单地在符号前面多打一个上下标，此时会以行内公式渲染。</p>\n<h2 id=\"输入分数\"><a href=\"#输入分数\" class=\"headerlink\" title=\"输入分数\"></a>输入分数</h2><p>通常使用 \\frac {分子} {分母} 来生成一个分数，分数可多层嵌套。如果分式较为复杂，亦可使用 分子 \\over 分母 此时分数仅有一层。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$$ \\frac&#123;a-1&#125;&#123;b-1&#125; \\quad or \\quad &#123;a+1 \\over b+1&#125; $$</code></pre>\n<p>输出</p>\n<script type=\"math/tex; mode=display\">\\frac{a-1}{b-1} \\quad or \\quad {a+1 \\over b+1}</script><p>当分式 仅有两个字符时 可直接输入 \\frac ab 来快速生成一个                 $\\frac ab$</p>\n<h2 id=\"开方\"><a href=\"#开方\" class=\"headerlink\" title=\"开方\"></a>开方</h2><p>使用 \\sqrt [根指数，省略时为2] {被开方数} 命令输入开方。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$\\sqrt[3]&#123;a&#125;$</code></pre>\n<p>输出$\\sqrt[3]{a}$</p>\n<h2 id=\"省略号\"><a href=\"#省略号\" class=\"headerlink\" title=\"省略号\"></a>省略号</h2><p>数学公式中常见的省略号有两种，<br>\\ldots 表示与 文本底线 对齐的省略号              $\\ldots$<br>\\cdots 表示与 文本中线 对齐的省略号$\\cdots$</p>\n<h2 id=\"积分\"><a href=\"#积分\" class=\"headerlink\" title=\"积分\"></a>积分</h2><p>使用 \\int_积分下限^积分上限 {被积表达式} 来输入一个积分。<br>例子<br><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$$ \\int_0^1 &#123;x^2&#125; \\,&#123;\\rm d&#125;x $$</code></pre><br>输出</p>\n<script type=\"math/tex; mode=display\">\\int_0^1 {x^2} \\,{\\rm d}x</script><h2 id=\"极限运算\"><a href=\"#极限运算\" class=\"headerlink\" title=\"极限运算\"></a>极限运算</h2><p>使用 \\lim_{变量 \\to 表达式} 表达式 来输入一个极限。如有需求，可以更改 \\to 符号至任意符号。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$$ \\lim_&#123;n \\to \\infty&#125; \\frac&#123;1&#125;&#123;n(n+1)&#125; \\quad and \\quad \\lim_&#123;x\\leftarrow&#123;示例&#125;&#125; \\frac&#123;1&#125;&#123;n(n+1)&#125; $$</code></pre>\n<script type=\"math/tex; mode=display\">\\lim_{n \\to \\infty} \\frac{1}{n(n+1)} \\quad and \\quad \\lim_{x\\leftarrow{示例}} \\frac{1}{n(n+1)}</script><h1 id=\"希腊字母\"><a href=\"#希腊字母\" class=\"headerlink\" title=\"希腊字母\"></a>希腊字母</h1><p>输入 \\小写希腊字母英文全称 和 \\首字母大写希腊字母英文全称 来分别输入小写和大写希腊字母。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>输入</th>\n<th>显示</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\alpha</td>\n<td>$\\alpha$</td>\n</tr>\n<tr>\n<td>\\beta</td>\n<td>$\\beta$</td>\n</tr>\n<tr>\n<td>\\gamma</td>\n<td>$\\gamma$</td>\n</tr>\n<tr>\n<td>\\delta</td>\n<td>$\\delta$</td>\n</tr>\n<tr>\n<td>\\epsilon</td>\n<td>$\\epsilon$</td>\n</tr>\n<tr>\n<td>\\zeta</td>\n<td>$\\zeta$</td>\n</tr>\n<tr>\n<td>\\eta</td>\n<td>$\\eta$</td>\n</tr>\n<tr>\n<td>\\theta</td>\n<td>$\\theta$</td>\n</tr>\n<tr>\n<td>\\lambda</td>\n<td>$\\lambda$</td>\n</tr>\n<tr>\n<td>\\mu</td>\n<td>$\\mu$</td>\n</tr>\n<tr>\n<td>\\nu</td>\n<td>$\\nu$</td>\n</tr>\n<tr>\n<td>\\pi</td>\n<td>$\\pi$</td>\n</tr>\n<tr>\n<td>\\rho</td>\n<td>$\\rho$</td>\n</tr>\n<tr>\n<td>\\sigma</td>\n<td>$\\sigma$</td>\n</tr>\n<tr>\n<td>\\omega</td>\n<td>$\\omega$</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>资料来源：<a href=\"https://www.zybuluo.com/codeep/note/163962#1%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%85%AC%E5%BC%8F\">https://www.zybuluo.com/codeep/note/163962#1%E5%A6%82%E4%BD%95%E6%8F%92%E5%85%A5%E5%85%AC%E5%BC%8F</a></p>\n","text":"公式使用 \\begin{eqnarray} \\nabla\\cdot\\vec{E} &=& \\frac{\\rho}{\\epsilon_0} \\\\ \\nabla\\cdot\\vec{B} &=& 0 \\\\ \\nabla\\times\\vec{E} &=& -\\frac{\\partial ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"数模","slug":"数模","count":2,"path":"api/categories/数模.json"}],"tags":[{"name":"latex","slug":"latex","count":1,"path":"api/tags/latex.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AC%E5%BC%8F%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">公式使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%92%E5%85%A5%E5%85%AC%E5%BC%8F\"><span class=\"toc-text\">插入公式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%B8%8B%E6%A0%87\"><span class=\"toc-text\">上下标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E5%88%86%E6%95%B0\"><span class=\"toc-text\">输入分数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E6%96%B9\"><span class=\"toc-text\">开方</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9C%81%E7%95%A5%E5%8F%B7\"><span class=\"toc-text\">省略号</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A7%AF%E5%88%86\"><span class=\"toc-text\">积分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%81%E9%99%90%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">极限运算</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%8C%E8%85%8A%E5%AD%97%E6%AF%8D\"><span class=\"toc-text\">希腊字母</span></a></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"MCM 算法整理","uid":"98617a616f5da740d44c6fdef4281028","slug":"mcm算法","date":"2022-11-03T13:51:49.000Z","updated":"2022-11-08T15:13:58.013Z","comments":true,"path":"api/articles/mcm算法.json","keywords":null,"cover":null,"text":"算法基础分治法许多有用的算法在结构上是递归的：为了解决一个给定的问题，算法一次或多次递归地调用其自身以解决紧密相关的若干子问题。这些算法典型地遵循分治法的思想：将原问题分解为几个较小但类似于原问题的子问题，递归地求解这些子问题，然后再合并这些子问题的解来建立原问题的解。 随机算法...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"数模","slug":"数模","count":2,"path":"api/categories/数模.json"}],"tags":[{"name":"数模","slug":"数模","count":4,"path":"api/tags/数模.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}},"next_post":{"title":"统计学习导论 学习笔记（2）","uid":"694b21aa68d69c8a1bd7b64f5260a5be","slug":"统计学习导论2","date":"2022-11-03T13:48:49.000Z","updated":"2022-11-08T16:31:56.698Z","comments":true,"path":"api/articles/统计学习导论2.json","keywords":null,"cover":null,"text":"非线性模型 多项式回归 阶梯函数 回归样条 光滑样条 局部回归 广义可加模型 分段多项式分段多项式回归在X的不同区域拟合独立的低阶多项式函数，以此取代在X全部取值范围内拟合高阶多项式 局部回归局部回归是拟合光滑非线性函数的另外一种方法，在对一个目标观测点$x_0$拟合时，该方法只...","link":"","photos":[],"count_time":{"symbolsCount":317,"symbolsTime":"1 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":3,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"算法","slug":"算法","count":4,"path":"api/tags/算法.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://user-images.githubusercontent.com/54904760/224857900-b2e8457c-43d2-46b7-901c-6c770f24bbad.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}