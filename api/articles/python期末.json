{"title":"【PYTHON程序设计】期末作业","uid":"d449e663f4d76a93a71a143c613d264d","slug":"python期末","date":"2022-12-06T09:32:49.000Z","updated":"2022-12-06T15:02:46.231Z","comments":true,"path":"api/articles/python期末.json","keywords":null,"cover":[],"content":"<p><img src=\"https://img-blog.csdnimg.cn/798c8e0d05244786882a687fa5987616.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"电商版\"><a href=\"#电商版\" class=\"headerlink\" title=\"电商版\"></a>电商版</h1><h2 id=\"项目要求\"><a href=\"#项目要求\" class=\"headerlink\" title=\"项目要求\"></a>项目要求</h2><p>一、项目要求：</p>\n<p>获取京东商城中200条黑茶商品信息，保存在文本文件中。要求如下</p>\n<ol>\n<li><p>文件名：京东商城黑茶200条信息.txt</p>\n</li>\n<li><p>每条商品保存如下信息，商品说明、商家名称、价格 ,评价数，包装与规格</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p>1</p>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://blog.csdn.net/qq_45657504/article/details/117385625?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E4%BA%AC%E4%B8%9C%E7%88%AC%E8%99%AB&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-117385625.142^v67^control,201^v3^add_ask,213^v2^t3_esquery_v2&amp;spm=1018.2226.3001.4187\">https://blog.csdn.net/qq_45657504/article/details/117385625?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E4%BA%AC%E4%B8%9C%E7%88%AC%E8%99%AB&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-117385625.142^v67^control,201^v3^add_ask,213^v2^t3_esquery_v2&amp;spm=1018.2226.3001.4187</a></p>\n<p>2<br><a href=\"https://blog.csdn.net/qq_41799219/article/details/106203637\">https://blog.csdn.net/qq_41799219/article/details/106203637</a></p>\n<p>3<br><a href=\"https://blog.csdn.net/weixin_45977690/article/details/119445488?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E4%BA%AC%E4%B8%9C%E7%88%AC%E8%99%AB&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-7-119445488.142^v67^control,201^v3^add_ask,213^v2^t3_esquery_v2&amp;spm=1018.2226.3001.4187\">https://blog.csdn.net/weixin_45977690/article/details/119445488?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E4%BA%AC%E4%B8%9C%E7%88%AC%E8%99%AB&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-7-119445488.142^v67^control,201^v3^add_ask,213^v2^t3_esquery_v2&amp;spm=1018.2226.3001.4187</a></p></blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">#!&#x2F;usr&#x2F;bin&#x2F;env python\n# -*- coding:utf-8 -*-\n# @Time   : 2021&#x2F;8&#x2F;6\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport xlwt\nimport time\n\n\nclass Config():\n    &#39;&#39;&#39;\n    PARAMETER_LABEL：需要根据爬取的商品详情界面的信息key进行修改，其中&#39;评论数&#39;是另一种方式获取的\n    TITLE_LABEL：PARAMETER_LABEL修改后excel的表头也做相应的修改\n    GOOD_LABEL：无需修改，默认该四个信息都爬取\n    need_list：能直接从html解析后的标签文件中获取的\n    &#39;&#39;&#39;\n    # excel表头\n    TITLE_LABEL &#x3D; [&#39;商品名称&#39;, &#39;价格&#39;, &#39;商家&#39;, &#39;商品详情地址&#39;, &#39;工艺&#39;, &#39;图案&#39;, &#39;风格&#39;, &#39;材质&#39;, &#39;形状&#39;, &#39;直径&#39;, &#39;评论数&#39;, &#39;标题材质关键字&#39;]\n    # html中对应TITLE_LABEL的key\n    GOOD_LABEL &#x3D; [&#39;name&#39;, &#39;price&#39;, &#39;shop&#39;, &#39;detail_addr&#39;]\n    # TITLE_LABEL中商品详情页（即点进单个商品界面）想爬取的数据在html中key，&#39;评论数&#39;一定要放在最后\n    PARAMETER_LABEL &#x3D; [&#39;工艺&#39;, &#39;图案&#39;, &#39;风格&#39;, &#39;材质&#39;, &#39;形状&#39;, &#39;直径&#39;, &#39;评论数&#39;]\n    # 将PARAMETER_LABEL去掉&#39;评论数&#39;即为need_list\n    need_list &#x3D; PARAMETER_LABEL[:-1]\n    # 将搜索页的key和单个商品详情页的key组合起来\n    TOTAL_LABEL &#x3D; GOOD_LABEL + PARAMETER_LABEL\n    # excel文件的保存路径\n    SAVE_PATH &#x3D; &#39;.&#x2F;test.xls&#39;\n\n    # 发送访问请问的head文件\n    # 每个电脑每个京东账号对应的head文件不同，获取方式参考帖子https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_41998772&#x2F;article&#x2F;details&#x2F;106476166\n    headers &#x3D; &#123;\n        &#39;user-agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;91.0.4472.124 Safari&#x2F;537.36&#39;,\n        &#39;accept-language&#39;: &#39;zh-CN,zh;q&#x3D;0.9&#39;,\n    &#125;\n    # 搜索关键字\n    keyword &#x3D; str(input(&#39;请输入需要爬取的信息关键字：&#39;))\n    total &#x3D; input(&#39;请输入需要爬取页数: &#39;)\n\n\nclass Excel():\n    # 表格列数\n    TABLE_COL &#x3D; len(Config.TITLE_LABEL)\n    # 当前行数\n    _current_row &#x3D; 1\n\n    # 初始化，创建文件及写入title\n    def __init__(self, sheet_name&#x3D;&#39;sheet1&#39;):\n        self.write_work &#x3D; xlwt.Workbook(encoding&#x3D;&#39;ascii&#39;)\n        self.write_sheet &#x3D; self.write_work.add_sheet(sheet_name)\n        for item in range(len(Config.TITLE_LABEL)):\n            # 第一行写入excel表头\n            self.write_sheet.write(0, item, label&#x3D;Config.TITLE_LABEL[item])\n\n    # 写入内容\n    def write_content(self, content):\n        print(content)\n        if content[&#39;detail_addr&#39;] !&#x3D; &#39;无&#39;:  # 有时候没能获取的该商品的详情地址就跳过该商品\n            for item in range(self.TABLE_COL):\n                if (item &#x3D;&#x3D; self.TABLE_COL - 1) and (Config.TOTAL_LABEL[-1] &#x3D;&#x3D; &#39;标题材质关键字&#39;):\n                    self.write_sheet.write(self._current_row, item, label&#x3D;self.title_extract(content[&#39;name&#39;]))\n                else:\n                    self.write_sheet.write(self._current_row, item, label&#x3D;content[Config.TOTAL_LABEL[item]])\n            # 插入完一条记录后，换行\n            self._current_row +&#x3D; 1\n\n    # 保存文件\n    def save_file(self, file_url&#x3D;Config.SAVE_PATH):\n        try:\n            self.write_work.save(file_url)\n            print(&quot;文件保存成功！文件路径为：&quot; + file_url)\n        except IOError:\n            print(&quot;文件保存失败！&quot;)\n\n    # 提取商品标题中的材质关键词\n    def title_extract(self, title):\n        # 想要提取的关键词列表\n        materials &#x3D; [&#39;陶瓷&#39;, &#39;骨瓷&#39;, &#39;玻璃&#39;, &#39;搪瓷&#39;, &#39;木制&#39;, &#39;木质&#39;, &#39;不锈钢&#39;, &#39;塑料&#39;]\n        contain &#x3D; &#39;&#39;\n        count &#x3D; 0\n        for material in materials:\n            if material in title:\n                # 将最后的输入形式为 “陶瓷、木质、不锈钢”\n                if count &#x3D;&#x3D; 0:\n                    contain &#x3D; contain + material\n                    count +&#x3D; 1\n                else:\n                    contain &#x3D; contain + &#39;、&#39; + material\n                    count +&#x3D; 1\n        return contain\n\n\nclass Goods:\n    # 初始化方法\n    def __init__(self, li_info):\n        self.li_info &#x3D; li_info\n        self.good_info_dic &#x3D; &#123;&#125;\n\n    def acquire_comment(self, url):\n        &#39;&#39;&#39;\n        input:\n            url：商品详情地址(detail_addr)，形式如&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n        rerurn:\n            comment_count：该商品的评论数,现在能爬取到的都是大约数，比如“2万+”,详细的评论总数京东暂时没显示在html信息中（2021.08.03）\n        &#39;&#39;&#39;\n        # 提取商品详情地址中的商品号\n        no &#x3D; url.split(&#39;com&#x2F;&#39;)[1].split(&#39;.html&#39;)[0]\n        comment_url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;&quot; + no + &quot;&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1&quot;\n        print(&quot;评论数获取链接：&quot;, comment_url)\n        response &#x3D; requests.get(comment_url, headers&#x3D;Config.headers)\n        time.sleep(2)\n        page &#x3D; response.content.decode(\n            &#39;gbk&#39;)  # type(page)为str，fetchJSON_comment98(dic),dic[&#39;productCommentSummary&#39;][&#39;commentCountStr&#39;]为评论数\n        # &quot;commentCountStr&quot;:&quot;2万+&quot;, 获取其中的2万+，暂时想到的办法是用split和replace对字符串进行切分后再替换不需要的字符\n        comment_count &#x3D; page.split(&quot;commentCountStr&quot;)[1].split(&#39;:&#39;)[1].split(&#39;,&#39;)[0].replace(&#39;&quot;&#39;, &#39;&#39;)\n        return comment_count\n\n    def add_product_parameter(self, need_list, url):\n        html &#x3D; get_html(&#39;https:&#39; + url)\n        soup &#x3D; BeautifulSoup(html, &#39;lxml&#39;)\n        time.sleep(2)\n        # 获取商品参数\n        parameters &#x3D; soup.find(&#39;ul&#39;, class_&#x3D;&#39;parameter2 p-parameter-list&#39;)\n        para_lists &#x3D; parameters.find_all(&#39;li&#39;)\n        name_lists &#x3D; []\n        para_text_lists &#x3D; []\n        for para in para_lists:\n            para_text &#x3D; para.get_text()\n            #print(para_text)\n            # para_text的形式：“商品名称：浩雅HY160”\n            name_lists.append(para_text.split(&quot;：&quot;)[0])  # name_lists保存单个商品详情页参数名称，如“商品名称”\n            para_text_lists.append(para_text.split(&quot;：&quot;)[1])  # para_text_lists保存参数名称对应的参数，如”浩雅HY160“\n        return_list &#x3D; []\n        # 按need_list中参数名称的顺序保存单个商品详情页中的爬虫数据\n        for need in need_list[:-1]:  # 评论数单独拎出来，need_list[-1]为“评论数”\n            try:\n                index &#x3D; name_lists.index(need)\n                return_list.append(para_text_lists[index])\n            except:\n                # 如果该商品商家并没有显示该参数名称的参数，那么excel中填充空值\n                return_list.append(&#39; &#39;)\n        # 最后一列填充评论数\n        return_list.append(self.acquire_comment(url))\n        return return_list\n\n    def find_attr(self, attr):\n        try:\n            if attr &#x3D;&#x3D; Config.GOOD_LABEL[0]:\n                # 商品名称\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;em&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[1]:\n                # 价格\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-price&#39;).find(&#39;i&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[2]:\n                # 商家\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-shop&#39;).find(&#39;a&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[3]:\n                # 商品详情地址\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;a&#39;)[&#39;href&#39;]\n\n                # 进入单个商品详情网页进行数据爬取，本代码所说的单个商品详情网页意思为从搜索页点进某一个商品页，比如https:&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n                paras &#x3D; self.add_product_parameter(Config.PARAMETER_LABEL, result)\n                for i in range(len(paras)):\n                    para &#x3D; paras[i]\n                    self.good_info_dic.setdefault(Config.PARAMETER_LABEL[i], para)\n\n        except AttributeError:\n            result &#x3D; &#39;无&#39;\n        self.good_info_dic.setdefault(attr, result)  # 集合setdefault\n\n    # 添加商品信息\n    def add_good_info(self):\n        for item in Config.GOOD_LABEL:\n            self.find_attr(item)\n\n    # 获取产品列表\n    def get_good(self):\n        return self.good_info_dic\n\n\ndef get_html(url, currentPage&#x3D;None, pageSize&#x3D;None):\n    if pageSize:\n        print(&quot;--&gt; 正在获取网站第 &quot; + str(currentPage) + &quot;页信息&quot;)\n        if currentPage !&#x3D; 1:\n            url &#x3D; url + &#39;&amp;page&#x3D;&#39; + str(currentPage) + &#39;&amp;s&#x3D;&#39; + str(pageSize) + &#39;&amp;click&#x3D;0&#39;\n\n    response &#x3D; requests.get(url, headers&#x3D;Config.headers)  # 请求访问网站\n    time.sleep(2)\n    if response.status_code &#x3D;&#x3D; 200:\n        html &#x3D; response.text  # 获取网页源码\n        return html  # 返回网页源码\n    else:\n        print(&quot;获取网站信息失败！&quot;)\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    &#39;&#39;&#39;\n    一定需要修改的是Config中的headers文件，每个电脑每个京东账号对应的文件不同\n    修改完headers后可以输入关键词为“餐具碗”，页数“2”，查看下爬虫结果\n    可根据自己的需求修改Config中的参数\n    &#39;&#39;&#39;\n    # 创建文件\n    excel &#x3D; Excel()\n\n    config &#x3D; Config()\n    # 搜索地址\n    search_url &#x3D; &#39;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;&#39; + config.keyword + &#39;&amp;enc&#x3D;utf-8&amp;psort&#x3D;3&#39;\n    page &#x3D; &#123;\n        &#39;total&#39;: 0,  # 总页数\n        &#39;currentPage&#39;: 1,  # 当前页数\n        &#39;pageSize&#39;: 0  # 每页显示多少条\n    &#125;\n\n    if not config.total.isdigit():\n        print(&quot;非法字符，程序退出！&quot;)\n        exit(0)\n\n    page[&#39;total&#39;] &#x3D; eval(config.total)\n    for i in range(page[&#39;total&#39;]):\n        # 初始化BeautifulSoup库,并设置解析器\n        soup &#x3D; BeautifulSoup(get_html(search_url, page[&#39;currentPage&#39;], page[&#39;currentPage&#39;] * page[&#39;pageSize&#39;]), &#39;lxml&#39;)\n        time.sleep(2)  # 为了防止爬取太快被京东服务器拦截，在每次解析网页操作后强制休息2秒\n\n        # 商品列表\n        goods_list &#x3D; soup.find_all(&#39;li&#39;, class_&#x3D;&#39;gl-item&#39;)\n        print(&quot;分析到第&quot; + str(page[&#39;currentPage&#39;]) + &#39;页共有&#39; + str(len(goods_list)) + &#39;条商品信息&#39;)\n        for li in goods_list:  # 遍历父节点\n            try:\n                goods &#x3D; Goods(li)\n                # 添加信息\n                goods.add_good_info()\n                # 获取信息\n                good_info &#x3D; goods.get_good()\n                # 写入excel\n                excel.write_content(good_info)\n            except:\n                print(&quot;商品信息获取失败&quot;)\n                break\n\n        page[&#39;currentPage&#39;] &#x3D; page[&#39;currentPage&#39;] + 1\n        page[&#39;pageSize&#39;] &#x3D; len(goods_list) * page[&#39;currentPage&#39;]\n\n    # 保存excel文件\n    excel.save_file(config.SAVE_PATH)\n\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;chengxusheji.py\n请输入需要爬取的信息关键字：黑茶\n请输入需要爬取页数: 5\n分析到第1页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100014774315&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n中粮集团 中茶六堡茶广西梧州窖藏特级陈香箩筐装500g中华老字号&#39;, &#39;price&#39;: &#39;253.30&#39;, &#39;shop&#39;: &#39;中茶京东自营旗舰店&#39;, &#39;工艺&#39;: &#39; &#39;, &#39;图案&#39;: &#39; &#39;, &#39;风格&#39;: &#39; &#39;, &#39;材质&#39;: &#39; &#39;, &#39;形状&#39;: &#39; &#39;, &#39;直径&#39;: &#39; &#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100014774315.html&#39;&#125;\n商品信息获取失败\n--&gt; 正在获取网站第 2页信息\n分析到第2页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10036336320366&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;白沙溪 湖南老字号安化黑茶正宗千两茶叶36.25kg花卷茶 当年千两茶黄白布袋二选一&#39;, &#39;price&#39;: &#39;5620.00&#39;, &#39;shop&#39;: &#39;白沙溪官方旗舰店&#39;, &#39;工艺&#39;: &#39; &#39;, &#39;图案&#39;: &#39; &#39;, &#39;风格&#39;: &#39; &#39;, &#39;材质&#39;: &#39; &#39;, &#39;形状&#39;: &#39; &#39;, &#39;直径&#39;: &#39; &#39;, &#39;评论数&#39;: &#39;200+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10036336320366.html&#39;&#125;\n商品信息获取失败\n--&gt; 正在获取网站第 3页信息\n分析到第3页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;51934762257&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;三鹤六堡茶【思源】黑茶六堡茶500g礼盒装特级&#39;, &#39;price&#39;: &#39;1198.00&#39;, &#39;shop&#39;: &#39;三鹤茶叶官方旗舰店&#39;, &#39;工艺&#39;: &#39; &#39;, &#39;图案&#39;: &#39; &#39;, &#39;风格&#39;: &#39; &#39;, &#39;材质&#39;: &#39; &#39;, &#39;形状&#39;: &#39; &#39;, &#39;直径&#39;: &#39; &#39;, &#39;评论数&#39;: &#39;58&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;51934762257.html&#39;&#125;\n商品信息获取失败\n--&gt; 正在获取网站第 4页信息\n分析到第4页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10026360368241&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;白沙溪 湖南老字号安化黑茶茯砖黑砖千两茶金奖五合一合集年货伴手礼盒210g 5大金奖产品合集&#39;, &#39;price&#39;: &#39;283.00&#39;, &#39;shop&#39;: &#39;白沙溪官方旗舰店&#39;, &#39;工艺&#39;: &#39; &#39;, &#39;图案&#39;: &#39; &#39;, &#39;风格&#39;: &#39; &#39;, &#39;材质&#39;: &#39; &#39;, &#39;形状&#39;: &#39; &#39;, &#39;直径&#39;: &#39; &#39;, &#39;评论数&#39;: &#39;200+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10026360368241.html&#39;&#125;\n商品信息获取失败\n--&gt; 正在获取网站第 5页信息\n分析到第5页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;65050901858&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;【2018年陈化 2019年生产】中茶牌茶叶 梧州六堡茶黑茶 纪念中茶公司成立70周年特级散茶 7kg&#x2F;箩&#39;, &#39;price&#39;: &#39;3888.00&#39;, &#39;shop&#39;: &#39;中茶思平专卖店&#39;, &#39;工艺&#39;: &#39; &#39;, &#39;图案&#39;: &#39; &#39;, &#39;风格&#39;: &#39; &#39;, &#39;材质&#39;: &#39; &#39;, &#39;形状&#39;: &#39; &#39;, &#39;直径&#39;: &#39; &#39;, &#39;评论数&#39;: &#39;17&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;65050901858.html&#39;&#125;\n商品信息获取失败\n文件保存成功！文件路径为：.&#x2F;test.xls\n\n进程已结束,退出代码0\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">curl &#39;https:&#x2F;&#x2F;www.jd.com&#x2F;?cu&#x3D;true&amp;utm_source&#x3D;www.baidu.com&amp;utm_medium&#x3D;tuiguang&amp;utm_campaign&#x3D;t_1003608409_&amp;utm_term&#x3D;cf957f93d4bf408397f557bee614de76&#39; \\\n  -H &#39;Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9&#39; \\\n  -H &#39;Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6&#39; \\\n  -H &#39;Cache-Control: max-age&#x3D;0&#39; \\\n  -H &#39;Connection: keep-alive&#39; \\\n  -H &#39;Cookie: __jdu&#x3D;164706084910516181292; shshshfpa&#x3D;ac27b0e9-916f-4600-a8d8-59c831a1a907-1652529930; shshshfpb&#x3D;noLYaOxvik5URLA2R6uzCrA; o2State&#x3D;&#123;%22webp%22:true%2C%22avif%22:false&#125;; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; ipLoc-djd&#x3D;18-1482-48942-49058; shshshfp&#x3D;a354b74eee97acd3e5dc7a34609b535b; unpl&#x3D;JF8EALhnNSttChxcAR1VExBFTg4DW1wBSR8FOGMBUg4MH1MFHldPFBd7XlVdXhRLFB9uZxRUXVNIXA4ZBSsSEXtdVV9fD0oeBm5vNWQIW0lUAh9XSBZ-SzMgGyZ_DVcCbjF4BG1bS2QEKwIcFxZKWlVXWABLFgdvYAVdXVtDVzUaMhsaFHttZFtdCUoWC2hmAlVtWXtWBBoHHxMXSl5TbhZmSloDaGIDVVpZQlENGwMfEhdLVFRdVQt7FjNs; TrackID&#x3D;1LktDmeIYlq4RS62lp2WcZb3A2-LwnNYhz18i6aI5FlLUajbBiJd_FeCpEJdafoaAPnCSSoC61PQXGju4oI3qnbAT8S3MSqGOq1woyIirMtMOuV3qGlFl6X9MKqjmZsR0; thor&#x3D;70AB060D7F75310BAF0CE227144B45F89EA3FD829A7B37974106A4510DBABBD2D2ADA0B984BAD527C89EEFE0750ED95C6CF4CAF90C42F45F37589244950D233F7572E86297E56A589A289E8CFF4B7241DFA33FBE41392AEF2458EF8BF3F6DBBFA4315A0D22232B878BA867077580DA478BD559B930D575EA37D30A52757C4E6E81F39D4A6B7520F2C1F455BFE890AC341A55920740F5682FF572C70CF84017F8; pinId&#x3D;3o3XfM8mzX8mD44K9IZ3p7V9-x-f3wj7; pin&#x3D;jd_7701e3820cb18; unick&#x3D;jd_7701e3820cb18; ceshi3.com&#x3D;000; _tp&#x3D;s1jQhhQY1klVAfaPuL5OvGH1I1J7VanZuJjdCQPVNmY%3D; _pst&#x3D;jd_7701e3820cb18; __jda&#x3D;76161171.164706084910516181292.1647060849.1669819802.1669865317.7; __jdb&#x3D;76161171.5.164706084910516181292|7.1669865317; __jdc&#x3D;76161171; __jdv&#x3D;76161171|www.baidu.com|t_1003608409_|tuiguang|cf957f93d4bf408397f557bee614de76|1669865490795; shshshsID&#x3D;045ff225b6736e87dfb49f1c52b1bf4e_3_1669865502177; 3AB9D23F7A4B3C9B&#x3D;7UVB2WFZM5E6PVGD5ATMSSLYVFBGPQ4W2DNVAX6BTX5UOCCW3VIFMRPFCGFJIO7CXKNHL4GS3JSG5VMKH7XD6HMMHI&#39; \\\n  -H &#39;Referer: https:&#x2F;&#x2F;passport.jd.com&#x2F;&#39; \\\n  -H &#39;Sec-Fetch-Dest: document&#39; \\\n  -H &#39;Sec-Fetch-Mode: navigate&#39; \\\n  -H &#39;Sec-Fetch-Site: same-site&#39; \\\n  -H &#39;Sec-Fetch-User: ?1&#39; \\\n  -H &#39;Upgrade-Insecure-Requests: 1&#39; \\\n  -H &#39;User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&#39; \\\n  -H &#39;sec-ch-ua: &quot;Microsoft Edge&quot;;v&#x3D;&quot;107&quot;, &quot;Chromium&quot;;v&#x3D;&quot;107&quot;, &quot;Not&#x3D;A?Brand&quot;;v&#x3D;&quot;24&quot;&#39; \\\n  -H &#39;sec-ch-ua-mobile: ?0&#39; \\\n  -H &#39;sec-ch-ua-platform: &quot;Windows&quot;&#39; \\\n  --compressed</code></pre>\n<h3 id=\"获得headers\"><a href=\"#获得headers\" class=\"headerlink\" title=\"获得headers\"></a>获得headers</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://curlconverter.com/\">https://curlconverter.com/</a></p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/2654e648736244798d2d12492afca828.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\n\ncookies &#x3D; &#123;\n    &#39;__jdu&#39;: &#39;164706084910516181292&#39;,\n    &#39;shshshfpa&#39;: &#39;ac27b0e9-916f-4600-a8d8-59c831a1a907-1652529930&#39;,\n    &#39;shshshfpb&#39;: &#39;noLYaOxvik5URLA2R6uzCrA&#39;,\n    &#39;o2State&#39;: &#39;&#123;%22webp%22:true%2C%22avif%22:false&#125;&#39;,\n    &#39;areaId&#39;: &#39;18&#39;,\n    &#39;PCSYCityID&#39;: &#39;CN_430000_430100_0&#39;,\n    &#39;ipLoc-djd&#39;: &#39;18-1482-48942-49058&#39;,\n    &#39;shshshfp&#39;: &#39;a354b74eee97acd3e5dc7a34609b535b&#39;,\n    &#39;unpl&#39;: &#39;JF8EALhnNSttChxcAR1VExBFTg4DW1wBSR8FOGMBUg4MH1MFHldPFBd7XlVdXhRLFB9uZxRUXVNIXA4ZBSsSEXtdVV9fD0oeBm5vNWQIW0lUAh9XSBZ-SzMgGyZ_DVcCbjF4BG1bS2QEKwIcFxZKWlVXWABLFgdvYAVdXVtDVzUaMhsaFHttZFtdCUoWC2hmAlVtWXtWBBoHHxMXSl5TbhZmSloDaGIDVVpZQlENGwMfEhdLVFRdVQt7FjNs&#39;,\n    &#39;TrackID&#39;: &#39;1LktDmeIYlq4RS62lp2WcZb3A2-LwnNYhz18i6aI5FlLUajbBiJd_FeCpEJdafoaAPnCSSoC61PQXGju4oI3qnbAT8S3MSqGOq1woyIirMtMOuV3qGlFl6X9MKqjmZsR0&#39;,\n    &#39;thor&#39;: &#39;70AB060D7F75310BAF0CE227144B45F89EA3FD829A7B37974106A4510DBABBD2D2ADA0B984BAD527C89EEFE0750ED95C6CF4CAF90C42F45F37589244950D233F7572E86297E56A589A289E8CFF4B7241DFA33FBE41392AEF2458EF8BF3F6DBBFA4315A0D22232B878BA867077580DA478BD559B930D575EA37D30A52757C4E6E81F39D4A6B7520F2C1F455BFE890AC341A55920740F5682FF572C70CF84017F8&#39;,\n    &#39;pinId&#39;: &#39;3o3XfM8mzX8mD44K9IZ3p7V9-x-f3wj7&#39;,\n    &#39;pin&#39;: &#39;jd_7701e3820cb18&#39;,\n    &#39;unick&#39;: &#39;jd_7701e3820cb18&#39;,\n    &#39;ceshi3.com&#39;: &#39;000&#39;,\n    &#39;_tp&#39;: &#39;s1jQhhQY1klVAfaPuL5OvGH1I1J7VanZuJjdCQPVNmY%3D&#39;,\n    &#39;_pst&#39;: &#39;jd_7701e3820cb18&#39;,\n    &#39;__jda&#39;: &#39;76161171.164706084910516181292.1647060849.1669819802.1669865317.7&#39;,\n    &#39;__jdb&#39;: &#39;76161171.5.164706084910516181292|7.1669865317&#39;,\n    &#39;__jdc&#39;: &#39;76161171&#39;,\n    &#39;__jdv&#39;: &#39;76161171|www.baidu.com|t_1003608409_|tuiguang|cf957f93d4bf408397f557bee614de76|1669865490795&#39;,\n    &#39;shshshsID&#39;: &#39;045ff225b6736e87dfb49f1c52b1bf4e_3_1669865502177&#39;,\n    &#39;3AB9D23F7A4B3C9B&#39;: &#39;7UVB2WFZM5E6PVGD5ATMSSLYVFBGPQ4W2DNVAX6BTX5UOCCW3VIFMRPFCGFJIO7CXKNHL4GS3JSG5VMKH7XD6HMMHI&#39;,\n&#125;\n\nheaders &#x3D; &#123;\n    &#39;Accept&#39;: &#39;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9&#39;,\n    &#39;Accept-Language&#39;: &#39;zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6&#39;,\n    &#39;Cache-Control&#39;: &#39;max-age&#x3D;0&#39;,\n    &#39;Connection&#39;: &#39;keep-alive&#39;,\n    # Requests sorts cookies&#x3D; alphabetically\n    # &#39;Cookie&#39;: &#39;__jdu&#x3D;164706084910516181292; shshshfpa&#x3D;ac27b0e9-916f-4600-a8d8-59c831a1a907-1652529930; shshshfpb&#x3D;noLYaOxvik5URLA2R6uzCrA; o2State&#x3D;&#123;%22webp%22:true%2C%22avif%22:false&#125;; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; ipLoc-djd&#x3D;18-1482-48942-49058; shshshfp&#x3D;a354b74eee97acd3e5dc7a34609b535b; unpl&#x3D;JF8EALhnNSttChxcAR1VExBFTg4DW1wBSR8FOGMBUg4MH1MFHldPFBd7XlVdXhRLFB9uZxRUXVNIXA4ZBSsSEXtdVV9fD0oeBm5vNWQIW0lUAh9XSBZ-SzMgGyZ_DVcCbjF4BG1bS2QEKwIcFxZKWlVXWABLFgdvYAVdXVtDVzUaMhsaFHttZFtdCUoWC2hmAlVtWXtWBBoHHxMXSl5TbhZmSloDaGIDVVpZQlENGwMfEhdLVFRdVQt7FjNs; TrackID&#x3D;1LktDmeIYlq4RS62lp2WcZb3A2-LwnNYhz18i6aI5FlLUajbBiJd_FeCpEJdafoaAPnCSSoC61PQXGju4oI3qnbAT8S3MSqGOq1woyIirMtMOuV3qGlFl6X9MKqjmZsR0; thor&#x3D;70AB060D7F75310BAF0CE227144B45F89EA3FD829A7B37974106A4510DBABBD2D2ADA0B984BAD527C89EEFE0750ED95C6CF4CAF90C42F45F37589244950D233F7572E86297E56A589A289E8CFF4B7241DFA33FBE41392AEF2458EF8BF3F6DBBFA4315A0D22232B878BA867077580DA478BD559B930D575EA37D30A52757C4E6E81F39D4A6B7520F2C1F455BFE890AC341A55920740F5682FF572C70CF84017F8; pinId&#x3D;3o3XfM8mzX8mD44K9IZ3p7V9-x-f3wj7; pin&#x3D;jd_7701e3820cb18; unick&#x3D;jd_7701e3820cb18; ceshi3.com&#x3D;000; _tp&#x3D;s1jQhhQY1klVAfaPuL5OvGH1I1J7VanZuJjdCQPVNmY%3D; _pst&#x3D;jd_7701e3820cb18; __jda&#x3D;76161171.164706084910516181292.1647060849.1669819802.1669865317.7; __jdb&#x3D;76161171.5.164706084910516181292|7.1669865317; __jdc&#x3D;76161171; __jdv&#x3D;76161171|www.baidu.com|t_1003608409_|tuiguang|cf957f93d4bf408397f557bee614de76|1669865490795; shshshsID&#x3D;045ff225b6736e87dfb49f1c52b1bf4e_3_1669865502177; 3AB9D23F7A4B3C9B&#x3D;7UVB2WFZM5E6PVGD5ATMSSLYVFBGPQ4W2DNVAX6BTX5UOCCW3VIFMRPFCGFJIO7CXKNHL4GS3JSG5VMKH7XD6HMMHI&#39;,\n    &#39;Referer&#39;: &#39;https:&#x2F;&#x2F;passport.jd.com&#x2F;&#39;,\n    &#39;Sec-Fetch-Dest&#39;: &#39;document&#39;,\n    &#39;Sec-Fetch-Mode&#39;: &#39;navigate&#39;,\n    &#39;Sec-Fetch-Site&#39;: &#39;same-site&#39;,\n    &#39;Sec-Fetch-User&#39;: &#39;?1&#39;,\n    &#39;Upgrade-Insecure-Requests&#39;: &#39;1&#39;,\n    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&#39;,\n    &#39;sec-ch-ua&#39;: &#39;&quot;Microsoft Edge&quot;;v&#x3D;&quot;107&quot;, &quot;Chromium&quot;;v&#x3D;&quot;107&quot;, &quot;Not&#x3D;A?Brand&quot;;v&#x3D;&quot;24&quot;&#39;,\n    &#39;sec-ch-ua-mobile&#39;: &#39;?0&#39;,\n    &#39;sec-ch-ua-platform&#39;: &#39;&quot;Windows&quot;&#39;,\n&#125;\n\nparams &#x3D; &#123;\n    &#39;cu&#39;: &#39;true&#39;,\n    &#39;utm_source&#39;: &#39;www.baidu.com&#39;,\n    &#39;utm_medium&#39;: &#39;tuiguang&#39;,\n    &#39;utm_campaign&#39;: &#39;t_1003608409_&#39;,\n    &#39;utm_term&#39;: &#39;cf957f93d4bf408397f557bee614de76&#39;,\n&#125;\n\nresponse &#x3D; requests.get(&#39;https:&#x2F;&#x2F;www.jd.com&#x2F;&#39;, params&#x3D;params, cookies&#x3D;cookies, headers&#x3D;headers)</code></pre>\n<h2 id=\"实操\"><a href=\"#实操\" class=\"headerlink\" title=\"实操\"></a>实操</h2><h3 id=\"PART1\"><a href=\"#PART1\" class=\"headerlink\" title=\"PART1\"></a>PART1</h3><h4 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">#!&#x2F;usr&#x2F;bin&#x2F;env python\n# -*- coding:utf-8 -*-\n# @Time   : 2021&#x2F;8&#x2F;6\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport xlwt\nimport time\n\n\nclass Config():\n    &#39;&#39;&#39;\n    PARAMETER_LABEL：需要根据爬取的商品详情界面的信息key进行修改，其中&#39;评论数&#39;是另一种方式获取的\n    TITLE_LABEL：PARAMETER_LABEL修改后excel的表头也做相应的修改\n    GOOD_LABEL：无需修改，默认该四个信息都爬取\n    need_list：能直接从html解析后的标签文件中获取的\n    &#39;&#39;&#39;\n    # excel表头\n    #TITLE_LABEL &#x3D; [&#39;商品名称&#39;, &#39;价格&#39;, &#39;商家&#39;, &#39;商品详情地址&#39;, &#39;工艺&#39;, &#39;图案&#39;, &#39;风格&#39;, &#39;材质&#39;, &#39;形状&#39;, &#39;直径&#39;, &#39;评论数&#39;, &#39;标题材质关键字&#39;]\n    TITLE_LABEL &#x3D; [&#39;商品名称&#39;, &#39;价格&#39;, &#39;商家&#39;, &#39;商品详情地址&#39;, &#39;评论数&#39;]\n    # html中对应TITLE_LABEL的key\n    GOOD_LABEL &#x3D; [&#39;name&#39;, &#39;price&#39;, &#39;shop&#39;, &#39;detail_addr&#39;]\n    # TITLE_LABEL中商品详情页（即点进单个商品界面）想爬取的数据在html中key，&#39;评论数&#39;一定要放在最后\n    PARAMETER_LABEL &#x3D; [ &#39;评论数&#39;]\n    # 将PARAMETER_LABEL去掉&#39;评论数&#39;即为need_list\n    need_list &#x3D; PARAMETER_LABEL[:-1]\n    # 将搜索页的key和单个商品详情页的key组合起来\n    TOTAL_LABEL &#x3D; GOOD_LABEL + PARAMETER_LABEL\n    # excel文件的保存路径\n    SAVE_PATH &#x3D; &#39;.&#x2F;test.xls&#39;\n\n    # 发送访问请问的head文件\n    # 每个电脑每个京东账号对应的head文件不同，获取方式参考帖子https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_41998772&#x2F;article&#x2F;details&#x2F;106476166\n    #\n    headers &#x3D; &#123;\n    &#39;Accept&#39;: &#39;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9&#39;,\n    &#39;Accept-Language&#39;: &#39;zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6&#39;,\n    &#39;Cache-Control&#39;: &#39;max-age&#x3D;0&#39;,\n    &#39;Connection&#39;: &#39;keep-alive&#39;,\n    # Requests sorts cookies&#x3D; alphabetically\n    # &#39;Cookie&#39;: &#39;__jdu&#x3D;164706084910516181292; shshshfpa&#x3D;ac27b0e9-916f-4600-a8d8-59c831a1a907-1652529930; shshshfpb&#x3D;noLYaOxvik5URLA2R6uzCrA; o2State&#x3D;&#123;%22webp%22:true%2C%22avif%22:false&#125;; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; ipLoc-djd&#x3D;18-1482-48942-49058; shshshfp&#x3D;a354b74eee97acd3e5dc7a34609b535b; unpl&#x3D;JF8EALhnNSttChxcAR1VExBFTg4DW1wBSR8FOGMBUg4MH1MFHldPFBd7XlVdXhRLFB9uZxRUXVNIXA4ZBSsSEXtdVV9fD0oeBm5vNWQIW0lUAh9XSBZ-SzMgGyZ_DVcCbjF4BG1bS2QEKwIcFxZKWlVXWABLFgdvYAVdXVtDVzUaMhsaFHttZFtdCUoWC2hmAlVtWXtWBBoHHxMXSl5TbhZmSloDaGIDVVpZQlENGwMfEhdLVFRdVQt7FjNs; TrackID&#x3D;1LktDmeIYlq4RS62lp2WcZb3A2-LwnNYhz18i6aI5FlLUajbBiJd_FeCpEJdafoaAPnCSSoC61PQXGju4oI3qnbAT8S3MSqGOq1woyIirMtMOuV3qGlFl6X9MKqjmZsR0; thor&#x3D;70AB060D7F75310BAF0CE227144B45F89EA3FD829A7B37974106A4510DBABBD2D2ADA0B984BAD527C89EEFE0750ED95C6CF4CAF90C42F45F37589244950D233F7572E86297E56A589A289E8CFF4B7241DFA33FBE41392AEF2458EF8BF3F6DBBFA4315A0D22232B878BA867077580DA478BD559B930D575EA37D30A52757C4E6E81F39D4A6B7520F2C1F455BFE890AC341A55920740F5682FF572C70CF84017F8; pinId&#x3D;3o3XfM8mzX8mD44K9IZ3p7V9-x-f3wj7; pin&#x3D;jd_7701e3820cb18; unick&#x3D;jd_7701e3820cb18; ceshi3.com&#x3D;000; _tp&#x3D;s1jQhhQY1klVAfaPuL5OvGH1I1J7VanZuJjdCQPVNmY%3D; _pst&#x3D;jd_7701e3820cb18; __jda&#x3D;76161171.164706084910516181292.1647060849.1669819802.1669865317.7; __jdb&#x3D;76161171.5.164706084910516181292|7.1669865317; __jdc&#x3D;76161171; __jdv&#x3D;76161171|www.baidu.com|t_1003608409_|tuiguang|cf957f93d4bf408397f557bee614de76|1669865490795; shshshsID&#x3D;045ff225b6736e87dfb49f1c52b1bf4e_3_1669865502177; 3AB9D23F7A4B3C9B&#x3D;7UVB2WFZM5E6PVGD5ATMSSLYVFBGPQ4W2DNVAX6BTX5UOCCW3VIFMRPFCGFJIO7CXKNHL4GS3JSG5VMKH7XD6HMMHI&#39;,\n    &#39;Referer&#39;: &#39;https:&#x2F;&#x2F;passport.jd.com&#x2F;&#39;,\n    &#39;Sec-Fetch-Dest&#39;: &#39;document&#39;,\n    &#39;Sec-Fetch-Mode&#39;: &#39;navigate&#39;,\n    &#39;Sec-Fetch-Site&#39;: &#39;same-site&#39;,\n    &#39;Sec-Fetch-User&#39;: &#39;?1&#39;,\n    &#39;Upgrade-Insecure-Requests&#39;: &#39;1&#39;,\n    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&#39;,\n    &#39;sec-ch-ua&#39;: &#39;&quot;Microsoft Edge&quot;;v&#x3D;&quot;107&quot;, &quot;Chromium&quot;;v&#x3D;&quot;107&quot;, &quot;Not&#x3D;A?Brand&quot;;v&#x3D;&quot;24&quot;&#39;,\n    &#39;sec-ch-ua-mobile&#39;: &#39;?0&#39;,\n    &#39;sec-ch-ua-platform&#39;: &#39;&quot;Windows&quot;&#39;,\n    &#125;\n    # 搜索关键字\n    keyword &#x3D; str(input(&#39;请输入需要爬取的信息关键字：&#39;))\n    total &#x3D; input(&#39;请输入需要爬取页数: &#39;)\n\n\nclass Excel():\n    # 表格列数\n    TABLE_COL &#x3D; len(Config.TITLE_LABEL)\n    # 当前行数\n    _current_row &#x3D; 1\n\n    # 初始化，创建文件及写入title\n    def __init__(self, sheet_name&#x3D;&#39;sheet1&#39;):\n        self.write_work &#x3D; xlwt.Workbook(encoding&#x3D;&#39;ascii&#39;)\n        self.write_sheet &#x3D; self.write_work.add_sheet(sheet_name)\n        for item in range(len(Config.TITLE_LABEL)):\n            # 第一行写入excel表头\n            self.write_sheet.write(0, item, label&#x3D;Config.TITLE_LABEL[item])\n\n    # 写入内容\n    def write_content(self, content):\n        print(content)\n        if content[&#39;detail_addr&#39;] !&#x3D; &#39;无&#39;:  # 有时候没能获取的该商品的详情地址就跳过该商品\n            for item in range(self.TABLE_COL):\n                if (item &#x3D;&#x3D; self.TABLE_COL - 1) and (Config.TOTAL_LABEL[-1] &#x3D;&#x3D; &#39;标题材质关键字&#39;):\n                    self.write_sheet.write(self._current_row, item, label&#x3D;self.title_extract(content[&#39;name&#39;]))\n                else:\n                    self.write_sheet.write(self._current_row, item, label&#x3D;content[Config.TOTAL_LABEL[item]])\n            # 插入完一条记录后，换行\n            self._current_row +&#x3D; 1\n\n    # 保存文件\n    def save_file(self, file_url&#x3D;Config.SAVE_PATH):\n        try:\n            self.write_work.save(file_url)\n            print(&quot;文件保存成功！文件路径为：&quot; + file_url)\n        except IOError:\n            print(&quot;文件保存失败！&quot;)\n\n    # 提取商品标题中的材质关键词\n    def title_extract(self, title):\n        # 想要提取的关键词列表\n        materials &#x3D; [&#39;熟茶&#39;, &#39;一级&#39;, &#39;手工&#39;, &#39;散茶&#39;]\n        contain &#x3D; &#39;&#39;\n        count &#x3D; 0\n        for material in materials:\n            if material in title:\n                # 将最后的输入形式为 “陶瓷、木质、不锈钢”\n                if count &#x3D;&#x3D; 0:\n                    contain &#x3D; contain + material\n                    count +&#x3D; 1\n                else:\n                    contain &#x3D; contain + &#39;、&#39; + material\n                    count +&#x3D; 1\n        return contain\n\n\nclass Goods:\n    # 初始化方法\n    def __init__(self, li_info):\n        self.li_info &#x3D; li_info\n        self.good_info_dic &#x3D; &#123;&#125;\n\n    def acquire_comment(self, url):\n        &#39;&#39;&#39;\n        input:\n            url：商品详情地址(detail_addr)，形式如&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n        rerurn:\n            comment_count：该商品的评论数,现在能爬取到的都是大约数，比如“2万+”,详细的评论总数京东暂时没显示在html信息中（2021.08.03）\n        &#39;&#39;&#39;\n        # 提取商品详情地址中的商品号\n        no &#x3D; url.split(&#39;com&#x2F;&#39;)[1].split(&#39;.html&#39;)[0]\n        comment_url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;&quot; + no + &quot;&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1&quot;\n        print(&quot;评论数获取链接：&quot;, comment_url)\n        response &#x3D; requests.get(comment_url, headers&#x3D;Config.headers)\n        time.sleep(2)\n        page &#x3D; response.content.decode(\n            &#39;gbk&#39;)  # type(page)为str，fetchJSON_comment98(dic),dic[&#39;productCommentSummary&#39;][&#39;commentCountStr&#39;]为评论数\n        # &quot;commentCountStr&quot;:&quot;2万+&quot;, 获取其中的2万+，暂时想到的办法是用split和replace对字符串进行切分后再替换不需要的字符\n        comment_count &#x3D; page.split(&quot;commentCountStr&quot;)[1].split(&#39;:&#39;)[1].split(&#39;,&#39;)[0].replace(&#39;&quot;&#39;, &#39;&#39;)\n        return comment_count\n\n    def add_product_parameter(self, need_list, url):\n        html &#x3D; get_html(&#39;https:&#39; + url)\n        soup &#x3D; BeautifulSoup(html, &#39;lxml&#39;)\n        time.sleep(2)\n        # 获取商品参数\n        parameters &#x3D; soup.find(&#39;ul&#39;, class_&#x3D;&#39;parameter2 p-parameter-list&#39;)\n        para_lists &#x3D; parameters.find_all(&#39;li&#39;)\n        name_lists &#x3D; []\n        para_text_lists &#x3D; []\n        for para in para_lists:\n            para_text &#x3D; para.get_text()\n            #print(para_text)\n            # para_text的形式：“商品名称：浩雅HY160”\n            name_lists.append(para_text.split(&quot;：&quot;)[0])  # name_lists保存单个商品详情页参数名称，如“商品名称”\n            para_text_lists.append(para_text.split(&quot;：&quot;)[1])  # para_text_lists保存参数名称对应的参数，如”浩雅HY160“\n        return_list &#x3D; []\n        # 按need_list中参数名称的顺序保存单个商品详情页中的爬虫数据\n        for need in need_list[:-1]:  # 评论数单独拎出来，need_list[-1]为“评论数”\n            try:\n                index &#x3D; name_lists.index(need)\n                return_list.append(para_text_lists[index])\n            except:\n                # 如果该商品商家并没有显示该参数名称的参数，那么excel中填充空值\n                return_list.append(&#39; &#39;)\n        # 最后一列填充评论数\n        return_list.append(self.acquire_comment(url))\n        return return_list\n\n    def find_attr(self, attr):\n        try:\n            if attr &#x3D;&#x3D; Config.GOOD_LABEL[0]:\n                # 商品名称\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;em&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[1]:\n                # 价格\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-price&#39;).find(&#39;i&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[2]:\n                # 商家\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-shop&#39;).find(&#39;a&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[3]:\n                # 商品详情地址\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;a&#39;)[&#39;href&#39;]\n\n                # 进入单个商品详情网页进行数据爬取，本代码所说的单个商品详情网页意思为从搜索页点进某一个商品页，比如https:&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n                paras &#x3D; self.add_product_parameter(Config.PARAMETER_LABEL, result)\n                for i in range(len(paras)):\n                    para &#x3D; paras[i]\n                    self.good_info_dic.setdefault(Config.PARAMETER_LABEL[i], para)\n\n        except AttributeError:\n            result &#x3D; &#39;无&#39;\n        self.good_info_dic.setdefault(attr, result)  # 集合setdefault\n\n    # 添加商品信息\n    def add_good_info(self):\n        for item in Config.GOOD_LABEL:\n            self.find_attr(item)\n\n    # 获取产品列表\n    def get_good(self):\n        return self.good_info_dic\n\n\ndef get_html(url, currentPage&#x3D;None, pageSize&#x3D;None):\n    if pageSize:\n        print(&quot;--&gt; 正在获取网站第 &quot; + str(currentPage) + &quot;页信息&quot;)\n        if currentPage !&#x3D; 1:\n            url &#x3D; url + &#39;&amp;page&#x3D;&#39; + str(currentPage) + &#39;&amp;s&#x3D;&#39; + str(pageSize) + &#39;&amp;click&#x3D;0&#39;\n\n    response &#x3D; requests.get(url, headers&#x3D;Config.headers)  # 请求访问网站\n    time.sleep(2)\n    if response.status_code &#x3D;&#x3D; 200:\n        html &#x3D; response.text  # 获取网页源码\n        return html  # 返回网页源码\n    else:\n        print(&quot;获取网站信息失败！&quot;)\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    &#39;&#39;&#39;\n    一定需要修改的是Config中的headers文件，每个电脑每个京东账号对应的文件不同\n    修改完headers后可以输入关键词为“餐具碗”，页数“2”，查看下爬虫结果\n    可根据自己的需求修改Config中的参数\n    &#39;&#39;&#39;\n    # 创建文件\n    excel &#x3D; Excel()\n\n    config &#x3D; Config()\n    # 搜索地址\n    search_url &#x3D; &#39;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;&#39; + config.keyword + &#39;&amp;enc&#x3D;utf-8&amp;psort&#x3D;3&#39;\n    page &#x3D; &#123;\n        &#39;total&#39;: 0,  # 总页数\n        &#39;currentPage&#39;: 1,  # 当前页数\n        &#39;pageSize&#39;: 0  # 每页显示多少条\n    &#125;\n\n    if not config.total.isdigit():\n        print(&quot;非法字符，程序退出！&quot;)\n        exit(0)\n\n    page[&#39;total&#39;] &#x3D; eval(config.total)\n    for i in range(page[&#39;total&#39;]):\n        # 初始化BeautifulSoup库,并设置解析器\n        soup &#x3D; BeautifulSoup(get_html(search_url, page[&#39;currentPage&#39;], page[&#39;currentPage&#39;] * page[&#39;pageSize&#39;]), &#39;lxml&#39;)\n        time.sleep(2)  # 为了防止爬取太快被京东服务器拦截，在每次解析网页操作后强制休息2秒\n\n        # 商品列表\n        goods_list &#x3D; soup.find_all(&#39;li&#39;, class_&#x3D;&#39;gl-item&#39;)\n        print(&quot;分析到第&quot; + str(page[&#39;currentPage&#39;]) + &#39;页共有&#39; + str(len(goods_list)) + &#39;条商品信息&#39;)\n        for li in goods_list:  # 遍历父节点\n            try:\n                goods &#x3D; Goods(li)\n                # 添加信息\n                goods.add_good_info()\n                # 获取信息\n                good_info &#x3D; goods.get_good()\n                # 写入excel\n                excel.write_content(good_info)\n            except:\n                print(&quot;商品信息获取失败&quot;)\n                break\n\n        page[&#39;currentPage&#39;] &#x3D; page[&#39;currentPage&#39;] + 1\n        page[&#39;pageSize&#39;] &#x3D; len(goods_list) * page[&#39;currentPage&#39;]\n\n    # 保存excel文件\n    excel.save_file(config.SAVE_PATH)\n\n\n</code></pre>\n<h4 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;chengxusheji.py\n请输入需要爬取的信息关键字：黑茶\n请输入需要爬取页数: 2\n分析到第1页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100014774315&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n中粮集团 中茶六堡茶广西梧州窖藏特级陈香箩筐装500g中华老字号&#39;, &#39;price&#39;: &#39;288.00&#39;, &#39;shop&#39;: &#39;中茶京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100014774315.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100034615616&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;泾渭茯茶 黑茶 茶叶 咸阳茯茶 陕西特产 金花茯茶砖茶 经典1368 900g纸包装&#39;, &#39;price&#39;: &#39;168.00&#39;, &#39;shop&#39;: &#39;泾渭茯茶官方京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100034615616.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;1708434&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n白沙溪 安化黑茶 金花茯茶砖茶天尖嫩料天茯茶叶礼盒1000g&#39;, &#39;price&#39;: &#39;350.00&#39;, &#39;shop&#39;: &#39;白沙溪京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;1708434.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10461872396&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n湘丰 茶叶湖南安化黑茶4年陈手工金花茯砖茶手筑茯茶盒装1kg&#39;, &#39;price&#39;: &#39;95.00&#39;, &#39;shop&#39;: &#39;湘丰茶叶旗舰店&#39;, &#39;评论数&#39;: &#39;10万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10461872396.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100014737221&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n七春茶叶 六堡茶黑茶 2016年陈化窖藏散茶熟茶 广西梧州特产箩筐装250g 送长辈自饮佳品 &#39;, &#39;price&#39;: &#39;99.00&#39;, &#39;shop&#39;: &#39;七春茶业京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;1万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100014737221.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10026990549152&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;三鹤 六堡茶【承意】2019年特级散茶500克广西特产梧州茶厂黑茶包邮&#39;, &#39;price&#39;: &#39;270.00&#39;, &#39;shop&#39;: &#39;三鹤茶叶官方旗舰店&#39;, &#39;评论数&#39;: &#39;1000+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10026990549152.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;45630061389&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;中茶 中华老字号 中粮茶叶 安化黑茶 2022年千两茶+底座 花卷茶岁印千两茶36.25kg&#39;, &#39;price&#39;: &#39;5688.00&#39;, &#39;shop&#39;: &#39;百年木仓旗舰店&#39;, &#39;评论数&#39;: &#39;100+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;45630061389.html&#39;&#125;\n\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10039775408496&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;湘丰 专拍【一箱装】茶叶湖南黑茶3年陈手工金花茯砖茶手筑茯茶10kg 2017茯砖茶20盒&#39;, &#39;price&#39;: &#39;699.00&#39;, &#39;shop&#39;: &#39;湘丰茶叶旗舰店&#39;, &#39;评论数&#39;: &#39;44&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10039775408496.html&#39;&#125;\n文件保存成功！文件路径为：.&#x2F;test.xls\n\n进程已结束,退出代码0\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7b076d80ba05410a8560343aa99bfcab.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"PART2\"><a href=\"#PART2\" class=\"headerlink\" title=\"PART2\"></a>PART2</h3><h4 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nimport requests\nfrom bs4 import BeautifulSoup\nimport xlwt\nimport time\n\n\nclass Config():\n    &#39;&#39;&#39;\n    PARAMETER_LABEL：需要根据爬取的商品详情界面的信息key进行修改，其中&#39;评论数&#39;是另一种方式获取的\n    TITLE_LABEL：PARAMETER_LABEL修改后excel的表头也做相应的修改\n    GOOD_LABEL：无需修改，默认该四个信息都爬取\n    need_list：能直接从html解析后的标签文件中获取的\n    &#39;&#39;&#39;\n    # excel表头\n    #TITLE_LABEL &#x3D; [&#39;商品名称&#39;, &#39;价格&#39;, &#39;商家&#39;, &#39;商品详情地址&#39;, &#39;工艺&#39;, &#39;图案&#39;, &#39;风格&#39;, &#39;材质&#39;, &#39;形状&#39;, &#39;直径&#39;, &#39;评论数&#39;, &#39;标题材质关键字&#39;]\n    TITLE_LABEL &#x3D; [&#39;商品说明&#x2F;包装与规格&#39;, &#39;价格&#39;, &#39;商家名称&#39;, &#39;商品详情地址&#39;, &#39;评论数&#39;]\n    # html中对应TITLE_LABEL的key\n    GOOD_LABEL &#x3D; [&#39;name&#39;, &#39;price&#39;, &#39;shop&#39;, &#39;detail_addr&#39;]\n    # TITLE_LABEL中商品详情页（即点进单个商品界面）想爬取的数据在html中key，&#39;评论数&#39;一定要放在最后\n    PARAMETER_LABEL &#x3D; [ &#39;评论数&#39;]\n    # 将PARAMETER_LABEL去掉&#39;评论数&#39;即为need_list\n    need_list &#x3D; PARAMETER_LABEL[:-1]\n    # 将搜索页的key和单个商品详情页的key组合起来\n    TOTAL_LABEL &#x3D; GOOD_LABEL + PARAMETER_LABEL\n    # excel文件的保存路径\n    SAVE_PATH &#x3D; &#39;.&#x2F;test.xls&#39;\n\n    # 发送访问请问的head文件\n    # 每个电脑每个京东账号对应的head文件不同，获取方式参考帖子https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_41998772&#x2F;article&#x2F;details&#x2F;106476166\n    #\n    headers &#x3D; &#123;\n    &#39;Accept&#39;: &#39;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9&#39;,\n    &#39;Accept-Language&#39;: &#39;zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6&#39;,\n    &#39;Cache-Control&#39;: &#39;max-age&#x3D;0&#39;,\n    &#39;Connection&#39;: &#39;keep-alive&#39;,\n    # Requests sorts cookies&#x3D; alphabetically\n    # &#39;Cookie&#39;: &#39;__jdu&#x3D;164706084910516181292; shshshfpa&#x3D;ac27b0e9-916f-4600-a8d8-59c831a1a907-1652529930; shshshfpb&#x3D;noLYaOxvik5URLA2R6uzCrA; o2State&#x3D;&#123;%22webp%22:true%2C%22avif%22:false&#125;; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; ipLoc-djd&#x3D;18-1482-48942-49058; shshshfp&#x3D;a354b74eee97acd3e5dc7a34609b535b; unpl&#x3D;JF8EALhnNSttChxcAR1VExBFTg4DW1wBSR8FOGMBUg4MH1MFHldPFBd7XlVdXhRLFB9uZxRUXVNIXA4ZBSsSEXtdVV9fD0oeBm5vNWQIW0lUAh9XSBZ-SzMgGyZ_DVcCbjF4BG1bS2QEKwIcFxZKWlVXWABLFgdvYAVdXVtDVzUaMhsaFHttZFtdCUoWC2hmAlVtWXtWBBoHHxMXSl5TbhZmSloDaGIDVVpZQlENGwMfEhdLVFRdVQt7FjNs; TrackID&#x3D;1LktDmeIYlq4RS62lp2WcZb3A2-LwnNYhz18i6aI5FlLUajbBiJd_FeCpEJdafoaAPnCSSoC61PQXGju4oI3qnbAT8S3MSqGOq1woyIirMtMOuV3qGlFl6X9MKqjmZsR0; thor&#x3D;70AB060D7F75310BAF0CE227144B45F89EA3FD829A7B37974106A4510DBABBD2D2ADA0B984BAD527C89EEFE0750ED95C6CF4CAF90C42F45F37589244950D233F7572E86297E56A589A289E8CFF4B7241DFA33FBE41392AEF2458EF8BF3F6DBBFA4315A0D22232B878BA867077580DA478BD559B930D575EA37D30A52757C4E6E81F39D4A6B7520F2C1F455BFE890AC341A55920740F5682FF572C70CF84017F8; pinId&#x3D;3o3XfM8mzX8mD44K9IZ3p7V9-x-f3wj7; pin&#x3D;jd_7701e3820cb18; unick&#x3D;jd_7701e3820cb18; ceshi3.com&#x3D;000; _tp&#x3D;s1jQhhQY1klVAfaPuL5OvGH1I1J7VanZuJjdCQPVNmY%3D; _pst&#x3D;jd_7701e3820cb18; __jda&#x3D;76161171.164706084910516181292.1647060849.1669819802.1669865317.7; __jdb&#x3D;76161171.5.164706084910516181292|7.1669865317; __jdc&#x3D;76161171; __jdv&#x3D;76161171|www.baidu.com|t_1003608409_|tuiguang|cf957f93d4bf408397f557bee614de76|1669865490795; shshshsID&#x3D;045ff225b6736e87dfb49f1c52b1bf4e_3_1669865502177; 3AB9D23F7A4B3C9B&#x3D;7UVB2WFZM5E6PVGD5ATMSSLYVFBGPQ4W2DNVAX6BTX5UOCCW3VIFMRPFCGFJIO7CXKNHL4GS3JSG5VMKH7XD6HMMHI&#39;,\n    &#39;Referer&#39;: &#39;https:&#x2F;&#x2F;passport.jd.com&#x2F;&#39;,\n    &#39;Sec-Fetch-Dest&#39;: &#39;document&#39;,\n    &#39;Sec-Fetch-Mode&#39;: &#39;navigate&#39;,\n    &#39;Sec-Fetch-Site&#39;: &#39;same-site&#39;,\n    &#39;Sec-Fetch-User&#39;: &#39;?1&#39;,\n    &#39;Upgrade-Insecure-Requests&#39;: &#39;1&#39;,\n    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&#39;,\n    &#39;sec-ch-ua&#39;: &#39;&quot;Microsoft Edge&quot;;v&#x3D;&quot;107&quot;, &quot;Chromium&quot;;v&#x3D;&quot;107&quot;, &quot;Not&#x3D;A?Brand&quot;;v&#x3D;&quot;24&quot;&#39;,\n    &#39;sec-ch-ua-mobile&#39;: &#39;?0&#39;,\n    &#39;sec-ch-ua-platform&#39;: &#39;&quot;Windows&quot;&#39;,\n    &#125;\n    # 搜索关键字\n    keyword &#x3D; str(input(&#39;请输入需要爬取的信息关键字：&#39;))\n    total &#x3D; input(&#39;请输入需要爬取页数: &#39;)\n\n\nclass Excel():\n    # 表格列数\n    TABLE_COL &#x3D; len(Config.TITLE_LABEL)\n    # 当前行数\n    _current_row &#x3D; 1\n\n    # 初始化，创建文件及写入title\n    def __init__(self, sheet_name&#x3D;&#39;sheet1&#39;):\n        self.write_work &#x3D; xlwt.Workbook(encoding&#x3D;&#39;ascii&#39;)\n        self.write_sheet &#x3D; self.write_work.add_sheet(sheet_name)\n        for item in range(len(Config.TITLE_LABEL)):\n            # 第一行写入excel表头\n            self.write_sheet.write(0, item, label&#x3D;Config.TITLE_LABEL[item])\n\n    # 写入内容\n    def write_content(self, content):\n        print(content)\n        if content[&#39;detail_addr&#39;] !&#x3D; &#39;无&#39;:  # 有时候没能获取的该商品的详情地址就跳过该商品\n            for item in range(self.TABLE_COL):\n                if (item &#x3D;&#x3D; self.TABLE_COL - 1) and (Config.TOTAL_LABEL[-1] &#x3D;&#x3D; &#39;标题材质关键字&#39;):\n                    self.write_sheet.write(self._current_row, item, label&#x3D;self.title_extract(content[&#39;name&#39;]))\n                else:\n                    self.write_sheet.write(self._current_row, item, label&#x3D;content[Config.TOTAL_LABEL[item]])\n            # 插入完一条记录后，换行\n            self._current_row +&#x3D; 1\n\n    # 保存文件\n    def save_file(self, file_url&#x3D;Config.SAVE_PATH):\n        try:\n            self.write_work.save(file_url)\n            print(&quot;文件保存成功！文件路径为：&quot; + file_url)\n        except IOError:\n            print(&quot;文件保存失败！&quot;)\n\n    # 提取商品标题中的材质关键词\n    def title_extract(self, title):\n        # 想要提取的关键词列表\n        materials &#x3D; [&#39;熟茶&#39;, &#39;一级&#39;, &#39;手工&#39;, &#39;散茶&#39;]\n        contain &#x3D; &#39;&#39;\n        count &#x3D; 0\n        for material in materials:\n            if material in title:\n                # 将最后的输入形式为 “陶瓷、木质、不锈钢”\n                if count &#x3D;&#x3D; 0:\n                    contain &#x3D; contain + material\n                    count +&#x3D; 1\n                else:\n                    contain &#x3D; contain + &#39;、&#39; + material\n                    count +&#x3D; 1\n        return contain\n\n\nclass Goods:\n    # 初始化方法\n    def __init__(self, li_info):\n        self.li_info &#x3D; li_info\n        self.good_info_dic &#x3D; &#123;&#125;\n\n    def acquire_comment(self, url):\n        &#39;&#39;&#39;\n        input:\n            url：商品详情地址(detail_addr)，形式如&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n        rerurn:\n            comment_count：该商品的评论数,现在能爬取到的都是大约数，比如“2万+”,详细的评论总数京东暂时没显示在html信息中（2021.08.03）\n        &#39;&#39;&#39;\n        # 提取商品详情地址中的商品号\n        no &#x3D; url.split(&#39;com&#x2F;&#39;)[1].split(&#39;.html&#39;)[0]\n        comment_url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;&quot; + no + &quot;&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1&quot;\n        print(&quot;评论数获取链接：&quot;, comment_url)\n        response &#x3D; requests.get(comment_url, headers&#x3D;Config.headers)\n        time.sleep(2)\n        page &#x3D; response.content.decode(\n            &#39;gbk&#39;)  # type(page)为str，fetchJSON_comment98(dic),dic[&#39;productCommentSummary&#39;][&#39;commentCountStr&#39;]为评论数\n        # &quot;commentCountStr&quot;:&quot;2万+&quot;, 获取其中的2万+，暂时想到的办法是用split和replace对字符串进行切分后再替换不需要的字符\n        comment_count &#x3D; page.split(&quot;commentCountStr&quot;)[1].split(&#39;:&#39;)[1].split(&#39;,&#39;)[0].replace(&#39;&quot;&#39;, &#39;&#39;)\n        return comment_count\n\n    def add_product_parameter(self, need_list, url):\n        html &#x3D; get_html(&#39;https:&#39; + url)\n        soup &#x3D; BeautifulSoup(html, &#39;lxml&#39;)\n        time.sleep(2)\n        # 获取商品参数\n        parameters &#x3D; soup.find(&#39;ul&#39;, class_&#x3D;&#39;parameter2 p-parameter-list&#39;)\n        para_lists &#x3D; parameters.find_all(&#39;li&#39;)\n        name_lists &#x3D; []\n        para_text_lists &#x3D; []\n        for para in para_lists:\n            para_text &#x3D; para.get_text()\n            #print(para_text)\n            # para_text的形式：“商品名称：浩雅HY160”\n            name_lists.append(para_text.split(&quot;：&quot;)[0])  # name_lists保存单个商品详情页参数名称，如“商品名称”\n            para_text_lists.append(para_text.split(&quot;：&quot;)[1])  # para_text_lists保存参数名称对应的参数，如”浩雅HY160“\n        return_list &#x3D; []\n        # 按need_list中参数名称的顺序保存单个商品详情页中的爬虫数据\n        for need in need_list[:-1]:  # 评论数单独拎出来，need_list[-1]为“评论数”\n            try:\n                index &#x3D; name_lists.index(need)\n                return_list.append(para_text_lists[index])\n            except:\n                # 如果该商品商家并没有显示该参数名称的参数，那么excel中填充空值\n                return_list.append(&#39; &#39;)\n        # 最后一列填充评论数\n        return_list.append(self.acquire_comment(url))\n        return return_list\n\n    def find_attr(self, attr):\n        try:\n            if attr &#x3D;&#x3D; Config.GOOD_LABEL[0]:\n                # 商品名称\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;em&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[1]:\n                # 价格\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-price&#39;).find(&#39;i&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[2]:\n                # 商家\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-shop&#39;).find(&#39;a&#39;).get_text()\n            elif attr &#x3D;&#x3D; Config.GOOD_LABEL[3]:\n                # 商品详情地址\n                result &#x3D; self.li_info.find(class_&#x3D;&#39;p-name p-name-type-2&#39;).find(&#39;a&#39;)[&#39;href&#39;]\n\n                # 进入单个商品详情网页进行数据爬取，本代码所说的单个商品详情网页意思为从搜索页点进某一个商品页，比如https:&#x2F;&#x2F;item.jd.com&#x2F;100007046969.html\n                paras &#x3D; self.add_product_parameter(Config.PARAMETER_LABEL, result)\n                for i in range(len(paras)):\n                    para &#x3D; paras[i]\n                    self.good_info_dic.setdefault(Config.PARAMETER_LABEL[i], para)\n\n        except AttributeError:\n            result &#x3D; &#39;无&#39;\n        self.good_info_dic.setdefault(attr, result)  # 集合setdefault\n\n    # 添加商品信息\n    def add_good_info(self):\n        for item in Config.GOOD_LABEL:\n            self.find_attr(item)\n\n    # 获取产品列表\n    def get_good(self):\n        return self.good_info_dic\n\n\ndef get_html(url, currentPage&#x3D;None, pageSize&#x3D;None):\n    if pageSize:\n        print(&quot;--&gt; 正在获取网站第 &quot; + str(currentPage) + &quot;页信息&quot;)\n        if currentPage !&#x3D; 1:\n            url &#x3D; url + &#39;&amp;page&#x3D;&#39; + str(currentPage) + &#39;&amp;s&#x3D;&#39; + str(pageSize) + &#39;&amp;click&#x3D;0&#39;\n\n    response &#x3D; requests.get(url, headers&#x3D;Config.headers)  # 请求访问网站\n    time.sleep(2)\n    if response.status_code &#x3D;&#x3D; 200:\n        html &#x3D; response.text  # 获取网页源码\n        return html  # 返回网页源码\n    else:\n        print(&quot;获取网站信息失败！&quot;)\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    &#39;&#39;&#39;\n    一定需要修改的是Config中的headers文件，每个电脑每个京东账号对应的文件不同\n    修改完headers后可以输入关键词为“餐具碗”，页数“2”，查看下爬虫结果\n    可根据自己的需求修改Config中的参数\n    &#39;&#39;&#39;\n    # 创建文件\n    excel &#x3D; Excel()\n\n    config &#x3D; Config()\n    # 搜索地址\n    search_url &#x3D; &#39;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;&#39; + config.keyword + &#39;&amp;enc&#x3D;utf-8&amp;psort&#x3D;3&#39;\n    page &#x3D; &#123;\n        &#39;total&#39;: 0,  # 总页数\n        &#39;currentPage&#39;: 1,  # 当前页数\n        &#39;pageSize&#39;: 0  # 每页显示多少条\n    &#125;\n\n    if not config.total.isdigit():\n        print(&quot;非法字符，程序退出！&quot;)\n        exit(0)\n\n    page[&#39;total&#39;] &#x3D; eval(config.total)\n    for i in range(page[&#39;total&#39;]):\n        # 初始化BeautifulSoup库,并设置解析器\n        soup &#x3D; BeautifulSoup(get_html(search_url, page[&#39;currentPage&#39;], page[&#39;currentPage&#39;] * page[&#39;pageSize&#39;]), &#39;lxml&#39;)\n        time.sleep(2)  # 为了防止爬取太快被京东服务器拦截，在每次解析网页操作后强制休息2秒\n\n        # 商品列表\n        goods_list &#x3D; soup.find_all(&#39;li&#39;, class_&#x3D;&#39;gl-item&#39;)\n        print(&quot;分析到第&quot; + str(page[&#39;currentPage&#39;]) + &#39;页共有&#39; + str(len(goods_list)) + &#39;条商品信息&#39;)\n        for li in goods_list:  # 遍历父节点\n            try:\n                goods &#x3D; Goods(li)\n                # 添加信息\n                goods.add_good_info()\n                # 获取信息\n                good_info &#x3D; goods.get_good()\n                # 写入excel\n                excel.write_content(good_info)\n            except:\n                print(&quot;商品信息获取失败&quot;)\n                break\n\n        page[&#39;currentPage&#39;] &#x3D; page[&#39;currentPage&#39;] + 1\n        page[&#39;pageSize&#39;] &#x3D; len(goods_list) * page[&#39;currentPage&#39;]\n\n    # 保存excel文件\n    excel.save_file(config.SAVE_PATH)\n\n</code></pre>\n<h4 id=\"输出-1\"><a href=\"#输出-1\" class=\"headerlink\" title=\"输出\"></a>输出</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;chengxusheji.py\n请输入需要爬取的信息关键字：黑茶\n请输入需要爬取页数: 7\n分析到第1页共有30条商品信息\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100014774315&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n中粮集团 中茶六堡茶广西梧州窖藏特级陈香箩筐装500g中华老字号&#39;, &#39;price&#39;: &#39;288.00&#39;, &#39;shop&#39;: &#39;中茶京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100014774315.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100034615616&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;泾渭茯茶 黑茶 茶叶 咸阳茯茶 陕西特产 金花茯茶砖茶 经典1368 900g纸包装&#39;, &#39;price&#39;: &#39;168.00&#39;, &#39;shop&#39;: &#39;泾渭茯茶官方京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100034615616.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;1708434&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n白沙溪 安化黑茶 金花茯茶砖茶天尖嫩料天茯茶叶礼盒1000g&#39;, &#39;price&#39;: &#39;350.00&#39;, &#39;shop&#39;: &#39;白沙溪京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;2万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;1708434.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10461872396&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n湘丰 茶叶湖南安化黑茶4年陈手工金花茯砖茶手筑茯茶盒装1kg&#39;, &#39;price&#39;: &#39;95.00&#39;, &#39;shop&#39;: &#39;湘丰茶叶旗舰店&#39;, &#39;评论数&#39;: &#39;10万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10461872396.html&#39;&#125;\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;100014737221&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;\\n七春茶叶 六堡茶黑茶 2016年陈化窖藏散茶熟茶 广西梧州特产箩筐装250g 送长辈自饮佳品 &#39;, &#39;price&#39;: &#39;99.00&#39;, &#39;shop&#39;: &#39;七春茶业京东自营旗舰店&#39;, &#39;评论数&#39;: &#39;1万+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;100014737221.html&#39;&#125;\n\n评论数获取链接： https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productPageComments.action?callback&#x3D;fetchJSON_comment98&amp;productId&#x3D;10051337800205&amp;score&#x3D;0&amp;sortType&#x3D;5&amp;page&#x3D;0&amp;pageSize&#x3D;10&amp;isShadowSku&#x3D;0&amp;fold&#x3D;1\n&#123;&#39;name&#39;: &#39;【2022年新品】湘益茯茶特茯小砖茯砖茶320g正宗湖南安化黑茶&#39;, &#39;price&#39;: &#39;34.00&#39;, &#39;shop&#39;: &#39;湘益茯茶官方旗舰店&#39;, &#39;评论数&#39;: &#39;100+&#39;, &#39;detail_addr&#39;: &#39;&#x2F;&#x2F;item.jd.com&#x2F;10051337800205.html&#39;&#125;\n文件保存成功！文件路径为：.&#x2F;test.xls\n\n进程已结束,退出代码0\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/b8d0189b0a314756a5b8862dc2132363.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/a15dbe0da09a47d897305111ce47b2e7.jpeg\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"写入txt\"><a href=\"#写入txt\" class=\"headerlink\" title=\"写入txt\"></a>写入txt</h2><h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">#导入所需包\nimport os\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport xlrd\nimport pandas as pd \nfrom datetime import datetime\nfrom pandas import Series,DataFrame\n\ndf &#x3D; pd.read_excel(&#39;test.xls&#39;)  #打开Excel表格\nprint(df) #打印所有数据\nprint(df.shape)  #打印表格大小\nprint(df.dtypes)  #打印表格各列数据类型\nprint(df.head(5))  #打印前五行数据\n\nf &#x3D; open(&#39;data.txt&#39;,&#39;w&#39;,encoding&#x3D;&#39;utf-8&#39;)  #打开data.txt文件，并以汉字字符写入\nfrom xlrd import open_workbook\nwb&#x3D;open_workbook(r&#39;test.xls&#39;)\ntb&#x3D;wb.sheets()[0]\ndata&#x3D;[]\nfor r in range(tb.nrows):\n    val&#x3D;[]\n    for c in range(tb.ncols):\n        val.append(tb.cell_value(r,c))\n    f.write(str(val)+&#39;\\n&#39;)\n    data.append(tuple(val))\nf.close()</code></pre>\n<h3 id=\"输出-2\"><a href=\"#输出-2\" class=\"headerlink\" title=\"输出\"></a>输出</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;transf.py\n                                            商品说明&#x2F;包装与规格  ...   评论数\n0                   \\n中粮集团 中茶六堡茶广西梧州窖藏特级陈香箩筐装500g中华老字号  ...   2万+\n1           泾渭茯茶 黑茶 茶叶 咸阳茯茶 陕西特产 金花茯茶砖茶 经典1368 900g纸包装  ...   2万+\n2                     \\n白沙溪 安化黑茶 金花茯茶砖茶天尖嫩料天茯茶叶礼盒1000g  ...   2万+\n3                     \\n湘丰 茶叶湖南安化黑茶4年陈手工金花茯砖茶手筑茯茶盒装1kg  ...  10万+\n4    \\n七春茶叶 六堡茶黑茶 2016年陈化窖藏散茶熟茶 广西梧州特产箩筐装250g 送长辈自饮佳品   ...   1万+\n..                                                 ...  ...   ...\n205          白沙溪 安化黑茶 将军茯正品 金花茯砖茶叶礼盒限量款年份老茶 2015航天版2KG  ...    66\n206                 三鹤六堡茶【三月三】 2018年特级散茶300克广西特产梧州茶厂黑茶  ...    39\n207                \\n白沙溪茶叶黑茶安化黑茶 2013年金花茯茶砖茶御品茯砖318g盒装  ...   5万+\n208       湘益（XIANGYI） 湘益茯茶一品茯茶400g  湖南安化黑茶金花茯砖茶 2020年版  ...  200+\n209                   【2022年新品】湘益茯茶特茯小砖茯砖茶320g正宗湖南安化黑茶  ...  100+\n\n[210 rows x 5 columns]\n(210, 5)\n商品说明&#x2F;包装与规格     object\n价格            float64\n商家名称           object\n商品详情地址         object\n评论数            object\ndtype: object\n                                          商品说明&#x2F;包装与规格  ...   评论数\n0                 \\n中粮集团 中茶六堡茶广西梧州窖藏特级陈香箩筐装500g中华老字号  ...   2万+\n1         泾渭茯茶 黑茶 茶叶 咸阳茯茶 陕西特产 金花茯茶砖茶 经典1368 900g纸包装  ...   2万+\n2                   \\n白沙溪 安化黑茶 金花茯茶砖茶天尖嫩料天茯茶叶礼盒1000g  ...   2万+\n3                   \\n湘丰 茶叶湖南安化黑茶4年陈手工金花茯砖茶手筑茯茶盒装1kg  ...  10万+\n4  \\n七春茶叶 六堡茶黑茶 2016年陈化窖藏散茶熟茶 广西梧州特产箩筐装250g 送长辈自饮佳品   ...   1万+\n\n[5 rows x 5 columns]\n\n进程已结束,退出代码0\n</code></pre>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"https://img-blog.csdnimg.cn/cb153af9021d455bbf5cef3140934b87.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h2><h3 id=\"代码-3\"><a href=\"#代码-3\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\nfrom lxml import etree\nimport json\nfrom bs4 import BeautifulSoup\nimport re\n\ndef get_one_page(url,headers):\n    try:\n        response &#x3D; requests.get(url,headers&#x3D;headers)\n        if response.status_code &#x3D;&#x3D; 200:\n            response.encoding &#x3D; &#39;utf-8&#39;\n            return response.text\n        return None\n    except RequestException:\n        return None\n\ndef get_id(product_id):\n    url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productCommentSummaries.action&quot; \\\n          &quot;?referenceIds&#x3D;&quot;+str(product_id)+&quot;&amp;callback&#x3D;jQuery8827474&quot; \\\n                                           &quot;&amp;_&#x3D;1615298058081&quot;\n\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;\n                             &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                             &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                             &quot;Edg&#x2F;107.0.1418.56&quot;,\n               &quot;Cookie&quot;: &quot;__jdu&#x3D;1976972241; shshshfpa&#x3D;a2dcb9a2-4610-bcf&quot;\n                         &quot;9-11fb-d6121b1432cf-1652110313; shshshfpb&#x3D;nvrX&quot;\n                         &quot;JxBCCj0eG8UiLp9MCww; areaId&#x3D;18; ipLoc-djd&#x3D;18-14&quot;\n                         &quot;82-0-0; PCSYCityID&#x3D;CN_430000_430100_0; __jdc&#x3D;122&quot;\n                         &quot;270672; shshshfp&#x3D;0bcaf8cf9b6bcada873c2260d4c1fce2;&quot;\n                         &quot; unpl&#x3D;JF8EAJJnNSttDEhRDBNWGxVHGV5SWw4AGR4COmVXUQ9&quot;\n                         &quot;eGwFVGQYcF0N7XlVdXhRLFx9sbxRUWVNIUw4ZAisSEXtfVVdc&quot;\n                         &quot;DkgWA25XNVNdUQYVV1YyGBIgS1xkXlUOTB8FbGQAVG1Ze1MFEj&quot;\n                         &quot;IrIhVLXFVaXg5NFAtfZjVWXFlOXAcTARITIAAzVRNdAE0QC2lk&quot;\n                         &quot;BlFdaEpkBg; CCC_SE&#x3D;ADC_8UsmEi14MQp79Oa3KCgpDie2Uak%&quot;\n                         &quot;2fjhKDLxxPgJ1YAwwxFkHyVFPSLAMk05mHrTpGuzccWqxZ5XHh&quot;\n                         &quot;wbeDqXpRIFxCZ%2bgleHpZhqmkVSbPox%2fcQt%2bUunIAYjzVE&quot;\n                         &quot;U%2fWby8i4N0SVJYFSF7LbyxYt7ZqnlHcASH4Ta%2bCjpVi8J9k&quot;\n                         &quot;KIt3Vfjc9JeaduYZo6uR1YEkcOz7FxuchTPT1EZ4RYfIZNFvqtb&quot;\n                         &quot;OuXeIaVsU3ag0CdUWJbd6ky2bVE4MjQid3BItTNOBxIon%2fdFs&quot;\n                         &quot;BY%2b2O7ZS8DzonGXdBNBWZIjJuJTL0UtldEEOqP0k743PWs%2b&quot;\n                         &quot;VRKlc9FnORUbQDV69EMVfWfDx4hHY9RpizuBjT6Q6rTWMtuI5%2b&quot;\n                         &quot;e0uqrUelATzG0iE3V0eNjScxG2nfbtxul%2fAozZ0Uq9HJIrFenV&quot;\n                         &quot;d7fIcsQuQM7olHxevztvMsewqMD7rYQohEWz3b6XUlrxBgvMsgPn&quot;\n                         &quot;SUsJBZEFbdR7bU%2fffzRVDbKs%3d; __jdv&#x3D;122270672|t.zouk&quot;\n                         &quot;ankan.com|t_308072010_|tuiguang|e2489e16fc274b9c80d3c&quot;\n                         &quot;4c7ada3564b|1669706793151; __jda&#x3D;122270672.197697224&quot;\n                         &quot;1.1652110310.1669706793.1669710861.14; 3AB9D23F7A4B3C&quot;\n                         &quot;9B&#x3D;OQL3PN3MRI3XBYLOXXERCIQ7Z57OXAGLHRONDSZ5M7ODU6HF3P&quot;\n                         &quot;VE3ABDTPY4CT2AFP33IB7U4SWYLP7AIDHRRHCDQE&quot;\n               &#125;\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    soup &#x3D; BeautifulSoup(response.text, &quot;lxml&quot;)\n    divs &#x3D; soup.find_all(&#39;p&#39;)\n    count &#x3D; str(divs)\n    pattern &#x3D; re.compile(&#39;.*?&quot;CommentCountStr&quot;:&quot;(.*?)&quot;,&quot;CommentCount&quot;&#39;)\n    result &#x3D; re.findall(pattern, count)\n    return result\n\ndef get_inside(product_id):\n    url &#x3D; &quot;https:&#x2F;&#x2F;item.jd.com&#x2F;&quot;+str(product_id)+&quot;.html&quot;\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) &quot;\n                             &quot;AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&quot;\n                             &quot;&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&quot;&#125;\n\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    text &#x3D; response.text\n    html &#x3D; etree.HTML(text)\n    list &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[9]&#x2F;&#x2F;div[@class&#x3D;&quot;tab-con&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;hide&quot;]&#x2F;&#x2F;div[@class&#x3D;&quot;Ptable&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;Ptable-item&quot;]&#x2F;&#x2F;dl[@class&#x3D;&quot;clearfix&quot;]&#x2F;&#x2F;text()&#39;)\n    result &#x3D; [x.strip() for x in list if x.strip() !&#x3D; &#39;&#39;]\n    return result\n\nf &#x3D; open(&quot;.&#x2F;京东商城黑茶200条信息1.txt&quot;, &#39;a+&#39;)\ndef parse_one_page(text):\n    This_page &#x3D; &#123;&#125;\n    html &#x3D; etree.HTML(text)\n    items &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[@id&#x3D;&quot;J_goodsList&quot;]&#x2F;ul&#x2F;li&#39;)\n    for item in items:\n        This_page[&quot;商品描述&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-name p-name-type-2&quot;]&#x2F;&#x2F;a&#x2F;&#x2F;em&#x2F;text()&#39;)[0].replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;)\n        This_page[&quot;商铺名字&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-shop&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;J_im_icon&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)\n        This_page[&quot;商品价格&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-price&quot;]&#x2F;&#x2F;strong&#x2F;&#x2F;i&#x2F;text()&#39;)[0]\n        product_id &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-commit&quot;]&#x2F;strong&#x2F;a&#x2F;@id&#39;)[0].replace(&quot;J_comment_&quot;, &quot;&quot;)\n        This_page[&quot;评价数量&quot;] &#x3D; get_id(product_id)\n        This_page[&quot;商品规格&quot;] &#x3D; get_inside(product_id)\n        print(This_page)\n        f.write(json.dumps(This_page,ensure_ascii&#x3D;False))\n        f.write((&quot;\\n&quot;))\n\n\ndef main():\n\n    for i in range(1,17,2):\n        url &#x3D; &quot;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;%E9%BB%91%E8%8C%B6&quot; \\\n              &quot;&amp;qrst&#x3D;1&amp;wq&#x3D;%E9%BB%91%E8%8C%B6&amp;stock&#x3D;1&amp;&quot; \\\n              &quot;pvid&#x3D;fbe350dcff064f63bd187e1d1ff18f0b&amp;page&#x3D;&quot;+str(i)\n        headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;\n                                 &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                                 &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                                 &quot;Edg&#x2F;107.0.1418.56&quot;&#125;\n        text &#x3D; get_one_page(url,headers)\n        This_page &#x3D; parse_one_page(text)\n    f.close()\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n</code></pre>\n<h3 id=\"输出-3\"><a href=\"#输出-3\" class=\"headerlink\" title=\"输出\"></a>输出</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;test1.py\n&#123;&#39;商品描述&#39;: &#39;白沙溪 湖南老字号安化&#39;, &#39;商铺名字&#39;: [&#39;白沙溪官方旗舰店&#39;], &#39;商品价格&#39;: &#39;350.00&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: [&#39;储存方法&#39;, &#39;避光；密封；防潮&#39;, &#39;保质期&#39;, &#39;可长期存放，越陈越香&#39;, &#39;生产许可证号&#39;, &#39;SC11443092300115&#39;, &#39;产品标准号&#39;, &#39;见产品外包装标示&#39;, &#39;净含量&#39;, &#39;1000g&#39;]&#125;\n&#123;&#39;商品描述&#39;: &#39;湘丰 茶叶湖南安化&#39;, &#39;商铺名字&#39;: [&#39;湘丰茶叶旗舰店&#39;], &#39;商品价格&#39;: &#39;98.00&#39;, &#39;评价数量&#39;: [&#39;10万+&#39;], &#39;商品规格&#39;: [&#39;生产许可证号&#39;, &#39;SC11443092301023&#39;, &#39;储存方法&#39;, &#39;避光&#39;, &#39;产品标准号&#39;, &#39;GB&#x2F;T 9833.3&#39;, &#39;保质期&#39;, &#39;360000&#39;, &#39;采摘年份&#39;, &#39;2018年&#39;, &#39;净含量&#39;, &#39;1000g&#39;]&#125;\n&#123;&#39;商品描述&#39;: &#39;七春茶叶 六堡茶&#39;, &#39;商铺名字&#39;: [&#39;七春茶业京东自营旗舰店&#39;], &#39;商品价格&#39;: &#39;99.00&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: [&#39;生产许可证号&#39;, &#39;SC11445042100174&#39;, &#39;产品标准号&#39;, &#39;GB&#x2F;T 32719.4-2016&#39;, &#39;储存方法&#39;, &#39;防潮；干燥；常温保存&#39;, &#39;净含量&#39;, &#39;250g&#39;, &#39;保质期&#39;, &#39;在符合贮存条件适宜长期保存&#39;]&#125;\n&#123;&#39;商品描述&#39;: &#39;七春茶叶 安化&#39;, &#39;商铺名字&#39;: [&#39;七春茶业京东自营旗舰店&#39;], &#39;商品价格&#39;: &#39;68.00&#39;, &#39;评价数量&#39;: [&#39;2000+&#39;], &#39;商品规格&#39;: [&#39;生产许可证号&#39;, &#39;QS430914010582&#39;, &#39;产品标准号&#39;, &#39;GB&#x2F;T 9833.3&#39;, &#39;净含量&#39;, &#39;1000g&#39;, &#39;采摘年份&#39;, &#39;2016年&#39;, &#39;保质期&#39;, &#39;符合储存条件可长期保存，品质更佳&#39;, &#39;储存方法&#39;, &#39;避光；防异味；干燥；通风&#39;]&#125;\n&#123;&#39;商品描述&#39;: &#39;安化&#39;, &#39;商铺名字&#39;: [&#39;安化黑茶旗舰店&#39;], &#39;商品价格&#39;: &#39;88.00&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: [&#39;储存方法&#39;, &#39;干燥；通风&#39;, &#39;产品标准号&#39;, &#39;SC11443092301322&#39;, &#39;保质期&#39;, &#39;长期保存&#39;, &#39;生产许可证号&#39;, &#39;SC11443092301322&#39;, &#39;净含量&#39;, &#39;200g&#39;]&#125;\n\n......\n&#123;&#39;商品描述&#39;: &#39;七春 茶叶六堡茶&#39;, &#39;商铺名字&#39;: [&#39;七春茶业京东自营旗舰店&#39;], &#39;商品价格&#39;: &#39;268.00&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: []&#125;\n&#123;&#39;商品描述&#39;: &#39;【白沙溪】湖南老字号安化&#39;, &#39;商铺名字&#39;: [&#39;白沙溪官方旗舰店&#39;], &#39;商品价格&#39;: &#39;165.00&#39;, &#39;评价数量&#39;: [&#39;200+&#39;], &#39;商品规格&#39;: []&#125;\n\n进程已结束,退出代码0\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/5d7097835a2b491ea994205ba0c2286e.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"修改·其二\"><a href=\"#修改·其二\" class=\"headerlink\" title=\"修改·其二\"></a>修改·其二</h2><h3 id=\"代码-4\"><a href=\"#代码-4\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\nfrom lxml import etree\nimport json\nfrom bs4 import BeautifulSoup\nimport re\nimport time\n\ndef get_one_page(url,headers):\n    try:\n        response &#x3D; requests.get(url,headers&#x3D;headers)\n        if response.status_code &#x3D;&#x3D; 200:\n            response.encoding &#x3D; &#39;utf-8&#39;\n            return response.text\n        return None\n    except RequestException:\n        return None\n\ndef get_id(product_id):\n    url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productCommentSummaries.action&quot; \\\n          &quot;?referenceIds&#x3D;&quot;+str(product_id)+&quot;&amp;callback&#x3D;jQuery8827474&quot; \\\n                                           &quot;&amp;_&#x3D;1615298058081&quot;\n\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;\n                             &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                             &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                             &quot;Edg&#x2F;107.0.1418.56&quot;,\n               &quot;Cookie&quot;: &quot;__jdu&#x3D;1976972241; shshshfpa&#x3D;a2dcb9a2-4610-bcf&quot;\n                         &quot;9-11fb-d6121b1432cf-1652110313; shshshfpb&#x3D;nvrX&quot;\n                         &quot;JxBCCj0eG8UiLp9MCww; areaId&#x3D;18; ipLoc-djd&#x3D;18-14&quot;\n                         &quot;82-0-0; PCSYCityID&#x3D;CN_430000_430100_0; __jdc&#x3D;122&quot;\n                         &quot;270672; shshshfp&#x3D;0bcaf8cf9b6bcada873c2260d4c1fce2;&quot;\n                         &quot; unpl&#x3D;JF8EAJJnNSttDEhRDBNWGxVHGV5SWw4AGR4COmVXUQ9&quot;\n                         &quot;eGwFVGQYcF0N7XlVdXhRLFx9sbxRUWVNIUw4ZAisSEXtfVVdc&quot;\n                         &quot;DkgWA25XNVNdUQYVV1YyGBIgS1xkXlUOTB8FbGQAVG1Ze1MFEj&quot;\n                         &quot;IrIhVLXFVaXg5NFAtfZjVWXFlOXAcTARITIAAzVRNdAE0QC2lk&quot;\n                         &quot;BlFdaEpkBg; CCC_SE&#x3D;ADC_8UsmEi14MQp79Oa3KCgpDie2Uak%&quot;\n                         &quot;2fjhKDLxxPgJ1YAwwxFkHyVFPSLAMk05mHrTpGuzccWqxZ5XHh&quot;\n                         &quot;wbeDqXpRIFxCZ%2bgleHpZhqmkVSbPox%2fcQt%2bUunIAYjzVE&quot;\n                         &quot;U%2fWby8i4N0SVJYFSF7LbyxYt7ZqnlHcASH4Ta%2bCjpVi8J9k&quot;\n                         &quot;KIt3Vfjc9JeaduYZo6uR1YEkcOz7FxuchTPT1EZ4RYfIZNFvqtb&quot;\n                         &quot;OuXeIaVsU3ag0CdUWJbd6ky2bVE4MjQid3BItTNOBxIon%2fdFs&quot;\n                         &quot;BY%2b2O7ZS8DzonGXdBNBWZIjJuJTL0UtldEEOqP0k743PWs%2b&quot;\n                         &quot;VRKlc9FnORUbQDV69EMVfWfDx4hHY9RpizuBjT6Q6rTWMtuI5%2b&quot;\n                         &quot;e0uqrUelATzG0iE3V0eNjScxG2nfbtxul%2fAozZ0Uq9HJIrFenV&quot;\n                         &quot;d7fIcsQuQM7olHxevztvMsewqMD7rYQohEWz3b6XUlrxBgvMsgPn&quot;\n                         &quot;SUsJBZEFbdR7bU%2fffzRVDbKs%3d; __jdv&#x3D;122270672|t.zouk&quot;\n                         &quot;ankan.com|t_308072010_|tuiguang|e2489e16fc274b9c80d3c&quot;\n                         &quot;4c7ada3564b|1669706793151; __jda&#x3D;122270672.197697224&quot;\n                         &quot;1.1652110310.1669706793.1669710861.14; 3AB9D23F7A4B3C&quot;\n                         &quot;9B&#x3D;OQL3PN3MRI3XBYLOXXERCIQ7Z57OXAGLHRONDSZ5M7ODU6HF3P&quot;\n                         &quot;VE3ABDTPY4CT2AFP33IB7U4SWYLP7AIDHRRHCDQE&quot;\n               &#125;\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    soup &#x3D; BeautifulSoup(response.text, &quot;lxml&quot;)\n    divs &#x3D; soup.find_all(&#39;p&#39;)\n    count &#x3D; str(divs)\n    pattern &#x3D; re.compile(&#39;.*?&quot;CommentCountStr&quot;:&quot;(.*?)&quot;,&quot;CommentCount&quot;&#39;)\n    result &#x3D; re.findall(pattern, count)\n    return result\n\ndef get_inside(product_id):\n    url &#x3D; &quot;https:&#x2F;&#x2F;item.jd.com&#x2F;&quot;+str(product_id)+&quot;.html&quot;\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) &quot;\n                             &quot;AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&quot;\n                             &quot;&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&quot;,\n               &quot;cookie&quot;: &quot;__jdu&#x3D;1976972241; shshshfpa&#x3D;a2dcb9a2-4610-bcf9-11fb&quot;\n                         &quot;-d6121b1432cf-1652110313; shshshfpb&#x3D;nvrXJxBCCj0eG8Ui&quot;\n                         &quot;Lp9MCww; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; &quot;\n                         &quot;unpl&#x3D;JF8EAJJnNSttDEhRDBNWGxVHGV5SWw4AGR4COmVXUQ9eGwFV&quot;\n                         &quot;GQYcF0N7XlVdXhRLFx9sbxRUWVNIUw4ZAisSEXtfVVdcDkgWA25XN&quot;\n                         &quot;VNdUQYVV1YyGBIgS1xkXlUOTB8FbGQAVG1Ze1MFEjIrIhVLXFVaXg5&quot;\n                         &quot;NFAtfZjVWXFlOXAcTARITIAAzVRNdAE0QC2lkBlFdaEpkBg; __jdv&quot;\n                         &quot;&#x3D;122270672|t.zoukankan.com|t_308072010_|tuiguang|e2489&quot;\n                         &quot;e16fc274b9c80d3c4c7ada3564b|1669706793151; ipLoc-djd&#x3D;18&quot;\n                         &quot;-1482-48942-49058; jsavif&#x3D;0; shshshfp&#x3D;4396dd56f2e336f6c&quot;\n                         &quot;0d0023316880bbb; jsavif&#x3D;0; __jdc&#x3D;122270672; ip_cityCode&quot;\n                         &quot;&#x3D;1482; __jda&#x3D;122270672.1976972241.1652110310.1669905854&quot;\n                         &quot;.1669908237.18; wlfstk_smdl&#x3D;jbvartkoy6uk73vmmr01i1gwywh&quot;\n                         &quot;8cksv; pinId&#x3D;WMysR__pDRvbc0zQc0nuqbV9-x-f3wj7; pin&#x3D;jd_5&quot;\n                         &quot;c02c5f951cdf; unick&#x3D;nh6666666; ceshi3.com&#x3D;000; _tp&#x3D;rVPWM&quot;\n                         &quot;kjk%2BhynCA8DQqV2Z00XZk11GM02ZTxnjvALX6M%3D; _pst&#x3D;jd_5c0&quot;\n                         &quot;2c5f951cdf; token&#x3D;12ee484afd23fc81fa43deffb298ca34,3,927&quot;\n                         &quot;727; __tk&#x3D;2ubX1zrurUS4KwsAKz1C2u1C1w15qUf4qYrWrUbXqzM4qA&quot;\n                         &quot;a4ru2s1n,3,927727; thor&#x3D;572D5C511771350857F36E797E36B313&quot;\n                         &quot;A5A71A4179DC63403E8B40239A892F2D88A262A987639B119D0613C4&quot;\n                         &quot;35E424A75800EE35DFAFD4B2EA16EEB7F8BDEAED7FB93F61A7229AD0&quot;\n                         &quot;F57C1C1010CEAEE6D1D3190F443E9BA9C5AE7357464E37949BAAD23F&quot;\n                         &quot;2BB748AF019C5476DC41D56F5A82A6228664ED79D67E25E5ABF75442&quot;\n                         &quot;E925A261414CD628BE136F150E5DD17D384F7246C2FB21DB16707DB8&quot;\n                         &quot;71C21A0A; user-key&#x3D;14490081-9b45-4028-b8a2-ca60da6a744b; &quot;\n                         &quot;cn&#x3D;15; __jdb&#x3D;122270672.17.1976972241|18.1669908237; shshs&quot;\n                         &quot;hsID&#x3D;6d565320f709e2e89ba01c4c723c55d6_11_1669908836767; 3&quot;\n                         &quot;AB9D23F7A4B3C9B&#x3D;OQL3PN3MRI3XBYLOXXERCIQ7Z57OXAGLHRONDSZ5M&quot;\n                         &quot;7ODU6HF3PVE3ABDTPY4CT2AFP33IB7U4SWYLP7AIDHRRHCDQE&quot;&#125;\n\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    text &#x3D; response.text\n    html &#x3D; etree.HTML(text)\n    list &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[9]&#x2F;&#x2F;div[@class&#x3D;&quot;tab-con&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;hide&quot;]&#x2F;&#x2F;div[@class&#x3D;&quot;Ptable&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;Ptable-item&quot;]&#x2F;&#x2F;dl[@class&#x3D;&quot;clearfix&quot;]&#x2F;&#x2F;text()&#39;)\n    result &#x3D; [x.strip() for x in list if x.strip() !&#x3D; &#39;&#39;]\n    return result\n\nf &#x3D; open(&quot;.&#x2F;京东商城黑茶200条信息1.txt&quot;, &#39;a+&#39;)\ndef parse_one_page(text):\n    This_page &#x3D; &#123;&#125;\n    html &#x3D; etree.HTML(text)\n    items &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[@id&#x3D;&quot;J_goodsList&quot;]&#x2F;ul&#x2F;li&#39;)\n    for item in items:\n        This_page[&quot;商品描述&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-name p-name-type-2&quot;]&#x2F;&#x2F;a&#x2F;&#x2F;em&#x2F;text()&#39;)[0].replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;)\n        This_page[&quot;商铺名字&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-shop&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;J_im_icon&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)\n        This_page[&quot;商品价格&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-price&quot;]&#x2F;&#x2F;strong&#x2F;&#x2F;i&#x2F;text()&#39;)[0]\n        product_id &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-commit&quot;]&#x2F;strong&#x2F;a&#x2F;@id&#39;)[0].replace(&quot;J_comment_&quot;, &quot;&quot;)\n        This_page[&quot;评价数量&quot;] &#x3D; get_id(product_id)\n        This_page[&quot;商品规格&quot;] &#x3D; get_inside(product_id)\n        print(This_page)\n        f.write(json.dumps(This_page,ensure_ascii&#x3D;False))\n        f.write((&quot;\\n&quot;))\n\n\ndef main():\n\n    for i in range(1,17,2):\n        url &#x3D; &quot;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;%E9%BB%91%E8%8C%B6&quot; \\\n              &quot;&amp;qrst&#x3D;1&amp;wq&#x3D;%E9%BB%91%E8%8C%B6&amp;stock&#x3D;1&amp;&quot; \\\n              &quot;pvid&#x3D;fbe350dcff064f63bd187e1d1ff18f0b&amp;page&#x3D;&quot;+str(i)\n        headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;\n                                 &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                                 &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                                 &quot;Edg&#x2F;107.0.1418.56&quot;&#125;\n        text &#x3D; get_one_page(url,headers)\n        This_page &#x3D; parse_one_page(text)\n        #time.sleep(1)\n    f.close()\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n</code></pre>\n<h3 id=\"输出-4\"><a href=\"#输出-4\" class=\"headerlink\" title=\"输出\"></a>输出</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">D:\\coder\\randomnumbers\\venv\\Scripts\\python.exe D:&#x2F;coder&#x2F;randomnumbers&#x2F;test1.py\n&#123;&#39;商品描述&#39;: &#39;中粮集团中茶百年木仓 安化&#39;, &#39;商铺名字&#39;: [&#39;中茶黑茶京东自营旗舰店&#39;], &#39;商品价格&#39;: &#39;129.70&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: [&#39;加工工艺&#39;, &#39;发酵；渥堆&#39;, &#39;储存方法&#39;, &#39;干燥；防潮；防异味&#39;, &#39;净含量&#39;, &#39;1000g&#39;, &#39;产品标准号&#39;, &#39;GB&#x2F;T 32719.5&#39;, &#39;生产许可证号&#39;, &#39;SC11443092300238&#39;, &#39;保质期&#39;, &#39;详见包装&#39;]&#125;\n&#123;&#39;商品描述&#39;: &#39;七春茶叶 六堡茶&#39;, &#39;商铺名字&#39;: [&#39;七春茶业京东自营旗舰店&#39;], &#39;商品价格&#39;: &#39;93.00&#39;, &#39;评价数量&#39;: [&#39;1万+&#39;], &#39;商品规格&#39;: [&#39;生产许可证号&#39;, &#39;SC11445042100174&#39;, &#39;产品标准号&#39;, &#39;GB&#x2F;T 32719.4-2016&#39;, &#39;储存方法&#39;, &#39;防潮；干燥；常温保存&#39;, &#39;净含量&#39;, &#39;250g&#39;, &#39;保质期&#39;, &#39;在符合贮存条件适宜长期保存&#39;]&#125;\n\n\n......\n&#123;&#39;商品描述&#39;: &#39;白沙溪 湖南安化&#39;, &#39;商铺名字&#39;: [], &#39;商品价格&#39;: &#39;470.00&#39;, &#39;评价数量&#39;: [&#39;0&#39;], &#39;商品规格&#39;: [&#39;保质期&#39;, &#39;长期&#39;, &#39;净含量&#39;, &#39;750g&#39;, &#39;储存方法&#39;, &#39;密封；防潮；干燥；避光&#39;]&#125;\n\n进程已结束,退出代码0\n</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/34323e2be87e4f78bee69e45e33e624e.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"依托答辩\"><a href=\"#依托答辩\" class=\"headerlink\" title=\"依托答辩\"></a>依托答辩</h2><h3 id=\"代码-5\"><a href=\"#代码-5\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import requests\nfrom lxml import etree\nimport json\nfrom bs4 import BeautifulSoup\nimport re\nimport time\nimport urllib.error\n\ndef get_id(product_id):\n    url &#x3D; &quot;https:&#x2F;&#x2F;club.jd.com&#x2F;comment&#x2F;productCommentSummaries.action&quot; \\\n          &quot;?referenceIds&#x3D;&quot;+str(product_id)+&quot;&amp;callback&#x3D;jQuery8827474&quot; \\\n                                           &quot;&amp;_&#x3D;1615298058081&quot;\n    # 发送访问请问的head文件\n    # 每个电脑每个京东账号对应的head文件不同，获取方式参考帖子https:&#x2F;&#x2F;blog.csdn.net&#x2F;weixin_41998772&#x2F;article&#x2F;details&#x2F;106476166\n    #\n\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;     \n                             &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                             &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                             &quot;Edg&#x2F;107.0.1418.56&quot;,\n               &quot;Cookie&quot;: &quot;__jdu&#x3D;1976972241; shshshfpa&#x3D;a2dcb9a2-4610-bcf&quot;\n                         &quot;9-11fb-d6121b1432cf-1652110313; shshshfpb&#x3D;nvrX&quot;\n                         &quot;JxBCCj0eG8UiLp9MCww; areaId&#x3D;18; ipLoc-djd&#x3D;18-14&quot;\n                         &quot;82-0-0; PCSYCityID&#x3D;CN_430000_430100_0; __jdc&#x3D;122&quot;\n                         &quot;270672; shshshfp&#x3D;0bcaf8cf9b6bcada873c2260d4c1fce2;&quot;\n                         &quot; unpl&#x3D;JF8EAJJnNSttDEhRDBNWGxVHGV5SWw4AGR4COmVXUQ9&quot;\n                         &quot;eGwFVGQYcF0N7XlVdXhRLFx9sbxRUWVNIUw4ZAisSEXtfVVdc&quot;\n                         &quot;DkgWA25XNVNdUQYVV1YyGBIgS1xkXlUOTB8FbGQAVG1Ze1MFEj&quot;\n                         &quot;IrIhVLXFVaXg5NFAtfZjVWXFlOXAcTARITIAAzVRNdAE0QC2lk&quot;\n                         &quot;BlFdaEpkBg; CCC_SE&#x3D;ADC_8UsmEi14MQp79Oa3KCgpDie2Uak%&quot;\n                         &quot;2fjhKDLxxPgJ1YAwwxFkHyVFPSLAMk05mHrTpGuzccWqxZ5XHh&quot;\n                         &quot;wbeDqXpRIFxCZ%2bgleHpZhqmkVSbPox%2fcQt%2bUunIAYjzVE&quot;\n                         &quot;U%2fWby8i4N0SVJYFSF7LbyxYt7ZqnlHcASH4Ta%2bCjpVi8J9k&quot;\n                         &quot;KIt3Vfjc9JeaduYZo6uR1YEkcOz7FxuchTPT1EZ4RYfIZNFvqtb&quot;\n                         &quot;OuXeIaVsU3ag0CdUWJbd6ky2bVE4MjQid3BItTNOBxIon%2fdFs&quot;\n                         &quot;BY%2b2O7ZS8DzonGXdBNBWZIjJuJTL0UtldEEOqP0k743PWs%2b&quot;\n                         &quot;VRKlc9FnORUbQDV69EMVfWfDx4hHY9RpizuBjT6Q6rTWMtuI5%2b&quot;\n                         &quot;e0uqrUelATzG0iE3V0eNjScxG2nfbtxul%2fAozZ0Uq9HJIrFenV&quot;\n                         &quot;d7fIcsQuQM7olHxevztvMsewqMD7rYQohEWz3b6XUlrxBgvMsgPn&quot;\n                         &quot;SUsJBZEFbdR7bU%2fffzRVDbKs%3d; __jdv&#x3D;122270672|t.zouk&quot;\n                         &quot;ankan.com|t_308072010_|tuiguang|e2489e16fc274b9c80d3c&quot;\n                         &quot;4c7ada3564b|1669706793151; __jda&#x3D;122270672.197697224&quot;\n                         &quot;1.1652110310.1669706793.1669710861.14; 3AB9D23F7A4B3C&quot;\n                         &quot;9B&#x3D;OQL3PN3MRI3XBYLOXXERCIQ7Z57OXAGLHRONDSZ5M7ODU6HF3P&quot;\n                         &quot;VE3ABDTPY4CT2AFP33IB7U4SWYLP7AIDHRRHCDQE&quot;\n               &#125;\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    # response.text 为响应的网页源码内容\n    soup &#x3D; BeautifulSoup(response.text, &quot;lxml&quot;)\n    divs &#x3D; soup.find_all(&#39;p&#39;)\n    count &#x3D; str(divs)\n    pattern &#x3D; re.compile(&#39;.*?&quot;CommentCountStr&quot;:&quot;(.*?)&quot;,&quot;CommentCount&quot;&#39;)\n    result &#x3D; re.findall(pattern, count)\n    return result\n\n\n\ndef get_one_page(url,headers):     #获得网页\n    try:\n        response &#x3D; requests.get(url,headers&#x3D;headers)\n        if response.status_code &#x3D;&#x3D; 200:\n            response.encoding &#x3D; &#39;utf-8&#39;\n            return response.text\n        return None\n    except RequestException:\n        return None\n\n\ndef get_inside(product_id):#获取子目录\n    url &#x3D; &quot;https:&#x2F;&#x2F;item.jd.com&#x2F;&quot;+str(product_id)+&quot;.html&quot;\n    headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) &quot;\n                             &quot;AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&quot;\n                             &quot;&#x2F;107.0.0.0 Safari&#x2F;537.36 Edg&#x2F;107.0.1418.62&quot;,\n               &quot;cookie&quot;: &quot;__jdu&#x3D;1976972241; shshshfpa&#x3D;a2dcb9a2-4610-bcf9-11fb&quot;\n                         &quot;-d6121b1432cf-1652110313; shshshfpb&#x3D;nvrXJxBCCj0eG8Ui&quot;\n                         &quot;Lp9MCww; areaId&#x3D;18; PCSYCityID&#x3D;CN_430000_430100_0; &quot;\n                         &quot;unpl&#x3D;JF8EAJJnNSttDEhRDBNWGxVHGV5SWw4AGR4COmVXUQ9eGwFV&quot;\n                         &quot;GQYcF0N7XlVdXhRLFx9sbxRUWVNIUw4ZAisSEXtfVVdcDkgWA25XN&quot;\n                         &quot;VNdUQYVV1YyGBIgS1xkXlUOTB8FbGQAVG1Ze1MFEjIrIhVLXFVaXg5&quot;\n                         &quot;NFAtfZjVWXFlOXAcTARITIAAzVRNdAE0QC2lkBlFdaEpkBg; __jdv&quot;\n                         &quot;&#x3D;122270672|t.zoukankan.com|t_308072010_|tuiguang|e2489&quot;\n                         &quot;e16fc274b9c80d3c4c7ada3564b|1669706793151; ipLoc-djd&#x3D;18&quot;\n                         &quot;-1482-48942-49058; jsavif&#x3D;0; shshshfp&#x3D;4396dd56f2e336f6c&quot;\n                         &quot;0d0023316880bbb; jsavif&#x3D;0; __jdc&#x3D;122270672; ip_cityCode&quot;\n                         &quot;&#x3D;1482; __jda&#x3D;122270672.1976972241.1652110310.1669905854&quot;\n                         &quot;.1669908237.18; wlfstk_smdl&#x3D;jbvartkoy6uk73vmmr01i1gwywh&quot;\n                         &quot;8cksv; pinId&#x3D;WMysR__pDRvbc0zQc0nuqbV9-x-f3wj7; pin&#x3D;jd_5&quot;\n                         &quot;c02c5f951cdf; unick&#x3D;nh6666666; ceshi3.com&#x3D;000; _tp&#x3D;rVPWM&quot;\n                         &quot;kjk%2BhynCA8DQqV2Z00XZk11GM02ZTxnjvALX6M%3D; _pst&#x3D;jd_5c0&quot;\n                         &quot;2c5f951cdf; token&#x3D;12ee484afd23fc81fa43deffb298ca34,3,927&quot;\n                         &quot;727; __tk&#x3D;2ubX1zrurUS4KwsAKz1C2u1C1w15qUf4qYrWrUbXqzM4qA&quot;\n                         &quot;a4ru2s1n,3,927727; thor&#x3D;572D5C511771350857F36E797E36B313&quot;\n                         &quot;A5A71A4179DC63403E8B40239A892F2D88A262A987639B119D0613C4&quot;\n                         &quot;35E424A75800EE35DFAFD4B2EA16EEB7F8BDEAED7FB93F61A7229AD0&quot;\n                         &quot;F57C1C1010CEAEE6D1D3190F443E9BA9C5AE7357464E37949BAAD23F&quot;\n                         &quot;2BB748AF019C5476DC41D56F5A82A6228664ED79D67E25E5ABF75442&quot;\n                         &quot;E925A261414CD628BE136F150E5DD17D384F7246C2FB21DB16707DB8&quot;\n                         &quot;71C21A0A; user-key&#x3D;14490081-9b45-4028-b8a2-ca60da6a744b; &quot;\n                         &quot;cn&#x3D;15; __jdb&#x3D;122270672.17.1976972241|18.1669908237; shshs&quot;\n                         &quot;hsID&#x3D;6d565320f709e2e89ba01c4c723c55d6_11_1669908836767; 3&quot;\n                         &quot;AB9D23F7A4B3C9B&#x3D;OQL3PN3MRI3XBYLOXXERCIQ7Z57OXAGLHRONDSZ5M&quot;\n                         &quot;7ODU6HF3PVE3ABDTPY4CT2AFP33IB7U4SWYLP7AIDHRRHCDQE&quot;&#125;\n\n    response &#x3D; requests.get(url, headers&#x3D;headers)\n    text &#x3D; response.text\n    html &#x3D; etree.HTML(text)\n    list &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[9]&#x2F;&#x2F;div[@class&#x3D;&quot;tab-con&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;hide&quot;]&#x2F;&#x2F;div[@class&#x3D;&quot;Ptable&quot;]&#x2F;&#x2F;&#39;\n                      &#39;div[@class&#x3D;&quot;Ptable-item&quot;]&#x2F;&#x2F;dl[@class&#x3D;&quot;clearfix&quot;]&#x2F;&#x2F;text()&#39;)\n    result &#x3D; [x.strip() for x in list if x.strip() !&#x3D; &#39;&#39;]\n    return result\n\n\ndef parse_one_page(text):  #检索当前页并打印\n    This_page &#x3D; &#123;&#125;\n    html &#x3D; etree.HTML(text)\n    items &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[@id&#x3D;&quot;J_goodsList&quot;]&#x2F;ul&#x2F;li&#39;)\n    for item in items:\n        This_page[&quot;商品说明&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-name p-name-type-2&quot;]&#x2F;&#x2F;a&#x2F;&#x2F;em&#x2F;text()&#39;)[0].replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;)\n        This_page[&quot;商家名称&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-shop&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;J_im_icon&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)\n        This_page[&quot;价格&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-price&quot;]&#x2F;&#x2F;strong&#x2F;&#x2F;i&#x2F;text()&#39;)[0]\n        product_id &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-commit&quot;]&#x2F;strong&#x2F;a&#x2F;@id&#39;)[0].replace(&quot;J_comment_&quot;, &quot;&quot;)\n        This_page[&quot;评价数&quot;] &#x3D; get_id(product_id)\n        This_page[&quot;包装与规格&quot;] &#x3D; get_inside(product_id)  #子网页获得\n        print(This_page) #终端输出内容\n        f.write(json.dumps(This_page,ensure_ascii&#x3D;False))\n        f.write((&quot;\\n&quot;))\n\n\ndef main():\n\n    for i in range(1,9,1):\n        url &#x3D; &quot;https:&#x2F;&#x2F;search.jd.com&#x2F;Search?keyword&#x3D;%E9%BB%91%E8%8C%B6&quot;\\\n              &quot;&amp;qrst&#x3D;1&amp;wq&#x3D;%E9%BB%91%E8%8C%B6&amp;stock&#x3D;1&amp;&quot;\\\n              &quot;pvid&#x3D;fbe350dcff064f63bd187e1d1ff18f0b&amp;page&#x3D;&quot;+str(i)\n        headers &#x3D; &#123;&quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; &quot;\n                                 &quot;x64) AppleWebKit&#x2F;537.36 (KHTML, like &quot;\n                                 &quot;Gecko) Chrome&#x2F;107.0.0.0 Safari&#x2F;537.36 &quot;\n                                 &quot;Edg&#x2F;107.0.1418.56&quot;&#125;\n        text &#x3D; get_one_page(url,headers)\n        This_page &#x3D; parse_one_page(text)\n        #time.sleep(1)\n    f.close()\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    f &#x3D; open(&quot;.&#x2F;京东商城黑茶200条信息.txt&quot;, &#39;a+&#39;)\n    main()\n</code></pre>\n<h3 id=\"页面查找\"><a href=\"#页面查找\" class=\"headerlink\" title=\"页面查找\"></a>页面查找</h3><p><img src=\"https://img-blog.csdnimg.cn/7a2c5a4bcace434196d4e8752b1f113d.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"商家名称\"><a href=\"#商家名称\" class=\"headerlink\" title=\"商家名称\"></a>商家名称</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def parse_one_page(text):  #检索当前页\n    This_page &#x3D; &#123;&#125;\n    html &#x3D; etree.HTML(text)\n    items &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[@id&#x3D;&quot;J_goodsList&quot;]&#x2F;ul&#x2F;li&#39;)\n    for item in items:\n        This_page[&quot;商品说明&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-name p-name-type-2&quot;]&#x2F;&#x2F;a&#x2F;&#x2F;em&#x2F;text()&#39;)[0].replace(&quot;\\n&quot;,&quot;&quot;).replace(&quot;\\t&quot;,&quot;&quot;)\n        This_page[&quot;商家名称&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-shop&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;J_im_icon&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)\n        This_page[&quot;价格&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-price&quot;]&#x2F;&#x2F;strong&#x2F;&#x2F;i&#x2F;text()&#39;)[0]\n        product_id &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-commit&quot;]&#x2F;strong&#x2F;a&#x2F;@id&#39;)[0].replace(&quot;J_comment_&quot;, &quot;&quot;)\n        This_page[&quot;评价数&quot;] &#x3D; get_id(product_id)\n        This_page[&quot;包装与规格&quot;] &#x3D; get_inside(product_id)  #子网页获得\n        print(This_page)\n        f.write(json.dumps(This_page,ensure_ascii&#x3D;False))\n        f.write((&quot;\\n&quot;))</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">This_page[&quot;商家名称&quot;] &#x3D; item.xpath(&#39;.&#x2F;&#x2F;div[@class&#x3D;&quot;p-shop&quot;]&#x2F;&#x2F;span[@class&#x3D;&quot;J_im_icon&quot;]&#x2F;&#x2F;a&#x2F;text()&#39;)</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7277c3cae5944175b27b94e5fdb8d7ce.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"评论\"><a href=\"#评论\" class=\"headerlink\" title=\"评论\"></a>评论</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">This_page[&quot;评价数&quot;] &#x3D; get_id(product_id)\nThis_page[&quot;包装与规格&quot;] &#x3D; get_inside(product_id)  #子网页获得</code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/fd5186b790384ea69d5c62f844e62501.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"产品与规格（子页面）\"><a href=\"#产品与规格（子页面）\" class=\"headerlink\" title=\"产品与规格（子页面）\"></a>产品与规格（子页面）</h3><p><img src=\"https://img-blog.csdnimg.cn/df27a42a35d542ec8cd58fdee29193aa.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/df89950416cf417e9e13a200266c52db.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2f20fd9a4d2b4341915a7648eb938994.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">list &#x3D; html.xpath(&#39;&#x2F;&#x2F;html&#x2F;&#x2F;body&#x2F;&#x2F;div[9]&#x2F;&#x2F;div[@class&#x3D;&quot;tab-con&quot;]&#x2F;&#x2F;&#39;\n                  &#39;div[@class&#x3D;&quot;hide&quot;]&#x2F;&#x2F;div[@class&#x3D;&quot;Ptable&quot;]&#x2F;&#x2F;&#39;\n                  &#39;div[@class&#x3D;&quot;Ptable-item&quot;]&#x2F;&#x2F;dl[@class&#x3D;&quot;clearfix&quot;]&#x2F;&#x2F;text()&#39;)</code></pre>\n<h4 id=\"成果\"><a href=\"#成果\" class=\"headerlink\" title=\"成果\"></a>成果</h4><p><img src=\"https://img-blog.csdnimg.cn/b81089fafbfe4090a82787747d30ef93.png\" alt=\"在这里插入图片描述\"></p>\n","text":" 电商版项目要求一、项目要求： 获取京东商城中200条黑茶商品信息，保存在文本文件中。要求如下 文件名：京东商城黑茶200条信息.txt 每条商品保存如下信息，商品说明、商家名称、价格 ,评价数，包装与规格 参考1 https://blog.csdn.net/qq_4565750...","link":"","photos":[],"count_time":{"symbolsCount":"93k","symbolsTime":"1:25"},"categories":[{"name":"信管","slug":"信管","count":10,"path":"api/categories/信管.json"}],"tags":[{"name":"python","slug":"python","count":9,"path":"api/tags/python.json"},{"name":"信管","slug":"信管","count":5,"path":"api/tags/信管.json"},{"name":"爬虫","slug":"爬虫","count":2,"path":"api/tags/爬虫.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%94%B5%E5%95%86%E7%89%88\"><span class=\"toc-text\">电商版</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">项目要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%BE%97headers\"><span class=\"toc-text\">获得headers</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%93%8D\"><span class=\"toc-text\">实操</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PART1\"><span class=\"toc-text\">PART1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">输出</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#PART2\"><span class=\"toc-text\">PART2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA-1\"><span class=\"toc-text\">输出</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%85%A5txt\"><span class=\"toc-text\">写入txt</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA-2\"><span class=\"toc-text\">输出</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">效果</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">修改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-3\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA-3\"><span class=\"toc-text\">输出</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%C2%B7%E5%85%B6%E4%BA%8C\"><span class=\"toc-text\">修改·其二</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-4\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA-4\"><span class=\"toc-text\">输出</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E6%89%98%E7%AD%94%E8%BE%A9\"><span class=\"toc-text\">依托答辩</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-5\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B5%E9%9D%A2%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">页面查找</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%95%86%E5%AE%B6%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">商家名称</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%84%E8%AE%BA\"><span class=\"toc-text\">评论</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%A7%E5%93%81%E4%B8%8E%E8%A7%84%E6%A0%BC%EF%BC%88%E5%AD%90%E9%A1%B5%E9%9D%A2%EF%BC%89\"><span class=\"toc-text\">产品与规格（子页面）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%88%90%E6%9E%9C\"><span class=\"toc-text\">成果</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"mapped":true,"prev_post":{"title":"2021APMCM赛后总结——边缘检测","uid":"1940527d2a1b736857ad6c179b7a19e4","slug":"边缘检测","date":"2022-11-03T13:52:49.000Z","updated":"2022-11-04T06:39:15.731Z","comments":true,"path":"api/articles/边缘检测.json","keywords":null,"cover":[],"text":"APMCM被称为小美赛，和美赛一样使用英文提交论文，比赛时间又在国赛后美赛前，因此很适合作为MCM的热身赛。第一次参加这种正规比赛，而且是英文写作，作为对美赛的预热，花四天时间提前演练一下是很有必要的。在日常上课和（几乎）按时休息的条件下，最终，我们队能够拿到二等奖，算是比较满意...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"数模","slug":"数模","count":4,"path":"api/tags/数模.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}},"feature":true},"next_post":{"title":"【文本挖掘】业绩预告原因·其二","uid":"cff508c862505ad67891de36ae9bac94","slug":"文本挖掘-业绩预告2","date":"2022-12-04T10:50:49.000Z","updated":"2022-12-04T11:00:52.491Z","comments":true,"path":"api/articles/文本挖掘-业绩预告2.json","keywords":null,"cover":[],"text":"任务目标 查阅论文 https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&amp;dbname=CJFDLAST2022&amp;filename=GJMW202206010&amp;uniplatform=NZKPT&...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"信管","slug":"信管","count":10,"path":"api/categories/信管.json"},{"name":"机器学习","slug":"信管/机器学习","count":1,"path":"api/categories/信管/机器学习.json"}],"tags":[{"name":"文本挖掘","slug":"文本挖掘","count":3,"path":"api/tags/文本挖掘.json"}],"author":{"name":"Algernon","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/68c4c7d8696c482da565ab5c8ebfa2fa.png","link":"/","description":"谁也没见过风，更别说我和你了","socials":{"github":"https://github.com/Algernon98","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Algernon98","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/281724502"}}}}}}